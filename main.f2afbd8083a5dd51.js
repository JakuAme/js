(self.webpackChunkdextools = self.webpackChunkdextools || []).push([[179], {
    23745: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            E: ()=>e
        });
        var R = m(77579)
          , o = m(94650);
        let e = (()=>{
            class T {
                constructor() {
                    this._showMenu = !1,
                    this._toggleMenu$ = new R.x,
                    this.toggleMenuObs = this._toggleMenu$.asObservable(),
                    this._toggleMenu$.next(this._showMenu)
                }
                toggleMenu() {
                    this._showMenu = !this._showMenu,
                    this._toggleMenu$.next(this._showMenu)
                }
            }
            return T.\u0275fac = function(n) {
                return new (n || T)
            }
            ,
            T.\u0275prov = o.Yz7({
                token: T,
                factory: T.\u0275fac,
                providedIn: "root"
            }),
            T
        }
        )()
    }
    ,
    65679: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            b: ()=>j
        });
        var R = m(15861)
          , o = m(24006)
          , e = m(89383)
          , T = m(18505)
          , ie = m(35684)
          , n = m(95698)
          , Q = m(4326)
          , ve = m(49319)
          , Y = m(52413)
          , H = m(53763)
          , xe = m(12113)
          , ne = m(92216)
          , re = m(36895)
          , Oe = m(92498)
          , p = m(94650)
          , me = m(99703)
          , Le = m(97185);
        function ze(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "div", 10)(1, "label", 21),
                p._uU(2),
                p.ALo(3, "translate"),
                p.TgZ(4, "div", 12),
                p._uU(5),
                p.ALo(6, "translate"),
                p.qZA()(),
                p.TgZ(7, "div", 22)(8, "div", 23)(9, "input", 24),
                p.NdJ("change", function() {
                    p.CHM(D);
                    const ye = p.oxw();
                    return p.KtG(ye.changeHotPairsMovement())
                }),
                p.qZA(),
                p._UZ(10, "label", 25),
                p.qZA()()()
            }
            if (2 & pe) {
                const D = p.oxw();
                p.xp6(2),
                p.hij(" ", p.lcZ(3, 3, "config.enable_hot_pairs"), " "),
                p.xp6(3),
                p.Oqu(p.lcZ(6, 5, !0 === D.hotsMovement.value ? "config.enabled" : "config.disabled")),
                p.xp6(4),
                p.Q6J("formControl", D.hotsMovement)
            }
        }
        function nt(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "div", 10)(1, "label", 26),
                p._uU(2),
                p.ALo(3, "translate"),
                p.TgZ(4, "div", 12),
                p._uU(5),
                p.ALo(6, "translate"),
                p.qZA()(),
                p.TgZ(7, "div", 22)(8, "div", 23)(9, "input", 27),
                p.NdJ("change", function() {
                    p.CHM(D);
                    const ye = p.oxw();
                    return p.KtG(ye.changeCandlesNormalization())
                }),
                p.qZA(),
                p._UZ(10, "label", 28),
                p.qZA()()()
            }
            if (2 & pe) {
                const D = p.oxw();
                p.xp6(2),
                p.hij(" ", p.lcZ(3, 3, "config.enable_candle_normalization"), " "),
                p.xp6(3),
                p.Oqu(p.lcZ(6, 5, !0 === D.candlesNormalization.value ? "config.enabled" : "config.disabled")),
                p.xp6(4),
                p.Q6J("formControl", D.candlesNormalization)
            }
        }
        function N(pe, ue) {
            1 & pe && (p.ynx(0),
            p.TgZ(1, "div"),
            p._uU(2),
            p.ALo(3, "translate"),
            p.qZA(),
            p.BQk()),
            2 & pe && (p.xp6(2),
            p.Oqu(p.lcZ(3, 1, "config.not_supported")))
        }
        function F(pe, ue) {
            1 & pe && (p.TgZ(0, "div"),
            p._uU(1),
            p.ALo(2, "translate"),
            p.qZA()),
            2 & pe && (p.xp6(1),
            p.Oqu(p.lcZ(2, 1, "config.enable_notifications")))
        }
        function L(pe, ue) {
            if (1 & pe && (p.ynx(0),
            p.YNc(1, N, 4, 3, "ng-container", 34),
            p.YNc(2, F, 3, 3, "ng-template", null, 35, p.W1O),
            p.BQk()),
            2 & pe) {
                const D = p.MAs(3)
                  , Z = p.oxw(3);
                p.xp6(1),
                p.Q6J("ngIf", !Z.notificationStatus.supported)("ngIfElse", D)
            }
        }
        function ee(pe, ue) {
            if (1 & pe && (p.TgZ(0, "div", 33),
            p.YNc(1, L, 4, 2, "ng-container", 9),
            p.qZA()),
            2 & pe) {
                const D = p.oxw(2);
                p.xp6(1),
                p.Q6J("ngIf", !D.notificationStatus.enabled)
            }
        }
        function x(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "div", 10)(1, "label", 29),
                p._uU(2),
                p.ALo(3, "translate"),
                p.TgZ(4, "div", 12),
                p._uU(5),
                p.ALo(6, "translate"),
                p.qZA(),
                p.YNc(7, ee, 2, 1, "div", 30),
                p.qZA(),
                p.TgZ(8, "div", 22)(9, "div", 18)(10, "input", 31),
                p.NdJ("click", function() {
                    p.CHM(D);
                    const ye = p.oxw();
                    return p.KtG(ye.changeNotifications())
                }),
                p.qZA(),
                p._UZ(11, "label", 32),
                p.qZA()()()
            }
            if (2 & pe) {
                const D = p.oxw();
                p.xp6(2),
                p.hij(" ", p.lcZ(3, 4, "config.browser_notifications"), " "),
                p.xp6(3),
                p.hij(" ", p.lcZ(6, 6, !0 === D.notificationsEnabled.value ? "config.enabled" : "config.disabled"), " "),
                p.xp6(2),
                p.Q6J("ngIf", !(D.isLoading || D.notificationStatus.enabled && D.notificationStatus.supported)),
                p.xp6(3),
                p.Q6J("formControl", D.notificationsEnabled)
            }
        }
        function V(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "div", 36)(1, "label", 37),
                p._uU(2),
                p.ALo(3, "translate"),
                p.TgZ(4, "div", 38),
                p._uU(5),
                p.ALo(6, "translate"),
                p.qZA(),
                p.TgZ(7, "div", 12),
                p._uU(8),
                p.ALo(9, "translate"),
                p.qZA()(),
                p.TgZ(10, "div", 39)(11, "div", 18)(12, "input", 40),
                p.NdJ("change", function() {
                    p.CHM(D);
                    const ye = p.oxw();
                    return p.KtG(ye.saveTgAlerts())
                }),
                p.qZA(),
                p._UZ(13, "label", 41),
                p.qZA()()()
            }
            if (2 & pe) {
                const D = p.oxw();
                p.xp6(2),
                p.hij(" ", p.lcZ(3, 4, "config.telegram_notifications"), " "),
                p.xp6(3),
                p.Oqu(p.lcZ(6, 6, "config.mail_alerts_info")),
                p.xp6(3),
                p.Oqu(p.lcZ(9, 8, D.telegramAlertsEnabled.value ? "config.enabled" : "config.disabled")),
                p.xp6(4),
                p.Q6J("formControl", D.telegramAlertsEnabled)
            }
        }
        function de(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "div", 42)(1, "div", 43)(2, "div"),
                p._uU(3),
                p.ALo(4, "translate"),
                p.qZA(),
                p.TgZ(5, "div"),
                p._uU(6),
                p.ALo(7, "translate"),
                p.TgZ(8, "a", 44),
                p._uU(9),
                p.qZA()(),
                p.TgZ(10, "span"),
                p._uU(11),
                p.ALo(12, "translate"),
                p.TgZ(13, "span", 45),
                p._uU(14),
                p.qZA(),
                p.TgZ(15, "fa-icon", 46, 47),
                p.NdJ("click", function() {
                    p.CHM(D);
                    const ye = p.MAs(16)
                      , we = p.oxw();
                    return p.KtG(we.copyText(we.userKey, ye))
                }),
                p.ALo(17, "translate"),
                p.qZA()()()()
            }
            if (2 & pe) {
                const D = p.oxw();
                p.xp6(3),
                p.hij(" ", p.lcZ(4, 8, "config.bot_intro"), " "),
                p.xp6(3),
                p.hij(" ", p.lcZ(7, 10, "config.bot_url"), " "),
                p.xp6(2),
                p.Q6J("href", D.botUrl, p.LSH),
                p.xp6(1),
                p.Oqu(D.botUrl),
                p.xp6(2),
                p.hij(" ", p.lcZ(12, 12, "config.bot_key"), " "),
                p.xp6(3),
                p.Oqu(D.userKey),
                p.xp6(1),
                p.s9C("ngbTooltip", p.lcZ(17, 14, "config.copy_clipboard")),
                p.Q6J("autoClose", !1)
            }
        }
        function fe(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "button", 58),
                p.NdJ("click", function() {
                    p.CHM(D);
                    const ye = p.oxw(3);
                    return p.KtG(ye.saveMailAlerts())
                }),
                p._uU(1),
                p.ALo(2, "translate"),
                p.qZA()
            }
            if (2 & pe) {
                const D = p.oxw(3);
                p.Q6J("disabled", !D.emailAlertsAddress.valid || !D.emailAlertsAddress.value),
                p.xp6(1),
                p.hij(" ", p.lcZ(2, 2, "config.save_alerts_email"), " ")
            }
        }
        function Pe(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.TgZ(0, "a", 59),
                p.NdJ("click", function() {
                    p.CHM(D);
                    const ye = p.oxw(3);
                    return p.KtG(ye.enableEmailAddressInput())
                }),
                p._UZ(1, "fa-icon", 60),
                p._uU(2),
                p.ALo(3, "translate"),
                p.qZA()
            }
            2 & pe && (p.xp6(2),
            p.hij(" ", p.lcZ(3, 1, "config.edit_alerts_email"), " "))
        }
        function ge(pe, ue) {
            if (1 & pe && (p.TgZ(0, "div", 53)(1, "div", 54),
            p._UZ(2, "input", 55),
            p.ALo(3, "translate"),
            p.YNc(4, fe, 3, 4, "button", 56),
            p.YNc(5, Pe, 4, 3, "a", 57),
            p.qZA()()),
            2 & pe) {
                const D = p.oxw(2);
                p.xp6(2),
                p.s9C("placeholder", p.lcZ(3, 4, D.showEmailAddressInputPlaceholder)),
                p.Q6J("formControl", D.emailAlertsAddress),
                p.xp6(2),
                p.Q6J("ngIf", !D.showEmailAddressEdit),
                p.xp6(1),
                p.Q6J("ngIf", D.showEmailAddressEdit)
            }
        }
        function Ie(pe, ue) {
            if (1 & pe) {
                const D = p.EpF();
                p.ynx(0),
                p.TgZ(1, "div", 36)(2, "label", 48),
                p._uU(3),
                p.ALo(4, "translate"),
                p.TgZ(5, "div", 49),
                p._uU(6),
                p.ALo(7, "translate"),
                p.qZA(),
                p.TgZ(8, "span", 12),
                p._uU(9),
                p.ALo(10, "translate"),
                p.qZA()(),
                p.TgZ(11, "div", 39)(12, "div", 18)(13, "input", 50),
                p.NdJ("change", function() {
                    p.CHM(D);
                    const ye = p.oxw();
                    return p.KtG(ye.toggleEmailAddressInput())
                }),
                p.qZA(),
                p._UZ(14, "label", 51),
                p.qZA()()(),
                p.YNc(15, ge, 6, 6, "div", 52),
                p.BQk()
            }
            if (2 & pe) {
                const D = p.oxw();
                p.xp6(3),
                p.hij(" ", p.lcZ(4, 5, "config.mail_notifications"), " "),
                p.xp6(3),
                p.Oqu(p.lcZ(7, 7, "config.mail_alerts_info")),
                p.xp6(3),
                p.Oqu(p.lcZ(10, 9, "config.intro_mail")),
                p.xp6(4),
                p.Q6J("formControl", D.emailAlertsEnabled),
                p.xp6(2),
                p.Q6J("ngIf", D.showEmailAddressInput)
            }
        }
        const st = "config.mail_alerts_placeholder";
        let j = (()=>{
            class pe extends Y.K9 {
                constructor(D, Z, ye, we, Ge, Ce, De, ot) {
                    super(),
                    this._translate = D,
                    this._notificationsService = Z,
                    this._authenticationService = ye,
                    this._priceAlertsService = we,
                    this.toastr = Ge,
                    this._cdRef = Ce,
                    this._appRef = De,
                    this._settingsService = ot,
                    this.mobile = !1,
                    this.notificationsEnabled = new o.NI(!1),
                    this.hotsMovement = new o.NI(!1),
                    this.loadHotsMovement = !1,
                    this.candlesNormalization = new o.NI(!1,{
                        nonNullable: !0
                    }),
                    this.loadCandlesNormalization = !1,
                    this.isLoading = !0,
                    this.notificationStatus = {
                        enabled: !1,
                        granted: !1,
                        supported: !1
                    },
                    this.isHolderUser = !1,
                    this.emailAlertsAddress = new o.NI({
                        value: "",
                        disabled: !0
                    },{
                        nonNullable: !0
                    }),
                    this.emailAlertsActive = !1,
                    this.emailAlertsEnabled = new o.NI(!1),
                    this.showEmailAddressInput = !1,
                    this.showEmailAddressInputPlaceholder = st,
                    this.showEmailAddressEdit = !1,
                    this.telegramAlertsEnabled = new o.NI(!1,{
                        nonNullable: !0
                    }),
                    this.actualTheme = new o.NI(!1),
                    this.botUrl = "",
                    this.userKey = "",
                    this.Theme = H.Q2,
                    this.theme = H.Q2.Dark,
                    this.availableLanguages = [{
                        label: "config.english",
                        value: H.SQ.EN
                    }, {
                        label: "config.chinese",
                        value: H.SQ.CN
                    }, {
                        label: "config.spanish",
                        value: H.SQ.ES
                    }, {
                        label: "config.russian",
                        value: H.SQ.RU
                    }, {
                        label: "config.arabic",
                        value: H.SQ.AR
                    }, {
                        label: "config.hindi",
                        value: H.SQ.HI
                    }, {
                        label: "config.turkish",
                        value: H.SQ.TR
                    }],
                    this.selectedLanguage = this.availableLanguages.find(Ze=>Ze.value === H.Vr.supportNavigationLanguage),
                    this.notificationStatusValue = !1,
                    this._settingsService.getConfigChanged$("notifications").pipe((0,
                    Y.sL)(this)).subscribe(Ze=>{
                        this.notificationStatusValue = Ze
                    }
                    ),
                    this._settingsService.getConfigChanged$("language").pipe((0,
                    Y.sL)(this)).subscribe(Ze=>{
                        this.selectedLanguage = this.availableLanguages.find($e=>$e.value === Ze)
                    }
                    ),
                    this._settingsService.getConfigChanged$("hot_movement").pipe((0,
                    Y.sL)(this)).subscribe(Ze=>{
                        this.loadHotsMovement = !0,
                        this.hotsMovement.setValue(!Ze)
                    }
                    ),
                    this._settingsService.getConfigChanged$("candle_normalization").pipe((0,
                    Y.sL)(this)).subscribe(Ze=>{
                        this.loadCandlesNormalization = !0,
                        this.candlesNormalization.setValue(Ze)
                    }
                    ),
                    this._settingsService.onThemeChange$.pipe((0,
                    Y.sL)(this)).subscribe(Ze=>{
                        this.theme = Ze
                    }
                    ),
                    this.notificationsEnabled.setValue(null),
                    this.emailAlertsEnabled.setValue(!1),
                    this.emailAlertsAddress.setValue(""),
                    this.telegramAlertsEnabled.setValue(!1),
                    this.actualTheme.setValue(this.theme === H.Q2.Dark)
                }
                ngOnInit() {
                    var D = this;
                    return (0,
                    R.Z)(function*() {
                        D._authenticationService.currentUser$.pipe((0,
                        Y.sL)(D), (0,
                        T.b)(Z=>{
                            D.isHolderUser = null !== Z && Z && [H.uU.P100, H.uU.P20].includes(Z.plan),
                            D.isHolderUser && D._checkAlerts(),
                            D._cdRef.detectChanges()
                        }
                        )).subscribe();
                        try {
                            D.notificationStatus = yield D._notificationsService.getNotificationStatus(),
                            D._cdRef.detectChanges()
                        } catch {}
                        D._initializeNotificationsForm(),
                        D._cdRef.detectChanges()
                    })()
                }
                _initializeNotificationsForm() {
                    this.notificationsEnabled.setValue(this.notificationStatusValue && this.notificationStatus?.granted),
                    this.notificationStatus && this.notificationStatus.enabled ? this.notificationsEnabled.enable() : this.notificationsEnabled.disable(),
                    this.isLoading = !1
                }
                changeLanguage(D) {
                    this._settingsService.getConfigChanged$("language").pipe((0,
                    ie.T)(1), (0,
                    n.q)(1), (0,
                    Q.g)(50), (0,
                    T.b)(()=>this._showConfirmationMessage()), (0,
                    Q.g)(50)).subscribe(()=>{
                        this._appRef.tick()
                    }
                    ),
                    this._settingsService.changeConfig({
                        language: D.value || "en"
                    })
                }
                changeHotPairsMovement() {
                    this._settingsService.changeConfig({
                        hot_movement: !this.hotsMovement.value
                    }),
                    this._showConfirmationMessage()
                }
                changeCandlesNormalization() {
                    this._settingsService.changeConfig({
                        candle_normalization: this.candlesNormalization.value
                    }),
                    this._showConfirmationMessage()
                }
                changeNotifications() {
                    var D = this;
                    return (0,
                    R.Z)(function*() {
                        const Z = D.notificationsEnabled.value;
                        let ye = !Z;
                        try {
                            D.notificationStatus = yield D._notificationsService.setNotificationStatus(ye),
                            (!D.notificationStatus.enabled || !D.notificationStatus.granted) && (D.notificationsEnabled.setValue(!1),
                            ye = !1),
                            Z !== ye && D._showConfirmationMessage(),
                            D._settingsService.changeConfig({
                                notifications: ye
                            })
                        } catch {
                            D.notificationsEnabled.setValue(Z)
                        }
                        D._cdRef.detectChanges()
                    })()
                }
                saveTgAlerts() {
                    this._priceAlertsService.postAlertRecipientTg({
                        telegram: this.telegramAlertsEnabled.value
                    }).subscribe(D=>{
                        const Z = D.data;
                        this._priceAlertsService.setAlertStatus({
                            telegram: !0
                        }),
                        this._showConfirmationMessage(),
                        this._checkAlerts(),
                        this.botUrl = Z.telegramBotUrl,
                        this.userKey = `/register ${Z.telegramUserKey}`,
                        this._cdRef.detectChanges()
                    }
                    )
                }
                toggleEmailAddressInput() {
                    this.showEmailAddressInput = this.emailAlertsEnabled.value,
                    this.emailAlertsEnabled.value ? this.emailAlertsAddress.enable() : (this.showEmailAddressEdit = !1,
                    this.emailAlertsAddress.setValue(""),
                    this.showEmailAddressInputPlaceholder = st,
                    this.saveMailAlerts()),
                    this._cdRef.detectChanges()
                }
                saveMailAlerts() {
                    this._priceAlertsService.postAlertRecipientEmail({
                        email: this.emailAlertsAddress.value
                    }).subscribe(()=>{
                        this._priceAlertsService.setAlertStatus({
                            email: !0
                        }),
                        this._showConfirmationMessage(),
                        this._checkAlerts()
                    }
                    )
                }
                enableEmailAddressInput() {
                    this.emailAlertsAddress.enable(),
                    this.showEmailAddressEdit = !1
                }
                copyText(D, Z) {
                    (0,
                    xe.vQ)(D, Z)
                }
                onDestroy() {}
                _showConfirmationMessage() {
                    const D = this._translate.instant("config.save_changes");
                    this.toastr.success(D, void 0, {
                        closeButton: !0,
                        positionClass: "toast-bottom-right",
                        timeOut: 3e3
                    })
                }
                _checkAlerts() {
                    this._priceAlertsService.getAlertRecipients().pipe((0,
                    Y.sL)(this), (0,
                    T.b)(D=>{
                        this.emailAlertsAddress.setValue(""),
                        this.emailAlertsActive = !1,
                        this.emailAlertsEnabled.setValue(!1),
                        this.telegramAlertsEnabled.setValue(!1),
                        this.emailAlertsAddress.enable(),
                        this._cdRef.detectChanges(),
                        D.email && (this.emailAlertsEnabled.setValue(!0),
                        this.emailAlertsAddress.setValue(D.email),
                        this.emailAlertsActive = !0,
                        this.showEmailAddressInput = !0,
                        this.showEmailAddressInputPlaceholder = D.email,
                        this.showEmailAddressEdit = !0,
                        this.emailAlertsAddress.disable(),
                        this._cdRef.detectChanges()),
                        D.telegramBotId && D.telegramBotUrl && D.telegramUserKey && (this.telegramAlertsEnabled.setValue(!0),
                        this.botUrl = D.telegramBotUrl,
                        this.userKey = `/register ${D.telegramUserKey}`,
                        this._cdRef.detectChanges()),
                        this.isLoading = !1
                    }
                    )).subscribe()
                }
                changeTheme() {
                    this._settingsService.changeConfig({
                        dark_theme: this.theme === H.Q2.Light
                    })
                }
            }
            return pe.\u0275fac = function(D) {
                return new (D || pe)(p.Y36(e.sK),p.Y36(H.TF),p.Y36(H.$h),p.Y36(me.Pld),p.Y36(Le._W),p.Y36(p.sBO),p.Y36(p.z2F),p.Y36(H.gb))
            }
            ,
            pe.\u0275cmp = p.Xpm({
                type: pe,
                selectors: [["app-settings-panel"]],
                inputs: {
                    mobile: "mobile"
                },
                standalone: !0,
                features: [p.qOj, p.jDz],
                decls: 32,
                vars: 22,
                consts: [[1, "panel-content"], [1, "row"], [1, "col-12"], [1, "card", "mb-4"], [1, "card-body", "p-0"], [3, "appLoading"], ["class", "row my-4", 4, "ngIf"], ["class", "row mt-3", 4, "ngIf"], ["class", "col-form-label pt-0", 4, "ngIf"], [4, "ngIf"], [1, "row", "my-4"], ["for", "language", 1, "col", "col-form-label"], [1, "form-text", "text-muted"], [1, "col", "d-flex", "justify-content-end", "align-items-center"], ["id", "language", 3, "items", "selectedItem", "itemSelected"], [1, "row", "mt-4"], ["for", "dark-mode", 1, "col", "col-form-label"], [1, "col", "d-flex", "flex-column", "align-items-end", "flex-column"], [1, "form-check", "form-switch", "my-auto"], ["type", "checkbox", "id", "dark-mode", 1, "form-check-input", 3, "formControl", "change"], ["for", "dark-mode", 1, "form-check-label"], ["for", "hot_movement", 1, "col", "col-form-label"], [1, "col", "d-flex", "justify-content-end"], [1, "my-auto", "form-check", "form-switch"], ["type", "checkbox", "id", "hot_movement", 1, "form-check-input", 3, "formControl", "change"], ["for", "hot_movement", 1, "form-check-label"], ["for", "candle_normalization", 1, "col", "col-form-label"], ["type", "checkbox", "id", "candle_normalization", 1, "form-check-input", 3, "formControl", "change"], ["for", "candle_normalization", 1, "form-check-label"], ["for", "notifications_input", 1, "col", "col-form-label"], ["class", "browser-alerts-info text-muted", 4, "ngIf"], ["type", "checkbox", "id", "notifications_input", 1, "form-check-input", 3, "formControl", "click"], ["for", "notifications_input", 1, "form-check-label"], [1, "browser-alerts-info", "text-muted"], [4, "ngIf", "ngIfElse"], ["disabledMessage", ""], [1, "row", "mt-3"], ["for", "telegram-alerts", 1, "col", "col-form-label", "pb-0"], [1, "tg-alerts-info", "text-muted"], [1, "col", "d-flex", "flex-column", "align-items-end"], ["type", "checkbox", "id", "telegram-alerts", 1, "form-check-input", 3, "formControl", "change"], ["for", "telegram-alerts", 1, "form-check-label"], [1, "col-form-label", "pt-0"], [1, "form-text"], ["target", "_blank", "rel", "noopener", 3, "href"], [1, "tg-command", "me-1"], ["icon", "copy", "placement", "bottom", 1, "copy-icon", 3, "ngbTooltip", "autoClose", "click"], ["t1", "ngbTooltip"], ["for", "mail-alerts", 1, "col", "col-form-label"], [1, "email-alerts-info", "text-muted"], ["type", "checkbox", "id", "email-alerts", 1, "form-check-input", 3, "formControl", "change"], ["for", "email-alerts", 1, "form-check-label"], ["class", "row row-email", 4, "ngIf"], [1, "row", "row-email"], [1, "col-12", "d-flex"], ["appRestrictInput", "^[A-Za-z0-9.\\-\\s\\@\\_]*$", "type", "email", "id", "mail-alerts", "autocomplete", "off", "email", "", "maxlength", "50", 1, "form-control", "input-lg", "w-300", 3, "formControl", "placeholder"], ["class", "btn btn-primary btn-lg mx-2", 3, "disabled", "click", 4, "ngIf"], ["class", "btn btn-dark btn-lg mx-2", 3, "click", 4, "ngIf"], [1, "btn", "btn-primary", "btn-lg", "mx-2", 3, "disabled", "click"], [1, "btn", "btn-dark", "btn-lg", "mx-2", 3, "click"], ["icon", "edit", 1, "me-1"]],
                template: function(D, Z) {
                    1 & D && (p.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "div", 4),
                    p._UZ(5, "div", 5),
                    p.YNc(6, ze, 11, 7, "div", 6),
                    p.YNc(7, nt, 11, 7, "div", 6),
                    p.YNc(8, x, 12, 8, "div", 6),
                    p.YNc(9, V, 14, 10, "div", 7),
                    p.YNc(10, de, 18, 16, "div", 8),
                    p.YNc(11, Ie, 16, 11, "ng-container", 9),
                    p.TgZ(12, "div", 10)(13, "label", 11),
                    p._uU(14),
                    p.ALo(15, "translate"),
                    p.TgZ(16, "div", 12),
                    p._uU(17),
                    p.ALo(18, "translate"),
                    p.qZA()(),
                    p.TgZ(19, "div", 13)(20, "app-dropdown-select", 14),
                    p.NdJ("itemSelected", function(we) {
                        return Z.changeLanguage(we)
                    }),
                    p.qZA()()(),
                    p.TgZ(21, "div", 15)(22, "label", 16),
                    p._uU(23),
                    p.ALo(24, "translate"),
                    p.TgZ(25, "div", 12),
                    p._uU(26),
                    p.ALo(27, "translate"),
                    p.qZA()(),
                    p.TgZ(28, "div", 17)(29, "div", 18)(30, "input", 19),
                    p.NdJ("change", function() {
                        return Z.changeTheme()
                    }),
                    p.qZA(),
                    p._UZ(31, "label", 20),
                    p.qZA()()()()()()()()),
                    2 & D && (p.xp6(5),
                    p.Q6J("appLoading", Z.isLoading),
                    p.xp6(1),
                    p.Q6J("ngIf", Z.loadHotsMovement),
                    p.xp6(1),
                    p.Q6J("ngIf", Z.loadCandlesNormalization),
                    p.xp6(1),
                    p.Q6J("ngIf", !Z.isLoading),
                    p.xp6(1),
                    p.Q6J("ngIf", Z.isHolderUser),
                    p.xp6(1),
                    p.Q6J("ngIf", Z.botUrl && Z.userKey && Z.isHolderUser),
                    p.xp6(1),
                    p.Q6J("ngIf", Z.isHolderUser),
                    p.xp6(3),
                    p.hij(" ", p.lcZ(15, 14, "config.select_language"), " "),
                    p.xp6(3),
                    p.Oqu(p.lcZ(18, 16, "config.change_language")),
                    p.xp6(3),
                    p.Q6J("items", Z.availableLanguages)("selectedItem", Z.selectedLanguage),
                    p.xp6(3),
                    p.hij(" ", p.lcZ(24, 18, "header.theme_mode"), " "),
                    p.xp6(3),
                    p.Oqu(p.lcZ(27, 20, Z.actualTheme.value ? "config.enabled" : "config.disabled")),
                    p.xp6(4),
                    p.Q6J("formControl", Z.actualTheme))
                },
                dependencies: [xe.TH, re.O5, o.u5, o.Fj, o.Wl, o.JJ, o.nD, o.on, o.UX, o.oH, ne.uH, ne.BN, ve._L, xe._e, e.aw, e.X$, Oe.O7],
                styles: [".panel-content[_ngcontent-%COMP%]{padding:0 1.25rem}.panel-content.reduced-padding-right[_ngcontent-%COMP%]{padding-right:.625rem}.panel-content[_ngcontent-%COMP%]   .col-form-label[_ngcontent-%COMP%]{flex:0 auto 0}.panel-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{display:flex}.panel-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%] > .col[_ngcontent-%COMP%]:last-child{max-width:3.125rem}.panel-content[_ngcontent-%COMP%]   .row-email[_ngcontent-%COMP%]{margin-top:.5rem}.panel-content[_ngcontent-%COMP%]   .row-email[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:20rem;background-color:#e2e7ec}.panel-content[_ngcontent-%COMP%]   .row-email[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-size:13px}.browser-alerts-info[_ngcontent-%COMP%], .tg-alerts-info[_ngcontent-%COMP%]{font-size:.625rem;margin-top:.125rem}.email-alerts-info[_ngcontent-%COMP%]{font-size:.625rem;margin-top:.25rem}.tg-command[_ngcontent-%COMP%]{color:#142028}body.dark-theme   [_nghost-%COMP%]   .tg-command[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .tg-command[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .tg-command[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .tg-command[_ngcontent-%COMP%]{color:#142028}.copy-icon[_ngcontent-%COMP%]{cursor:pointer}.btn[_ngcontent-%COMP%]{padding-top:.4375rem;padding-bottom:.4375rem}app-dropdown-select[_ngcontent-%COMP%]     .item-selected{min-width:7.5rem;justify-content:space-between;padding-left:.625rem;padding-right:.625rem}app-dropdown-select[_ngcontent-%COMP%]     .dropdown-list{min-width:7.5rem}app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option{background-color:#23323c}body.light   [_nghost-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option{background-color:#e2e7ec}app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option:hover{background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option:hover{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option:hover{background-color:#142028}body.light   [_nghost-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option:hover{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   app-dropdown-select[_ngcontent-%COMP%]     .dropdown-option:hover{background-color:#f4f5f6}app-dropdown-select[_ngcontent-%COMP%]     .label{text-transform:none}@media (max-width: 599px){.main-content-container[_ngcontent-%COMP%]{padding-left:.625rem;padding-right:.625rem}.main-content-container[_ngcontent-%COMP%] > .row[_ngcontent-%COMP%]{margin-left:0;margin-right:0}.main-content-container[_ngcontent-%COMP%] > .row[_ngcontent-%COMP%] > .col[_ngcontent-%COMP%]{padding-left:0;padding-right:0}}@media (max-width: 1023px){.panel-content[_ngcontent-%COMP%]{overflow-y:auto;overflow-x:hidden}.panel-content[_ngcontent-%COMP%]   .row-email[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{flex-flow:column}.panel-content[_ngcontent-%COMP%]   .row-email[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;margin-bottom:.625rem;max-width:100%}.panel-content[_ngcontent-%COMP%]   .row-email[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin-left:0!important;justify-content:center}.panel-content[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{background-color:#fff}body.dark-theme   [_nghost-%COMP%]   .panel-content[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .panel-content[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{background-color:#0b1217}body.light   [_nghost-%COMP%]   .panel-content[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{background-color:#fff}body.light[_ngcontent-%COMP%]   .panel-content[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{background-color:#fff}}body.dark-theme   [_nghost-%COMP%]     .panel-content .row-email input{background-color:#23323c!important}"],
                changeDetection: 0
            }),
            pe
        }
        )()
    }
    ,
    98979: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            e: ()=>n
        });
        var R = m(49319)
          , o = m(89383)
          , e = m(92216)
          , T = m(94650);
        const ie = function() {
            return ["fal", "times"]
        };
        let n = (()=>{
            class Q {
                constructor(Y) {
                    this.modal = Y
                }
            }
            return Q.\u0275fac = function(Y) {
                return new (Y || Q)(T.Y36(R.Kz))
            }
            ,
            Q.\u0275cmp = T.Xpm({
                type: Q,
                selectors: [["app-social-icons-modal"]],
                standalone: !0,
                features: [T.jDz],
                decls: 28,
                vars: 29,
                consts: [[1, "modal-header"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["placement", "left", 3, "icon", "ngbTooltip"], [1, "modal-body"], [1, "header-title"], [1, "text-uppercase"], [3, "innerHTML"], [1, "mb-0", 3, "innerHTML"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-cancel", "me-1", 3, "click"], ["href", "https://docs.google.com/forms/d/e/1FAIpQLSd1BAqjAl9nntlS2mOk76tE0Q-dEf-AT1bUblDXikjZ-PNP1Q/viewform?usp=sharing", "target", "_blank", "rel", "noopener", 1, "btn", "btn-primary"]],
                template: function(Y, H) {
                    1 & Y && (T.TgZ(0, "div", 0)(1, "button", 1),
                    T.NdJ("click", function() {
                        return H.modal.close()
                    }),
                    T._UZ(2, "fa-icon", 2),
                    T.ALo(3, "translate"),
                    T.qZA()(),
                    T.TgZ(4, "div", 3)(5, "div", 4)(6, "h4"),
                    T._uU(7),
                    T.ALo(8, "translate"),
                    T.qZA(),
                    T.TgZ(9, "span", 5),
                    T._uU(10),
                    T.ALo(11, "translate"),
                    T.qZA()(),
                    T.TgZ(12, "div"),
                    T._UZ(13, "p", 6),
                    T.ALo(14, "translate"),
                    T._UZ(15, "p", 6),
                    T.ALo(16, "translate"),
                    T._UZ(17, "p", 6),
                    T.ALo(18, "translate"),
                    T._UZ(19, "p", 7),
                    T.ALo(20, "translate"),
                    T.qZA()(),
                    T.TgZ(21, "div", 8)(22, "button", 9),
                    T.NdJ("click", function() {
                        return H.modal.close()
                    }),
                    T._uU(23),
                    T.ALo(24, "translate"),
                    T.qZA(),
                    T.TgZ(25, "a", 10),
                    T._uU(26),
                    T.ALo(27, "translate"),
                    T.qZA()()),
                    2 & Y && (T.xp6(2),
                    T.Q6J("icon", T.DdM(28, ie))("ngbTooltip", T.lcZ(3, 10, "home.close")),
                    T.xp6(5),
                    T.Oqu(T.lcZ(8, 12, "pair_explorer.social_modal.title")),
                    T.xp6(3),
                    T.Oqu(T.lcZ(11, 14, "pair_explorer.social_modal.subtitle")),
                    T.xp6(3),
                    T.Q6J("innerHTML", T.lcZ(14, 16, "pair_explorer.social_modal.first_paragraph"), T.oJD),
                    T.xp6(2),
                    T.Q6J("innerHTML", T.lcZ(16, 18, "pair_explorer.social_modal.second_paragraph"), T.oJD),
                    T.xp6(2),
                    T.Q6J("innerHTML", T.lcZ(18, 20, "pair_explorer.social_modal.third_paragraph"), T.oJD),
                    T.xp6(2),
                    T.Q6J("innerHTML", T.lcZ(20, 22, "pair_explorer.social_modal.fourth_paragraph"), T.oJD),
                    T.xp6(4),
                    T.hij(" ", T.lcZ(24, 24, "pair_explorer.price_alert.cancel"), " "),
                    T.xp6(3),
                    T.Oqu(T.lcZ(27, 26, "pair_explorer.social_modal.form_button")))
                },
                dependencies: [e.uH, e.BN, R._L, o.aw, o.X$],
                styles: [".btn[_ngcontent-%COMP%]{border-radius:3.125rem;height:2.5rem;display:flex;align-items:center}.header-title[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;gap:.125rem;margin-bottom:1.25rem}.header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3;font-size:13px}body.dark-theme   [_nghost-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}p[_ngcontent-%COMP%]{color:#142028;font-size:13px;font-weight:400}body.dark-theme   [_nghost-%COMP%]   p[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   p[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#142028}.btn-cancel[_ngcontent-%COMP%]{background-color:#e2e7ec;color:#142028}body.dark-theme   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#142028}.modal-header[_ngcontent-%COMP%]{padding-bottom:0}.modal-body[_ngcontent-%COMP%]{padding-top:0}"],
                changeDetection: 0
            }),
            Q
        }
        )()
    }
    ,
    90628: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            r: ()=>e
        });
        var R = m(89383)
          , o = m(94650);
        let e = (()=>{
            class T {
                constructor() {}
            }
            return T.\u0275fac = function(n) {
                return new (n || T)
            }
            ,
            T.\u0275cmp = o.Xpm({
                type: T,
                selectors: [["app-social-icons-panel"]],
                standalone: !0,
                features: [o.jDz],
                decls: 19,
                vars: 18,
                consts: [[1, "panel-content", "social-icons-panel"], [1, "social-icons-container"], [1, "header-title"], [3, "innerHTML"], [1, "mb-0", 3, "innerHTML"], [1, "social-icons-footer"], ["href", "https://docs.google.com/forms/d/e/1FAIpQLSd1BAqjAl9nntlS2mOk76tE0Q-dEf-AT1bUblDXikjZ-PNP1Q/viewform?usp=sharing", "target", "_blank", "rel", "noopener", 1, "btn", "btn-primary"]],
                template: function(n, Q) {
                    1 & n && (o.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "span"),
                    o._uU(4),
                    o.ALo(5, "translate"),
                    o.qZA()(),
                    o.TgZ(6, "div"),
                    o._UZ(7, "p", 3),
                    o.ALo(8, "translate"),
                    o._UZ(9, "p", 3),
                    o.ALo(10, "translate"),
                    o._UZ(11, "p", 3),
                    o.ALo(12, "translate"),
                    o._UZ(13, "p", 4),
                    o.ALo(14, "translate"),
                    o.qZA()(),
                    o.TgZ(15, "div", 5)(16, "a", 6),
                    o._uU(17),
                    o.ALo(18, "translate"),
                    o.qZA()()()),
                    2 & n && (o.xp6(4),
                    o.Oqu(o.lcZ(5, 6, "pair_explorer.social_modal.subtitle")),
                    o.xp6(3),
                    o.Q6J("innerHTML", o.lcZ(8, 8, "pair_explorer.social_modal.first_paragraph"), o.oJD),
                    o.xp6(2),
                    o.Q6J("innerHTML", o.lcZ(10, 10, "pair_explorer.social_modal.second_paragraph"), o.oJD),
                    o.xp6(2),
                    o.Q6J("innerHTML", o.lcZ(12, 12, "pair_explorer.social_modal.third_paragraph"), o.oJD),
                    o.xp6(2),
                    o.Q6J("innerHTML", o.lcZ(14, 14, "pair_explorer.social_modal.fourth_paragraph"), o.oJD),
                    o.xp6(4),
                    o.Oqu(o.lcZ(18, 16, "pair_explorer.social_modal.form_button")))
                },
                dependencies: [R.aw, R.X$],
                styles: [".social-icons-panel[_ngcontent-%COMP%]{padding:1.875rem 0 0 1.25rem}.social-icons-footer[_ngcontent-%COMP%]{height:5.5rem;display:flex;align-items:center;justify-content:center;padding:1.25rem 1.25rem 1.25rem 0}.social-icons-footer[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{height:3rem;line-height:3rem;width:100%;padding:0 1.25rem;font-size:13px;border-radius:3.125rem;box-shadow:none!important}.social-icons-footer[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:active{background-color:#00a2bf;border-color:#00a2bf}.social-icons-container[_ngcontent-%COMP%]{height:calc(100% - 88px);overflow-y:auto}.header-title[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;margin-bottom:1.25rem}.header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3;text-transform:capitalize;font-size:13px}body.dark-theme   [_nghost-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#818ea3}p[_ngcontent-%COMP%]{color:#142028;font-size:12px;font-weight:400}body.dark-theme   [_nghost-%COMP%]   p[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   p[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#142028}.btn-cancel[_ngcontent-%COMP%]{background-color:#e2e7ec;color:#142028}body.dark-theme   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .btn-cancel[_ngcontent-%COMP%]{color:#142028}"],
                changeDetection: 0
            }),
            T
        }
        )()
    }
    ,
    37100: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            Z: ()=>R,
            l: ()=>o
        });
        const R = {
            android: {
                dark: "assets/img/qr-android-app-dark.png",
                light: "assets/img/qr-android-app-light.png"
            },
            ios: {
                dark: "assets/img/qr-ios-app-dark.png",
                light: "assets/img/qr-ios-app-light.png"
            }
        }
          , o = {
            android: "https://play.google.com/store/apps/details?id=io.dextools.app",
            ios: "https://apps.apple.com/us/app/dextools/id1628834724"
        }
    }
    ,
    33269: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            $: ()=>R
        });
        var R = (()=>{
            return (o = R || (R = {})).Dashboard = "/",
            o.BigSwap = "big-swap-explorer",
            o.LiveNewPairs = "pool-explorer",
            o.PairExplorer = "pair-explorer",
            o.Multiswap = "multi-swap",
            o.WalletInfo = "wallet-info",
            o.Stats = "stats",
            o.Multichart = "multichart",
            o.Dextswap = "dextswap",
            R;
            var o
        }
        )()
    }
    ,
    86612: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            y: ()=>n
        });
        var R = m(15861)
          , o = m(33723)
          , e = m(53763)
          , T = m(94650);
        const ie = "https://stats.dextools.io/";
        let n = (()=>{
            class Q {
                constructor(Y) {
                    this._injector = Y,
                    this._environment = this._injector.get(e.qA)
                }
                initialize() {
                    if (!this._environment.static_generation) {
                        if (null == window._paq)
                            throw Error("Analytics: script not loaded yet");
                        this._matomo = this._injector.get(o.q),
                        this._matomo.startTracking()
                    }
                }
                loadScript() {
                    var Y = this;
                    return (0,
                    R.Z)(function*() {
                        return new Promise(Y._environment.static_generation ? (H,xe)=>H("no need to load script") : (H,xe)=>{
                            const ne = window._paq = window._paq || [];
                            ne.push(["enableLinkTracking"]),
                            ne.push(["setTrackerUrl", ie + "mtmdata.php"]),
                            ne.push(["setSiteId", Y._environment.siteId]);
                            const re = document
                              , Oe = re.createElement("script")
                              , p = re.getElementsByTagName("script")[0];
                            Oe.type = "text/javascript",
                            Oe.async = !0,
                            Oe.defer = !0,
                            Oe.src = ie + "mtmdata.js",
                            Oe.onload = ()=>{
                                H("script loaded")
                            }
                            ,
                            p.parentNode.insertBefore(Oe, p)
                        }
                        )
                    })()
                }
                eventEmitter(Y, H, xe, ne=null) {}
                trackPage(Y) {
                    this._matomo ? this._matomo.pageTrack(Y) : console.warn("Analytics not loaded, cannot track")
                }
            }
            return Q.\u0275fac = function(Y) {
                return new (Y || Q)(T.LFG(T.zs3))
            }
            ,
            Q.\u0275prov = T.Yz7({
                token: Q,
                factory: Q.\u0275fac,
                providedIn: "root"
            }),
            Q
        }
        )()
    }
    ,
    1321: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            c: ()=>ie
        });
        var R = m(99703)
          , o = m(52413)
          , e = m(33269)
          , T = m(70383);
        class ie {
            static isPageAvailableInChain(Q, ve) {
                return !(ve && Q === e.$.BigSwap && !R.CXF.getChainData(ve).bigSwapsSupported || ve && Q === e.$.Multiswap && [R.qop.Solana, R.qop.Filecoin].includes(ve) || ve && Q === e.$.Stats && [R.qop.Filecoin].includes(ve) || ve && Q === e.$.Dextswap && !T.m.isChainSupported(ve) || Q !== e.$.Dashboard && !ve)
            }
            static getChainPageFromUrl(Q) {
                const ve = o.lM.convertEnumToArray(e.$);
                let Y = null;
                for (const H of ve)
                    if (H === e.$.Dashboard) {
                        const xe = o.lM.convertEnumToArray(R.qop).map(ze=>ze).join("|")
                          , ne = `(${xe})$`
                          , Oe = `(${H}([a-z]{2}))(\\?.*|\\#.*)?$`
                          , p = `(${H}([a-z]{2}))${H}(${xe})(\\?.*|\\#.*)?$`
                          , me = o.lM.convertEnumToArray(R.T4m).join("|");
                        if ([new RegExp(ne), new RegExp(p), new RegExp(Oe), new RegExp(me)].some(ze=>ze.test(Q))) {
                            Y = H;
                            break
                        }
                    } else if (Q.match(H)) {
                        Y = H;
                        break
                    }
                return Y
            }
        }
    }
    ,
    58405: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            K: ()=>R
        });
        class R {
            constructor(e, T) {
                this.code = e,
                this.name = T
            }
            toString() {
                return this.name
            }
        }
        R.SMALL = new R("sm","small"),
        R.MEDIUM = new R("md","medium"),
        R.LARGE = new R("lg","large")
    }
    ,
    30501: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            D: ()=>N
        });
        var R = m(4707)
          , o = m(54009)
          , e = m(4326)
          , T = m(18505)
          , ie = m(65535)
          , n = m(62843)
          , Q = m(54004)
          , ve = m(39646)
          , Y = m(70262)
          , H = m(53763)
          , xe = m(52413)
          , ne = m(58405)
          , re = m(94650);
        const ze = new RegExp(/-{3}.*/g);
        let N = (()=>{
            class F extends xe.K9 {
                constructor(ee, x) {
                    super(),
                    this.apiService = ee,
                    this._environment = x,
                    this._sponsorList$ = new R.t(0),
                    this.sponsorList$ = this._sponsorList$.asObservable(),
                    this._bannerList$ = new R.t(0),
                    this.bannerList$ = this._bannerList$.asObservable(),
                    this.bannerInitialDelay = 0
                }
                setBannerInitialDelay(ee) {
                    this.bannerInitialDelay = ee
                }
                removeBannerInitialDelay() {
                    this.bannerInitialDelay = 0
                }
                getFeatured(ee) {
                    let x = this.apiService.get("back_url", "/featured");
                    return ee && (x = this.apiService.getUrl(this._environment.paths && this._environment.paths.sponsors.edit)),
                    x.pipe((0,
                    xe.sL)(this), (0,
                    o.a)(V=>V.pipe((0,
                    e.g)(300500), (0,
                    xe.sL)(this))), (0,
                    T.b)(V=>{
                        this._sponsorList$.next(V)
                    }
                    ), (0,
                    ie.a)(V=>V.pipe((0,
                    e.g)(18e4), (0,
                    xe.sL)(this))))
                }
                postFeatured(ee, x) {
                    if (x)
                        return this.apiService.postUrl(this._environment.paths && this._environment.paths.sponsors.edit, ee);
                    const V = {
                        error: {
                            error: {
                                desc: "User cannot manage sponsors"
                            }
                        }
                    };
                    return (0,
                    n._)(()=>new Error(JSON.stringify(V)))
                }
                deleteFeatured(ee, x) {
                    return x ? this.apiService.deleteUrl(this._environment.paths && this._environment.paths.sponsors.edit, ee) : (0,
                    n._)(()=>new Error("User cannot delete sponsors"))
                }
                getBanners(ee, x, V=null) {
                    const de = x && V ? "?filter=all&" : !x && V ? "?" : x && !V ? "?filter=all" : "";
                    let fe = this.apiService.get("back_url", "/banner" + de + (V = V ? `product=${V}` : ""));
                    return ee && (fe = this.apiService.getUrl(this._environment.paths && this._environment.paths.banner.edit + de + V)),
                    fe.pipe((0,
                    xe.sL)(this), (0,
                    o.a)(Pe=>Pe.pipe((0,
                    e.g)(1803e4), (0,
                    xe.sL)(this))), (0,
                    T.b)(Pe=>{
                        this._bannerList$.next(Pe.data)
                    }
                    ), (0,
                    Q.U)(Pe=>Pe.data ?? []), (0,
                    ie.a)(Pe=>Pe.pipe((0,
                    e.g)(18e4), (0,
                    xe.sL)(this))))
                }
                postBanners(ee, x) {
                    if (x)
                        return this.apiService.postFormDataUrl(this._environment.paths && this._environment.paths.banner.edit, ee);
                    const V = {
                        error: {
                            error: {
                                desc: "User cannot manage sponsors"
                            }
                        }
                    };
                    return (0,
                    n._)(()=>new Error(JSON.stringify(V)))
                }
                deleteBanners(ee, x, V=!0) {
                    return x ? this.apiService.delete("back_url", "/banner/zzz-banner", {
                        name: ee,
                        deleteFolder: V
                    }) : (0,
                    n._)(()=>new Error("User cannot delete sponsors"))
                }
                getBannerImage(ee, x, V) {
                    return this.apiService.getImage(`${this._environment.host}/banners/${ee}/${x.name}.${V}`)
                }
                replaceSponsorSuffix(ee) {
                    return ee.name = ee.name?.replace(ze, "") ?? "",
                    ee
                }
                fillSocialLinks(ee, x) {
                    let V = ee.map(de=>{
                        const fe = de;
                        return fe.socialLinks.length > 0 && (fe.links = {
                            web: "",
                            twitter: "",
                            telegram: "",
                            discord: ""
                        },
                        fe.socialLinks.forEach(Pe=>{
                            "web" === Pe.name && fe.links && (fe.links.web = Pe.link),
                            "twitter" === Pe.name && fe.links && (fe.links.twitter = Pe.link),
                            "telegram" === Pe.name && fe.links && (fe.links.telegram = Pe.link),
                            "discord" === Pe.name && fe.links && (fe.links.discord = Pe.link)
                        }
                        )),
                        fe
                    }
                    );
                    return V = x ? V.filter(de=>de.chain.includes(x)) : V,
                    V
                }
                fetchCarouselBannerImage(ee) {
                    return this.getBannerImage(ee.name, ne.K.SMALL, ee.fileExt).pipe((0,
                    Q.U)(x=>x.size > 1e3 ? URL.createObjectURL(x) : (this._addDefaultImage(ee),
                    (0,
                    ve.of)(!1))), (0,
                    e.g)(this.bannerInitialDelay), (0,
                    Y.K)(()=>(this._addDefaultImage(ee),
                    (0,
                    ve.of)(!1))))
                }
                onDestroy() {}
                _addDefaultImage(ee) {
                    ("news" === ee.product || "token" === ee.product || "youtube" === ee.product) && (ee.bannerImage = "./assets/img/fallback.jpg")
                }
            }
            return F.\u0275fac = function(ee) {
                return new (ee || F)(re.LFG(H.sM),re.LFG(H.qA))
            }
            ,
            F.\u0275prov = re.Yz7({
                token: F,
                factory: F.\u0275fac,
                providedIn: "root"
            }),
            F
        }
        )()
    }
    ,
    19765: (qe,ke,m)=>{
        "use strict";
        var R = m(11481)
          , o = m(94650)
          , e = m(15861)
          , T = m(36895)
          , ie = m(80529)
          , n = m(62510)
          , Q = m(24006)
          , ve = m(38746)
          , Y = m(89383)
          , H = m(97185)
          , xe = m(6770)
          , ne = m(52413)
          , re = m(53763)
          , Oe = m(77575)
          , p = m(12113)
          , me = m(99703)
          , Le = m(95698)
          , ze = m(32076)
          , nt = m(4326)
          , N = m(49808)
          , F = m(33723)
          , L = m(92216)
          , ee = m(49319);
        const x = ["maxTabsErrorModal"];
        function V(M, G) {
            1 & M && o._UZ(0, "img", 9)
        }
        function de(M, G) {
            1 & M && o._UZ(0, "img", 10)
        }
        function fe(M, G) {
            if (1 & M && (o.TgZ(0, "div", 1),
            o.YNc(1, V, 1, 0, "img", 2),
            o.YNc(2, de, 1, 0, "img", 3),
            o.TgZ(3, "p", 4),
            o._uU(4, "It seems you have already too many instances of the app open in your browser."),
            o.qZA(),
            o._UZ(5, "br"),
            o.TgZ(6, "p", 5),
            o._uU(7, "Since we want to provide you with a stable and high performant app, this instance has been terminated so that you can continue using the app in the other tabs without problems according to your subscription:"),
            o.qZA(),
            o.TgZ(8, "p", 6),
            o._UZ(9, "fa-icon", 7),
            o._uU(10),
            o.qZA(),
            o.TgZ(11, "p", 8),
            o._UZ(12, "fa-icon", 7),
            o._uU(13),
            o.qZA()()),
            2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.Q6J("ngIf", l.isDarkTheme),
                o.xp6(1),
                o.Q6J("ngIf", !l.isDarkTheme),
                o.xp6(8),
                o.hij(" Free users: ", l.MaxNumberOfTabs.FREE, ""),
                o.xp6(3),
                o.hij(" Standard / Premium users: ", l.MaxNumberOfTabs.SUBS, "")
            }
        }
        let Pe = (()=>{
            class M extends ne.K9 {
                constructor(l, v) {
                    super(),
                    this.modalService = l,
                    this.MaxNumberOfTabs = re.GY,
                    this.isDarkTheme = !0,
                    v.onThemeChange$.pipe((0,
                    ne.sL)(this)).subscribe(I=>{
                        this.isDarkTheme = I === re.Q2.Dark
                    }
                    )
                }
                ngOnInit() {
                    this.modalService.open(this.modalTpl, {
                        size: "lg",
                        centered: !0,
                        keyboard: !1,
                        backdrop: "static",
                        windowClass: "max-tabs-error-modal"
                    })
                }
                onDestroy() {}
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.Y36(ee.FF),o.Y36(re.gb))
            }
            ,
            M.\u0275cmp = o.Xpm({
                type: M,
                selectors: [["app-max-tabs-error-page"]],
                viewQuery: function(l, v) {
                    if (1 & l && o.Gf(x, 7),
                    2 & l) {
                        let I;
                        o.iGM(I = o.CRH()) && (v.modalTpl = I.first)
                    }
                },
                standalone: !0,
                features: [o.qOj, o.jDz],
                decls: 2,
                vars: 0,
                consts: [["maxTabsErrorModal", ""], [1, "modal-body", "text-center"], ["class", "logo", "src", "assets/img/logo/dextools_logo_full_dark.svg", "alt", "dextools logo", 4, "ngIf"], ["class", "logo", "src", "assets/img/logo/dextools_logo_full_light.svg", "alt", "dextools logo", 4, "ngIf"], [1, "m-0", "text-center", "h4"], [1, "m-0", "text-center", "main-paragraph"], [1, "mt-4", "text-center", "h6"], ["icon", "plus"], [1, "text-center", "h6"], ["src", "assets/img/logo/dextools_logo_full_dark.svg", "alt", "dextools logo", 1, "logo"], ["src", "assets/img/logo/dextools_logo_full_light.svg", "alt", "dextools logo", 1, "logo"]],
                template: function(l, v) {
                    1 & l && o.YNc(0, fe, 14, 4, "ng-template", null, 0, o.W1O)
                },
                dependencies: [T.O5, L.uH, L.BN],
                styles: [".logo[_ngcontent-%COMP%]{height:3.125rem;width:auto;margin-bottom:1.875rem}.main-paragraph[_ngcontent-%COMP%]{color:#142028;font-weight:400;line-height:inherit}  body.dark-theme .max-tabs-error-modal .modal-body .main-paragraph{color:#fff}"],
                changeDetection: 0
            }),
            M
        }
        )();
        var ge = m(33269);
        const Ie = re.Vr.getCurrentStoredLanguage("configApp")
          , pe = [{
            path: "",
            pathMatch: "full",
            redirectTo: `${Ie}`
        }, {
            path: "user",
            redirectTo: `${Ie}/user`
        }, {
            path: "max-tabs-error",
            component: Pe,
            data: {
                isEmptyPage: !0
            }
        }, {
            path: ":language/user",
            canActivate: [re.kG],
            resolve: {
                currentLanguage: re.q3
            },
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7617)]).then(m.bind(m, 87617)).then(M=>M.USER_ROUTES)
        }, {
            path: ":language/admin",
            loadChildren: ()=>Promise.all([m.e(7719), m.e(931), m.e(6112)]).then(m.bind(m, 36112)).then(M=>M.ADMIN_ROUTES)
        }, {
            path: ":language/multichart",
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7185), m.e(7301), m.e(1208), m.e(5359)]).then(m.bind(m, 54143)).then(M=>M.MULTICHART_ROUTES)
        }, {
            path: "multi-swap",
            redirectTo: `${Ie}/${me.qop.Ethereum}/${ge.$.Multiswap}`
        }, {
            path: "uniswap/wallet-info",
            redirectTo: `${Ie}/${me.qop.Ethereum}/${ge.$.WalletInfo}`
        }, {
            path: "wallet-info",
            redirectTo: `${Ie}/${me.qop.Ethereum}/${ge.$.WalletInfo}`
        }, {
            path: "stats",
            redirectTo: `${Ie}/${me.qop.Ethereum}/${ge.$.Stats}`
        }, {
            path: "multichart",
            redirectTo: `${Ie}/multichart`
        }, {
            path: "config",
            redirectTo: `${Ie}`
        }, {
            path: "dextswap",
            redirectTo: `${Ie}/${me.qop.Ethereum}/dextswap`
        }, {
            path: `:chain/${ge.$.Stats}`,
            redirectTo: `${Ie}/:chain/${ge.$.Stats}`
        }, {
            path: `:chain/${ge.$.Multiswap}`,
            redirectTo: `${Ie}/:chain/${ge.$.Multiswap}`
        }, {
            path: `:chain/${ge.$.WalletInfo}`,
            redirectTo: `${Ie}/:chain/${ge.$.WalletInfo}`
        }, {
            path: `:chain/${ge.$.WalletInfo}/:wallet`,
            redirectTo: `${Ie}/:chain/${ge.$.WalletInfo}/:wallet`
        }, {
            path: `:chain/${ge.$.Dextswap}/`,
            redirectTo: `${Ie}/:chain/${ge.$.Dextswap}`
        }, {
            path: `:chain/${ge.$.Dextswap}/:token2`,
            redirectTo: `${Ie}/:chain/${ge.$.Dextswap}/:token2`
        }, {
            path: `:chainOrExchange/${ge.$.LiveNewPairs}`,
            redirectTo: `${Ie}/:chainOrExchange/${ge.$.LiveNewPairs}`
        }, {
            path: `:chainOrExchange/${ge.$.BigSwap}`,
            redirectTo: `${Ie}/:chainOrExchange/${ge.$.BigSwap}`
        }, {
            path: `:chainOrExchange/${ge.$.PairExplorer}`,
            redirectTo: `${Ie}/:chainOrExchange/${ge.$.PairExplorer}`
        }, {
            path: `:chainOrExchange/${ge.$.PairExplorer}/:pair`,
            redirectTo: `${Ie}/:chainOrExchange/${ge.$.PairExplorer}/:pair`
        }, {
            path: ":language",
            loadChildren: ()=>Promise.all([m.e(7719), m.e(9712), m.e(9585), m.e(27), m.e(7885), m.e(1307), m.e(2956), m.e(5003), m.e(8122)]).then(m.bind(m, 73658)).then(M=>M.HOME_ROUTES)
        }, {
            path: ":chain",
            pathMatch: "full",
            redirectTo: `${Ie}/:chain`
        }, {
            path: `:language/:chainOrExchange/${ge.$.PairExplorer}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7185), m.e(9712), m.e(9585), m.e(27), m.e(7885), m.e(3867), m.e(7301), m.e(1307), m.e(8338), m.e(2956), m.e(1208), m.e(5533), m.e(931), m.e(8592), m.e(1699)]).then(m.bind(m, 91699)).then(M=>M.PAIR_EXPLORER_ROUTES)
        }, {
            path: `:language/:chainOrExchange/${ge.$.LiveNewPairs}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7185), m.e(9712), m.e(9585), m.e(7885), m.e(1307), m.e(8493)]).then(m.bind(m, 78493)).then(M=>M.POOLS_CREATOR_ROUTES)
        }, {
            path: `:language/:chainOrExchange/${ge.$.BigSwap}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7185), m.e(9585), m.e(7112)]).then(m.bind(m, 87112)).then(M=>M.BIG_SWAP_ROUTES)
        }, {
            path: `:language/:chain/${ge.$.WalletInfo}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7185), m.e(8592), m.e(5786)]).then(m.bind(m, 95786)).then(M=>M.WALLET_INFO_ROUTES)
        }, {
            path: `:language/:chain/${ge.$.Multiswap}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7185), m.e(7301), m.e(1558)]).then(m.bind(m, 3761)).then(M=>M.MULTISWAP_ROUTES)
        }, {
            path: `:language/:chain/${ge.$.Stats}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(5003), m.e(97)]).then(m.bind(m, 69867)).then(M=>M.STATS_ROUTES)
        }, {
            path: `:language/:chain/${ge.$.Dextswap}`,
            loadChildren: ()=>Promise.all([m.e(7719), m.e(7540), m.e(5571)]).then(m.bind(m, 55571)).then(M=>M.AGGREGATOR_ROUTES)
        }, {
            path: "**",
            redirectTo: `${Ie}`
        }];
        let ue = (()=>{
            class M extends n.wN {
                shouldDetach(l) {
                    return !1
                }
                store(l, v) {}
                shouldAttach(l) {
                    return !1
                }
                retrieve(l) {
                    return null
                }
                shouldReuseRoute(l, v) {
                    return !1
                }
            }
            return M.\u0275fac = function() {
                let G;
                return function(v) {
                    return (G || (G = o.n5z(M)))(v || M)
                }
            }(),
            M.\u0275prov = o.Yz7({
                token: M,
                factory: M.\u0275fac
            }),
            M
        }
        )();
        var D = m(39300)
          , Z = m(18505)
          , ye = m(39841)
          , we = m(14818)
          , Ge = m(17445)
          , Ce = m(68675)
          , De = m(54004)
          , ot = m(54968)
          , Ze = m(82805)
          , $e = m(95577)
          , je = m(37100)
          , Ue = m(83353)
          , It = m(62289);
        function Me(M, G) {
            if (1 & M && o._UZ(0, "img", 11),
            2 & M) {
                const l = o.oxw(2);
                o.Q6J("src", l.qrCodeUrl.android, o.LSH)
            }
        }
        function _(M, G) {
            if (1 & M && o._UZ(0, "img", 12),
            2 & M) {
                const l = o.oxw(2);
                o.Q6J("src", l.qrCodeUrl.ios, o.LSH)
            }
        }
        function S(M, G) {
            if (1 & M && (o.TgZ(0, "div", 8),
            o.YNc(1, Me, 1, 1, "img", 9),
            o.YNc(2, _, 1, 1, "img", 10),
            o.qZA()),
            2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.Q6J("ngIf", l.showQR.android),
                o.xp6(1),
                o.Q6J("ngIf", l.showQR.ios)
            }
        }
        const P = function() {
            return ["fab", "android"]
        };
        function B(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "button", 13),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.openAppStore("android"))
                })("mouseenter", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.showQRForPlatform("android"))
                })("mouseleave", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.hideQRForPlatform("android"))
                }),
                o._UZ(1, "fa-icon", 14),
                o._uU(2, " Android "),
                o.qZA()
            }
            2 & M && (o.xp6(1),
            o.Q6J("icon", o.DdM(1, P)))
        }
        const X = function() {
            return ["fab", "apple"]
        };
        function ce(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "button", 13),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.openAppStore("ios"))
                })("mouseenter", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.showQRForPlatform("ios"))
                })("mouseleave", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.hideQRForPlatform("ios"))
                }),
                o._UZ(1, "fa-icon", 14),
                o._uU(2, " iOS "),
                o.qZA()
            }
            2 & M && (o.xp6(1),
            o.Q6J("icon", o.DdM(1, X)))
        }
        const be = function() {
            return ["fal", "times"]
        };
        let Ee = (()=>{
            class M extends ne.K9 {
                constructor(l, v, I, K, Ne, rt) {
                    super(),
                    this.modal = l,
                    this._platform = v,
                    this._cdRef = I,
                    this._settingsService = K,
                    this._breakpointObserver = Ne,
                    this.shouldShowQR = {
                        android: !1,
                        ios: !1
                    },
                    this.showQR = {
                        android: !1,
                        ios: !1
                    },
                    this.shouldShowAndroid = !1,
                    this.shouldShowIOS = !1,
                    this.qrCodeUrl = {
                        android: "",
                        ios: ""
                    },
                    this.logoUrl = "",
                    this.isDarkTheme = !0,
                    this._isMobileApp = !1,
                    this._mediaDevice = "desktop",
                    this._isMobileApp = !!rt.deviceId,
                    this.shouldShowIOS = !this._isMobileApp && !this._platform.ANDROID,
                    this.shouldShowAndroid = !this._isMobileApp && !this._platform.IOS
                }
                ngOnInit() {
                    this._settingsService.onThemeChange$.pipe((0,
                    ne.sL)(this)).subscribe(l=>{
                        this.isDarkTheme = l === re.Q2.Dark,
                        this.isDarkTheme ? (this.logoUrl = "assets/img/logo/dextools_logo_full_dark.svg",
                        this.qrCodeUrl.android = je.Z.android.dark,
                        this.qrCodeUrl.ios = je.Z.ios.dark) : (this.logoUrl = "assets/img/logo/dextools_logo_full_light.svg",
                        this.qrCodeUrl.android = je.Z.android.light,
                        this.qrCodeUrl.ios = je.Z.ios.light),
                        this._cdRef.detectChanges()
                    }
                    ),
                    this._breakpointObserver.observe([p.K5, p.mT]).pipe((0,
                    ne.sL)(this)).subscribe(l=>{
                        this._mediaDevice = l.breakpoints[p.K5] ? "mobileTablet" : "desktop",
                        this.shouldShowQR.android = !this._isMobileApp && "mobileTablet" !== this._mediaDevice && (this._platform.isBrowser || this._platform.ANDROID),
                        this.shouldShowQR.ios = !this._isMobileApp && "mobileTablet" !== this._mediaDevice && (this._platform.isBrowser || this._platform.IOS),
                        this._cdRef.detectChanges()
                    }
                    )
                }
                onDestroy() {}
                openAppStore(l) {
                    window.open(je.l[l], "_blank", "noopener")
                }
                showQRForPlatform(l) {
                    this.shouldShowQR[l] && (this.showQR[l] = !0,
                    this._cdRef.detectChanges())
                }
                hideQRForPlatform(l) {
                    this.shouldShowQR[l] && (this.showQR[l] = !1,
                    this._cdRef.detectChanges())
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.Y36(ee.Kz),o.Y36(Ue.t4),o.Y36(o.sBO),o.Y36(re.gb),o.Y36(It.Yg),o.Y36(re.$h))
            }
            ,
            M.\u0275cmp = o.Xpm({
                type: M,
                selectors: [["app-mobile-app-qr-modal"]],
                standalone: !0,
                features: [o.qOj, o.jDz],
                decls: 12,
                vars: 9,
                consts: [[1, "modal-body"], ["class", "qr-code-container", 4, "ngIf"], [1, "sub-header"], ["alt", "dextools logo", 1, "logo", 3, "src"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], [3, "icon"], [1, "actions"], ["class", "btn-primary", 3, "click", "mouseenter", "mouseleave", 4, "ngIf"], [1, "qr-code-container"], ["alt", "QR code mobile android app", 3, "src", 4, "ngIf"], ["alt", "QR code mobile ios app", 3, "src", 4, "ngIf"], ["alt", "QR code mobile android app", 3, "src"], ["alt", "QR code mobile ios app", 3, "src"], [1, "btn-primary", 3, "click", "mouseenter", "mouseleave"], ["size", "lg", 1, "me-1", 3, "icon"]],
                template: function(l, v) {
                    1 & l && (o.TgZ(0, "div", 0),
                    o.YNc(1, S, 3, 2, "div", 1),
                    o.TgZ(2, "div", 2),
                    o._UZ(3, "img", 3),
                    o.TgZ(4, "button", 4),
                    o.NdJ("click", function() {
                        return v.modal.dismiss("close")
                    }),
                    o._UZ(5, "fa-icon", 5),
                    o.qZA()(),
                    o.TgZ(6, "div", 6)(7, "span"),
                    o._uU(8),
                    o.ALo(9, "translate"),
                    o.qZA(),
                    o.YNc(10, B, 3, 2, "button", 7),
                    o.YNc(11, ce, 3, 2, "button", 7),
                    o.qZA()()),
                    2 & l && (o.xp6(1),
                    o.Q6J("ngIf", v.showQR.android || v.showQR.ios),
                    o.xp6(2),
                    o.Q6J("src", v.logoUrl, o.LSH),
                    o.xp6(2),
                    o.Q6J("icon", o.DdM(8, be)),
                    o.xp6(3),
                    o.Oqu(o.lcZ(9, 6, "Continue in the app")),
                    o.xp6(2),
                    o.Q6J("ngIf", v.shouldShowAndroid),
                    o.xp6(1),
                    o.Q6J("ngIf", v.shouldShowIOS))
                },
                dependencies: [T.O5, L.uH, L.BN, Y.aw, Y.X$],
                styles: [".modal-body[_ngcontent-%COMP%]{padding:.625rem .625rem 1.25rem 1.25rem}.modal-body[_ngcontent-%COMP%]   .qr-code-container[_ngcontent-%COMP%]{text-align:center;margin-top:1rem;margin-bottom:1.25rem}.modal-body[_ngcontent-%COMP%]   .qr-code-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:15rem;width:auto;margin-right:.625rem}.modal-body[_ngcontent-%COMP%]   .sub-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-bottom:.625rem}.modal-body[_ngcontent-%COMP%]   .sub-header[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{margin-top:.625rem;height:1.375rem;width:auto}.modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{font-family:Poppins,Roboto,sans-serif;font-style:normal;-moz-osx-font-smoothing:grayscale;font-weight:500;font-size:16px;line-height:22px;color:#142028;display:flex;align-items:center}body.dark-theme   [_nghost-%COMP%]   .modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{color:#142028}.modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{margin-right:.5rem}.modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:last-child{margin-right:0}.modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{font-family:Poppins,Roboto,sans-serif;font-style:normal;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:13px;line-height:16px;border-radius:3.125rem;padding:.375rem .75rem;border:none;height:2.125rem}@media only screen and (min-width: 550px){.modal-body[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{margin-right:1rem}}  body .window-mobile-app-qr-modal,   body .window-mobile-app-qr-modal .mobile-app-qr-modal.modal-dialog{position:fixed;bottom:.5rem;margin:0;left:50%;transform:translate(-50%)!important}  body .window-mobile-app-qr-modal{width:calc(100% - 50px);height:8.125rem;top:auto}  body .window-mobile-app-qr-modal .mobile-app-qr-modal.modal-dialog{min-width:calc(100% - 50px)}  body .window-mobile-app-qr-modal .mobile-app-qr-modal .modal-content{min-width:18.75rem}@media only screen and (min-width: 500px){  body .window-mobile-app-qr-modal,   body .window-mobile-app-qr-modal .mobile-app-qr-modal.modal-dialog{right:.5rem;left:unset;transform:none!important}  body .window-mobile-app-qr-modal{width:21.875rem}  body .window-mobile-app-qr-modal .mobile-app-qr-modal.modal-dialog{min-width:21.875rem}  body .window-mobile-app-qr-modal .mobile-app-qr-modal .modal-content{min-width:21.875rem}}"],
                changeDetection: 0
            }),
            M
        }
        )();
        var Be = m(1321)
          , Fe = m(77579)
          , Ke = m(82722)
          , ft = m(56451)
          , ut = m(61135);
        const _t = "announcements"
          , Wt = "lastAnnouncementsCheck"
          , an = ne.rP
          , xt = 5 * ne.VK;
        let Dt = (()=>{
            class M {
                constructor(l) {
                    this._apiService = l,
                    this._announcementsByChain = {},
                    this._announcementsByChain$ = new ut.X(this._announcementsByChain)
                }
                get isAnnouncementListExpired() {
                    const l = ne._Z.getDate(Wt);
                    return !l || Date.now() - an > l.getTime()
                }
                get announcementsFromAllChains$() {
                    return this._announcementsByChain$.asObservable()
                }
                get announcementsCall() {
                    return this._apiService.get("back_url", "/banner?product=announcement").pipe((0,
                    De.U)(v=>v?.data ?? []))
                }
                initialize() {
                    this.initializeAllAnnouncements(),
                    (0,
                    Ze.H)(0, xt).subscribe(()=>{
                        this._fetchAnnouncements()
                    }
                    )
                }
                initializeAllAnnouncements() {
                    ne._Z.getString(_t) ? this._updateAnnouncementsInLocalStorage() : ne._Z.setMap(_t, new Map)
                }
                getAnnouncementsByChain(l) {
                    return this._announcementsByChain$.asObservable().pipe((0,
                    D.h)(v=>null != v && null != v[l]), (0,
                    De.U)(v=>v[l]))
                }
                isAnnouncementValid(l) {
                    if (l) {
                        const v = new Date;
                        return v >= new Date(l.startDate) && v <= new Date(l.endDate) && !1 === l.disabled
                    }
                    return !1
                }
                markAnnouncementAsViewed(l) {
                    l.alreadyViewed = !0,
                    this._updateAnnouncementsInLocalStorage(l)
                }
                _fetchAnnouncements() {
                    this.announcementsCall.subscribe(l=>{
                        let I, v = !1;
                        if (l.length > 0 && (I = l.filter(K=>!K.disabled).sort((K,Ne)=>Date.parse(Ne.startDate) - Date.parse(K.startDate))[0]),
                        this.isAnnouncementListExpired)
                            v = !0;
                        else if (I) {
                            const K = [...this._getStoredAnnouncements().values()]
                              , Ne = []
                              , rt = I.chain.length > 0 ? I.chain : me.fUz;
                            for (let pt = 0; pt < rt.length; pt++)
                                Ne.push(I);
                            v = this._areNewAnnouncementsDifferent(K, Ne)
                        }
                        if (v && I) {
                            ne._Z.getString(_t) || (ne._Z.setMap(_t, new Map),
                            this._announcementsByChain = {});
                            const K = {
                                ...I,
                                alreadyViewed: !1
                            };
                            if (K.chain.length > 0)
                                for (const Ne of K.chain)
                                    this._setAnnouncementData(Ne, K);
                            else
                                for (const Ne of me.fUz)
                                    this._setAnnouncementData(Ne, K);
                            ne._Z.setDate(Wt),
                            this._announcementsByChain$.next(this._announcementsByChain)
                        }
                    }
                    )
                }
                _getStoredAnnouncements() {
                    return ne._Z.getMap(_t)
                }
                _areNewAnnouncementsDifferent(l, v) {
                    if (l.length !== v.length)
                        return !0;
                    for (const I of v) {
                        const K = l.find(Ne=>Ne._id === I._id);
                        if (!K || K.startDate !== I.startDate || K.endDate !== I.endDate || K.disabled !== I.disabled || K.chain.length !== I.chain.length || K.contentHtml !== I.contentHtml || K.titleHtml !== I.titleHtml || K.name !== I.name)
                            return !0
                    }
                    return !1
                }
                _setAnnouncementData(l, v) {
                    (!this._announcementsByChain || 0 === Object.keys(this._announcementsByChain).length || !this._announcementsByChain[l] || this._announcementsByChain[l] && this._announcementsByChain[l]?._id !== v._id && this.isAnnouncementValid(v)) && (ne._Z.addToMap(_t, l, v),
                    this._announcementsByChain[l] = v)
                }
                _updateAnnouncementsInLocalStorage(l) {
                    const v = this._getStoredAnnouncements();
                    for (const I of v.keys())
                        l && v.get(I)._id === l._id && v.set(I, l),
                        this._announcementsByChain[I] = v.get(I);
                    l && (ne._Z.mergeToMap(_t, v),
                    this._announcementsByChain$.next(this._announcementsByChain))
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.LFG(re.sM))
            }
            ,
            M.\u0275prov = o.Yz7({
                token: M,
                factory: M.\u0275fac,
                providedIn: "root"
            }),
            M
        }
        )();
        const Ut = function() {
            return ["fal", "times"]
        };
        function Rt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "div", 1)(1, "button", 2),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.closeAnnouncement())
                }),
                o.TgZ(2, "span"),
                o._UZ(3, "fa-icon", 3),
                o.qZA()(),
                o.TgZ(4, "div", 4),
                o._UZ(5, "fa-icon", 5),
                o.TgZ(6, "div", 6),
                o._UZ(7, "div", 7)(8, "div", 7),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(3),
                o.Q6J("icon", o.DdM(3, Ut)),
                o.xp6(4),
                o.Q6J("innerHTML", l.announcementTitle, o.oJD),
                o.xp6(1),
                o.Q6J("innerHTML", l.announcementContent, o.oJD)
            }
        }
        let bt = (()=>{
            class M extends ne.K9 {
                set chain(l) {
                    this._chain = l,
                    this._chainChanged$.next(),
                    this.announcement = null,
                    this._subscribeToAnnouncements(this._chain)
                }
                get chain() {
                    return this._chain
                }
                constructor(l, v, I) {
                    super(),
                    this._announcementsService = l,
                    this._router = v,
                    this._cdRef = I,
                    this._chainChanged$ = new Fe.x,
                    this._newAnnouncement$ = new Fe.x,
                    this._announcementViewed$ = new Fe.x
                }
                ngOnInit() {
                    this._router.events.pipe((0,
                    ne.sL)(this)).subscribe(l=>{
                        l instanceof n.OD && this._markAnnouncementAsViewed()
                    }
                    ),
                    this._chainChanged$.subscribe()
                }
                onDestroy() {}
                get announcementContent() {
                    return this.announcement?.contentHtml ?? ""
                }
                get announcementTitle() {
                    return this.announcement?.titleHtml ?? ""
                }
                closeAnnouncement() {
                    this._markAnnouncementAsViewed()
                }
                _subscribeToAnnouncements(l) {
                    this._announcementsService.getAnnouncementsByChain(l).pipe((0,
                    ne.sL)(this), (0,
                    Ke.R)(this._chainChanged$), (0,
                    D.h)(v=>this._isAnnouncementValid(v))).subscribe(v=>{
                        this.announcement = v,
                        this._newAnnouncement$.next(),
                        this._setAnnouncementAutoClose(),
                        this._cdRef.detectChanges()
                    }
                    )
                }
                _isAnnouncementValid(l) {
                    return !!l && !l.alreadyViewed && this._announcementsService.isAnnouncementValid(l)
                }
                _setAnnouncementAutoClose() {
                    const l = (0,
                    ft.T)(this._chainChanged$, this._newAnnouncement$, this._announcementViewed$);
                    (0,
                    Ze.H)(6e4, 6e4).pipe((0,
                    ne.sL)(this), (0,
                    Ke.R)(l)).subscribe(()=>{
                        this._isAnnouncementValid(this.announcement) || this._markAnnouncementAsViewed()
                    }
                    )
                }
                _markAnnouncementAsViewed() {
                    null != this.announcement && (this._announcementsService.markAnnouncementAsViewed(this.announcement),
                    this.announcement = null,
                    this._announcementViewed$.next(),
                    this._cdRef.detectChanges())
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.Y36(Dt),o.Y36(n.F0),o.Y36(o.sBO))
            }
            ,
            M.\u0275cmp = o.Xpm({
                type: M,
                selectors: [["app-announcement"]],
                inputs: {
                    chain: "chain"
                },
                standalone: !0,
                features: [o.qOj, o.jDz],
                decls: 1,
                vars: 1,
                consts: [["class", "banner-announcement", 4, "ngIf"], [1, "banner-announcement"], ["type", "button", 1, "close", 3, "click"], [3, "icon"], [1, "banner-announcement-body"], ["icon", "bullhorn"], [1, "banner-announcement-content"], [3, "innerHTML"]],
                template: function(l, v) {
                    1 & l && o.YNc(0, Rt, 9, 4, "div", 0),
                    2 & l && o.Q6J("ngIf", !!v.announcement)
                },
                dependencies: [T.O5, L.uH, L.BN],
                styles: [".banner-announcement[_ngcontent-%COMP%]{box-shadow:0 0 .9375rem .3125rem #00000080;bottom:0;left:0;right:0;opacity:1;position:fixed;z-index:999993;background-color:#00b8d8;padding:.625rem 1.25rem}.banner-announcement[_ngcontent-%COMP%]   .banner-announcement-body[_ngcontent-%COMP%]{display:flex;gap:1.25rem;align-items:center;color:#fff}.banner-announcement[_ngcontent-%COMP%]   .banner-announcement-body[_ngcontent-%COMP%]   .banner-announcement-content[_ngcontent-%COMP%]{display:flex;flex-direction:column}.banner-announcement   .banner-announcement-body   .banner-announcement-content   [_nghost-%COMP%]     a{color:#fff;text-decoration:underline}.banner-announcement   .banner-announcement-body   .banner-announcement-content   [_nghost-%COMP%]     a:hover{color:#e7e7e7;text-decoration:none}.banner-announcement[_ngcontent-%COMP%]   .banner-announcement-body[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:20px}.close[_ngcontent-%COMP%]{position:relative}.close[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{background-color:transparent;color:#fff;font-size:1.1875rem}"],
                changeDetection: 0
            }),
            M
        }
        )();
        var at = m(37340)
          , Ft = m(65679)
          , Dn = m(98979)
          , rn = m(90628)
          , sn = m(23745);
        const Yt = ["sidebar"];
        function Un(M, G) {
            1 & M && o._UZ(0, "img", 35)
        }
        function cn(M, G) {
            if (1 & M && o._UZ(0, "img", 36),
            2 & M) {
                const l = o.oxw();
                o.MGl("src", "assets/img/logo/dextools_logo_full_", l.theme === l.Theme.Dark ? "dark" : "light", ".svg", o.LSH),
                o.Q6J("@hoverAnimation", void 0)
            }
        }
        const ln = function() {
            return ["fal", "times"]
        };
        function Bt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "button", 37),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.toggleMenu())
                }),
                o._UZ(1, "fa-icon", 38),
                o.ALo(2, "translate"),
                o.qZA()
            }
            2 & M && (o.xp6(1),
            o.Q6J("icon", o.DdM(4, ln))("ngbTooltip", o.lcZ(2, 2, "home.close")))
        }
        function dn(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected, !1, K.chainSelected),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "fa-icon", 39),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5),
                o.ALo(6, "translate"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + l.ChainPage.Dashboard + l.chainSelected, !0) || l.isRouteActive("/" + l.language, !0)),
                o.cQ8("href", "", l.context, "/", l.language, "/", l.chainSelected, "", o.LSH),
                o.xp6(4),
                o.Oqu(o.lcZ(6, 6, "header.home"))
            }
        }
        function un(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.PairExplorer + "/" + K.getDefaultPair(K.chainSelected), !1, K.chainSelected),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "app-icon", 40),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5),
                o.ALo(6, "translate"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.PairExplorer)),
                o.XOb("href", "", l.context, "/", l.language, "/", l.chainSelected, "/", l.ChainPage.PairExplorer, "/", l.getDefaultPair(l.chainSelected), "", o.LSH),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(6, 9, "header.pair_explorer"))
            }
        }
        function zt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.LiveNewPairs),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "app-icon", 41),
                o.qZA(),
                o._UZ(4, "span", 42),
                o.ALo(5, "translate"),
                o.qZA()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.LiveNewPairs)),
                o.cQ8("href", "", l.context, "/", l.chainSelected, "/", l.ChainPage.LiveNewPairs, "", o.LSH),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(1),
                o.Q6J("innerHTML", o.lcZ(5, 7, "header.pool_explorer"), o.oJD)
            }
        }
        function hn(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.BigSwap),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "app-icon", 43),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5),
                o.ALo(6, "translate"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.BigSwap)),
                o.FAE("href", "", l.context, "/", l.language, "/", l.chainSelected, "/", l.ChainPage.BigSwap, "", o.LSH),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(6, 8, "header.big_swap_explorer"))
            }
        }
        function gn(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.Multiswap),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "app-icon", 44),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5),
                o.ALo(6, "translate"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.Multiswap)),
                o.FAE("href", "", l.context, "/", l.language, "/", l.chainSelected, "/", l.ChainPage.Multiswap, "", o.LSH),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(6, 8, "header.multiswap"))
            }
        }
        function Gt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.Stats),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "app-icon", 45),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5),
                o.ALo(6, "translate"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.Stats)),
                o.FAE("href", "", l.context, "/", l.language, "/", l.chainSelected, "/", l.ChainPage.Stats, "", o.LSH),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(6, 8, "header.stats"))
            }
        }
        function pn(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 46),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.WalletInfo + (K.userId ? "/" + K.userId : "")),
                    o.KtG(!1)
                }),
                o.ALo(2, "translate"),
                o.TgZ(3, "div"),
                o._UZ(4, "app-icon", 47),
                o.qZA(),
                o.TgZ(5, "span"),
                o._uU(6),
                o.ALo(7, "translate"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("disable-link", l.is_free)("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.WalletInfo + (l.userId ? "/" + l.userId : ""))),
                o.XOb("href", "", l.context, "/", l.language, "/", l.chainSelected, "/", l.ChainPage.WalletInfo, "", l.userId ? "/" + l.userId : "", "", o.LSH),
                o.Q6J("ngbTooltip", o.lcZ(2, 15, "pair_explorer.my_swaps_disabled"))("disableTooltip", !l.is_free)("triggers", "mobileTablet" === l.mediaDevice ? "click" : "hover")("autoClose", "outside"),
                o.xp6(3),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(7, 17, "header.wallet_info"))
            }
        }
        function mn(M, G) {
            if (1 & M && (o.TgZ(0, "ul", 48),
            o.GkF(1, 49),
            o.qZA()),
            2 & M) {
                o.oxw();
                const l = o.MAs(66);
                o.xp6(1),
                o.Q6J("ngTemplateOutlet", l)
            }
        }
        function Rn(M, G) {
            if (1 & M && (o.TgZ(0, "ul", 50),
            o.GkF(1, 49),
            o.qZA()),
            2 & M) {
                o.oxw();
                const l = o.MAs(66);
                o.xp6(1),
                o.Q6J("ngTemplateOutlet", l)
            }
        }
        function oo(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    o.CHM(l);
                    const K = o.oxw();
                    return K.navigateToPage(I, "/" + K.chainSelected + "/" + K.ChainPage.Dextswap),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "fa-icon", 51),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5, "DEXTswap"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/" + l.chainSelected + "/" + l.ChainPage.Dextswap)),
                o.FAE("href", "", l.context, "/", l.language, "/", l.chainSelected, "/", l.ChainPage.Dextswap, "", o.LSH)
            }
        }
        function ao(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "li", 14)(1, "a", 15),
                o.NdJ("click", function(I) {
                    return o.CHM(l),
                    o.oxw(2).navigateToPage(I, "/admin/empty-component", !0),
                    o.KtG(!1)
                }),
                o.TgZ(2, "div"),
                o._UZ(3, "fa-icon", 52),
                o.qZA(),
                o.TgZ(4, "span"),
                o._uU(5, "EMPTY"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw(2);
                o.xp6(1),
                o.ekj("active", l.isRouteActive("/" + l.language + "/admin/empty-component")),
                o.hYB("href", "", l.context, "/", l.language, "/admin/empty-component", o.LSH)
            }
        }
        function fn(M, G) {
            if (1 & M && (o.TgZ(0, "ul", 11),
            o.ynx(1),
            o.YNc(2, ao, 6, 4, "li", 12),
            o.BQk(),
            o.qZA()),
            2 & M) {
                const l = o.oxw();
                o.xp6(2),
                o.Q6J("ngIf", l.isAdmin)
            }
        }
        function Nn(M, G) {
            if (1 & M && o.GkF(0, 49),
            2 & M) {
                o.oxw();
                const l = o.MAs(64);
                o.Q6J("ngTemplateOutlet", l)
            }
        }
        const _n = function() {
            return ["far", "user-alt"]
        };
        function Fn(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.ynx(0),
                o.TgZ(1, "ul", 11)(2, "li", 14)(3, "a", 58),
                o.NdJ("click", function() {
                    return o.CHM(l),
                    o.oxw(2).goToUserAccount(),
                    o.KtG(!1)
                }),
                o.TgZ(4, "div"),
                o._UZ(5, "fa-icon", 54),
                o.qZA(),
                o.TgZ(6, "span", 59)(7, "span"),
                o._uU(8),
                o.ALo(9, "translate"),
                o.qZA(),
                o.TgZ(10, "span", 60),
                o._uU(11),
                o.qZA()()()()(),
                o.BQk()
            }
            if (2 & M) {
                const l = o.oxw(2);
                o.xp6(5),
                o.Q6J("icon", o.DdM(6, _n)),
                o.xp6(3),
                o.Oqu(o.lcZ(9, 4, "header.your_account")),
                o.xp6(2),
                o.Q6J("ngClass", l.roleStr),
                o.xp6(1),
                o.Oqu(l.roleStr)
            }
        }
        function Tt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "button", 61),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw(2);
                    return o.KtG(I.disconnect())
                }),
                o._uU(1),
                o.ALo(2, "translate"),
                o.qZA()
            }
            2 & M && (o.xp6(1),
            o.Oqu(o.lcZ(2, 1, "user.disconnect_button")))
        }
        function St(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "button", 62),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw(2);
                    return o.KtG(I.goToUserAccount())
                }),
                o._uU(1),
                o.ALo(2, "translate"),
                o.qZA()
            }
            2 & M && (o.xp6(1),
            o.Oqu(o.lcZ(2, 1, "user.connect_button")))
        }
        const Cn = function() {
            return ["far", "gear"]
        };
        function bn(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.ynx(0),
                o.TgZ(1, "ul", 13)(2, "li", 14)(3, "div", 53),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.toggleSettings(!0))
                }),
                o.TgZ(4, "div"),
                o._UZ(5, "fa-icon", 54),
                o.qZA(),
                o.TgZ(6, "span"),
                o._uU(7),
                o.ALo(8, "translate"),
                o.qZA()()()(),
                o.YNc(9, Fn, 12, 7, "ng-container", 30),
                o.GkF(10, 49),
                o.TgZ(11, "div", 55),
                o.YNc(12, Tt, 3, 3, "button", 56),
                o.YNc(13, St, 3, 3, "button", 57),
                o.qZA(),
                o.BQk()
            }
            if (2 & M) {
                const l = o.oxw()
                  , v = o.MAs(64);
                o.xp6(5),
                o.Q6J("icon", o.DdM(8, Cn)),
                o.xp6(2),
                o.Oqu(o.lcZ(8, 6, "header.configuration")),
                o.xp6(2),
                o.Q6J("ngIf", !!l.userId),
                o.xp6(1),
                o.Q6J("ngTemplateOutlet", v),
                o.xp6(2),
                o.Q6J("ngIf", !!l.userId),
                o.xp6(1),
                o.Q6J("ngIf", !l.userId)
            }
        }
        function Kt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "app-panel-component", 63),
                o.NdJ("panelClosed", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.toggleSettings(!1))
                }),
                o.ALo(1, "translate"),
                o.ALo(2, "translate"),
                o._UZ(3, "app-settings-panel", 64),
                o.qZA()
            }
            2 & M && (o.s9C("panelTitle", o.lcZ(1, 7, "config.settings")),
            o.s9C("panelSubtitle", o.lcZ(2, 9, "config.parameters")),
            o.Q6J("backdrop", !1)("closeButton", !1)("relativeButton", !0)("maxHeight", !0),
            o.xp6(3),
            o.Q6J("mobile", !0))
        }
        const Bn = function(M, G) {
            return {
                mobile: M,
                open: G
            }
        }
          , Sn = function() {
            return ["far", "comment-alt-edit"]
        };
        function $n(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "div", 65)(1, "button", 66),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.openSocialModalOrPanel())
                }),
                o._UZ(2, "fa-icon", 67),
                o.TgZ(3, "span"),
                o._uU(4, "Update token info"),
                o.qZA()()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.Q6J("ngClass", o.WLB(2, Bn, "mobileTablet" === l.mediaDevice, !!l.sidebarExpanded)),
                o.xp6(2),
                o.Q6J("icon", o.DdM(5, Sn))
            }
        }
        function Mn(M, G) {
            if (1 & M && (o.TgZ(0, "li", 14)(1, "a", 70)(2, "div"),
            o._UZ(3, "app-icon", 78),
            o.qZA(),
            o.TgZ(4, "span"),
            o._uU(5),
            o.ALo(6, "translate"),
            o.qZA()()()),
            2 & M) {
                const l = o.oxw(2);
                o.xp6(1),
                o.Q6J("href", l.getNewPairsBotUrl(l.chainSelected), o.LSH),
                o.uIk("datatype", "pool-boot"),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(6, 4, "home.telegram_bot"))
            }
        }
        const Jt = function() {
            return ["fab", "apple"]
        }
          , vn = function() {
            return ["fab", "android"]
        };
        function qt(M, G) {
            if (1 & M && (o.TgZ(0, "li", 14)(1, "a", 68)(2, "div"),
            o._UZ(3, "app-icon", 69),
            o.qZA(),
            o.TgZ(4, "span"),
            o._uU(5),
            o.ALo(6, "translate"),
            o.qZA()()(),
            o.YNc(7, Mn, 7, 6, "li", 12),
            o.TgZ(8, "li", 14)(9, "a", 70)(10, "div"),
            o._UZ(11, "fa-icon", 19),
            o.qZA(),
            o.TgZ(12, "span"),
            o._uU(13, "IOS App"),
            o.qZA()()(),
            o.TgZ(14, "li", 14)(15, "a", 70)(16, "div"),
            o._UZ(17, "fa-icon", 19),
            o.qZA(),
            o.TgZ(18, "span"),
            o._uU(19, "Android App"),
            o.qZA()()(),
            o.TgZ(20, "li", 14)(21, "a", 71)(22, "div"),
            o._UZ(23, "fa-icon", 72),
            o.qZA(),
            o.TgZ(24, "span"),
            o._uU(25),
            o.ALo(26, "translate"),
            o.qZA()()(),
            o.TgZ(27, "li", 14)(28, "a", 73)(29, "div"),
            o._UZ(30, "fa-icon", 72),
            o.qZA(),
            o.TgZ(31, "span"),
            o._uU(32, "Embedded DEX aggregator"),
            o.qZA()()(),
            o.TgZ(33, "div", 74)(34, "span", 75),
            o._uU(35),
            o.ALo(36, "translate"),
            o.qZA()(),
            o.TgZ(37, "li", 14)(38, "a", 76)(39, "div"),
            o._UZ(40, "fa-icon", 77),
            o.qZA(),
            o.TgZ(41, "span"),
            o._uU(42, "API"),
            o.qZA()()()),
            2 & M) {
                const l = o.oxw();
                o.xp6(1),
                o.uIk("datatype", "price-boot"),
                o.xp6(2),
                o.Q6J("width", 20),
                o.xp6(2),
                o.Oqu(o.lcZ(6, 15, "home.price_bot")),
                o.xp6(2),
                o.Q6J("ngIf", "#" !== l.getNewPairsBotUrl(l.chainSelected)),
                o.xp6(2),
                o.Q6J("href", l.appStoreUrl.ios, o.LSH),
                o.uIk("datatype", "ios-app"),
                o.xp6(2),
                o.Q6J("icon", o.DdM(21, Jt)),
                o.xp6(4),
                o.Q6J("href", l.appStoreUrl.android, o.LSH),
                o.uIk("datatype", "android-app"),
                o.xp6(2),
                o.Q6J("icon", o.DdM(22, vn)),
                o.xp6(4),
                o.uIk("datatype", "embedded-chart"),
                o.xp6(4),
                o.Oqu(o.lcZ(26, 17, "header.embedded_chart")),
                o.xp6(3),
                o.uIk("datatype", "embedded-dex-aggregator"),
                o.xp6(7),
                o.Oqu(o.lcZ(36, 19, "pools_creator.new")),
                o.xp6(3),
                o.uIk("datatype", "api")
            }
        }
        function Qt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "app-panel-component", 79),
                o.NdJ("panelClosed", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.toggleUpdateLinksPanel(!1))
                }),
                o._UZ(1, "app-social-icons-panel"),
                o.qZA()
            }
            2 & M && o.Q6J("closeButton", !0)("showHeader", !1)
        }
        const Zn = function(M) {
            return {
                open: M
            }
        }
          , Pn = function(M) {
            return {
                "align-left": M
            }
        }
          , On = function() {
            return ["fab", "youtube"]
        };
        let Hn = (()=>{
            class M extends ne.K9 {
                onScroll(l) {
                    this.showMenuButton = !0,
                    this.timeoutButton && clearTimeout(this.timeoutButton),
                    this.timeoutButton = setTimeout(()=>this.showMenuButton = !1, 2e3),
                    this.showMenu && l.stopImmediatePropagation()
                }
                get showMenu() {
                    return this._showMenu
                }
                set showMenu(l) {
                    this._showMenu = l,
                    document.body.style.overflow = this._showMenu && "mobileTablet" === this.mediaDevice ? "hidden" : "auto"
                }
                constructor(l, v, I, K, Ne, rt, pt, yn, jn, Et, Po) {
                    super(),
                    this._authenticationService = l,
                    this._exchangeService = v,
                    this._router = I,
                    this._settingsService = K,
                    this._cdRef = Ne,
                    this._breakpointObserver = rt,
                    this._sideMenuService = pt,
                    this._environment = yn,
                    this._routingService = jn,
                    this._injector = Et,
                    this._modalService = Po,
                    this.Chain = me.qop,
                    this.ChainPage = ge.$,
                    this.context = this._environment.app_scope,
                    this._sideMenuChange$ = new Fe.x,
                    this._web3ModalService = null,
                    this.showUpdateLinksPanel = !1,
                    this.Theme = re.Q2,
                    this.theme = re.Q2.Dark,
                    this.is_free = !1,
                    this.roleStr = "",
                    this.showMenuButton = !0,
                    this.chainSelected = this._exchangeService.chain ?? me.qop.Ethereum,
                    this.userId = null,
                    this.sidebarExpanded = !1,
                    this.mediaDevice = "",
                    this.isAdmin = !1,
                    this._showMenu = !1,
                    this._isMobileApp = !1,
                    this._isIOS = !1,
                    this.toggleSettingsPanel = !1,
                    this.showProducts = !1,
                    this.screenWidth = window.innerWidth,
                    this.appStoreUrl = je.l,
                    this._cachedActiveRoutes = new Map,
                    this._isMobileApp = !!this._authenticationService.deviceId,
                    this._isIOS = this._isMobileApp && this._authenticationService.devicePlatform === re.t4.Ios,
                    this.language = this._settingsService.language,
                    this._settingsService.getConfigChanged$("language").pipe((0,
                    ne.sL)(this)).subscribe(Oo=>{
                        this.language = Oo
                    }
                    )
                }
                ngOnInit() {
                    this._exchangeService.chain$.pipe((0,
                    ne.sL)(this), (0,
                    D.h)(l=>l !== this.chainSelected), (0,
                    Z.b)(l=>{
                        this.chainSelected = l ?? me.qop.Ethereum,
                        this._cdRef.detectChanges()
                    }
                    )).subscribe(),
                    this.timeoutButton = setTimeout(()=>this.showMenuButton = !1, 2e3),
                    this._router.events.pipe((0,
                    ne.sL)(this), (0,
                    D.h)(l=>l instanceof n.m2), (0,
                    Z.b)(()=>{
                        this._cachedActiveRoutes.clear()
                    }
                    )).subscribe(),
                    this._router.events.pipe((0,
                    ne.sL)(this), (0,
                    D.h)(l=>l instanceof n.QW), (0,
                    Z.b)(()=>{
                        this.showMenu = !1,
                        this._cdRef.markForCheck()
                    }
                    )).subscribe(),
                    this._settingsService.onThemeChange$.pipe((0,
                    ne.sL)(this), (0,
                    D.h)(l=>l !== this.theme)).subscribe(l=>{
                        this.theme = l,
                        this._cdRef.detectChanges()
                    }
                    ),
                    this._authenticationService.currentUser$.pipe((0,
                    ne.sL)(this)).subscribe(l=>{
                        this.is_free = !l || -1 === [re.uU.P100, re.uU.P20].indexOf(l.plan),
                        this.userId = l && l.id && l.id.toLowerCase(),
                        this.roleStr = l?.plan === re.uU.P100 ? "premium" : l?.plan === re.uU.P20 ? "standard" : "free",
                        this.isAdmin = !!l && (l.isAdmin || l.isSuperAdmin),
                        this._cdRef.detectChanges()
                    }
                    ),
                    this._breakpointObserver.observe([p.K5]).pipe((0,
                    ne.sL)(this), (0,
                    nt.g)(100)).subscribe(l=>{
                        "" !== this.mediaDevice && this._sideMenuChange$.next(),
                        this.mediaDevice = l.matches ? "mobileTablet" : "desktop",
                        this.sidebarExpanded = !1,
                        this.showMenu = !1,
                        this._cdRef.markForCheck()
                    }
                    ),
                    this._sideMenuService.toggleMenuObs.pipe((0,
                    ne.sL)(this), (0,
                    Z.b)(l=>{
                        this.showMenu = l,
                        this._cdRef.markForCheck()
                    }
                    )).subscribe()
                }
                ngAfterViewInit() {
                    (0,
                    ot.R)(this.sidebar.nativeElement, "mouseenter").pipe((0,
                    ne.sL)(this)).subscribe(()=>{
                        this.sidebarExpanded = !0,
                        this._cdRef.detectChanges()
                    }
                    ),
                    (0,
                    ot.R)(this.sidebar.nativeElement, "mouseleave").pipe((0,
                    ne.sL)(this)).subscribe(()=>{
                        this.sidebarExpanded = !1,
                        this.showProducts = !1,
                        this._cdRef.detectChanges()
                    }
                    )
                }
                toggleMenu() {
                    this._sideMenuService.toggleMenu(),
                    this._cdRef.markForCheck()
                }
                changeTheme() {
                    this._settingsService.changeConfig({
                        dark_theme: this.theme === re.Q2.Light
                    })
                }
                onDestroy() {
                    clearTimeout(this.timeoutButton)
                }
                isPageAvailableInChain(l, v) {
                    return (l !== ge.$.Multiswap || !this._isIOS) && Be.c.isPageAvailableInChain(l, v)
                }
                isRouteActive(l, v=!1) {
                    let I = this._cachedActiveRoutes.get(l);
                    return null != I || (I = this._router.isActive(l, v ? {
                        paths: "exact",
                        queryParams: "exact",
                        fragment: "ignored",
                        matrixParams: "ignored"
                    } : {
                        paths: "subset",
                        queryParams: "subset",
                        fragment: "ignored",
                        matrixParams: "ignored"
                    }),
                    this._cachedActiveRoutes.set(l, I)),
                    I
                }
                navigateToPage(l, v, I=!1, K=me.qop.Ethereum) {
                    if (new RegExp(ge.$.WalletInfo).test(v) && this.is_free)
                        return;
                    if (l.ctrlKey || l.metaKey)
                        return void this._routingService.windowNavigate(`${v}`, "_blank", "noopener");
                    let rt = this.isRouteActive(v, I);
                    const pt = new RegExp(`/${this.chainSelected}/${ge.$.PairExplorer}/${me.CXF.getDefaultPairByChain(K)}`);
                    if (pt.test(v) && pt.test(this._router.url) && (rt = !0),
                    rt) {
                        if (this.screenWidth > 1023)
                            return
                    } else
                        this._routingService.navigate(v);
                    this.toggleMenu()
                }
                getDefaultPair(l) {
                    return me.CXF.getDefaultPairByChain(l)
                }
                getNewPairsBotUrl(l) {
                    return me.CXF.getChainData(l).newPairsBotUrl
                }
                goToUserAccount() {
                    this.toggleMenu(),
                    this._routingService.navigate("/user/account")
                }
                disconnect() {
                    var l = this;
                    return (0,
                    e.Z)(function*() {
                        try {
                            l._web3ModalService = l._web3ModalService ?? l._injector.get(me.ydy),
                            yield(0,
                            N.n)(l._web3ModalService.isLoaded$),
                            yield l._web3ModalService.disconnect(),
                            l._authenticationService.logout()
                        } catch (v) {
                            console.error("Could not disconnect", v)
                        }
                    })()
                }
                toggleSettings(l) {
                    this.toggleSettingsPanel = l,
                    this._cdRef.detectChanges()
                }
                showVideoModal() {
                    this._settingsService.showAcademyModal(!0),
                    "mobileTablet" === this.mediaDevice && this.toggleMenu()
                }
                toggleProducts() {
                    this.showProducts = !this.showProducts,
                    this._cdRef.detectChanges()
                }
                openSocialModalOrPanel() {
                    "mobileTablet" === this.mediaDevice ? this.toggleUpdateLinksPanel(!0) : this._modalService.open(Dn.e, {
                        centered: !0,
                        scrollable: !0
                    })
                }
                toggleUpdateLinksPanel(l) {
                    this.showUpdateLinksPanel = l,
                    this._cdRef.detectChanges()
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.Y36(re.$h),o.Y36(me.OqV),o.Y36(n.F0),o.Y36(re.gb),o.Y36(o.sBO),o.Y36(It.Yg),o.Y36(sn.E),o.Y36(re.qA),o.Y36(re.Zn),o.Y36(o.zs3),o.Y36(ee.FF))
            }
            ,
            M.\u0275cmp = o.Xpm({
                type: M,
                selectors: [["app-side-menu"]],
                viewQuery: function(l, v) {
                    if (1 & l && o.Gf(Yt, 5),
                    2 & l) {
                        let I;
                        o.iGM(I = o.CRH()) && (v.sidebar = I.first)
                    }
                },
                hostBindings: function(l, v) {
                    1 & l && o.NdJ("scroll", function(K) {
                        return v.onScroll(K)
                    }, !1, o.Jf7)
                },
                standalone: !0,
                features: [o.qOj, o.jDz],
                decls: 68,
                vars: 50,
                consts: [[1, "main-sidebar", "px-0", 3, "ngClass"], ["sidebar", ""], [1, "main-navbar"], [1, "navbar", "justify-content-between", "navbar-light", "flex-md-nowrap", "p-0"], [1, "navbar-brand", "w-100", "me-0"], ["id", "main-logo"], [1, "align-left", 3, "href", "click"], ["class", "short-logo", "src", "assets/img/logo/dextools_logo.png", "alt", "dextools logo small", "loading", "lazy", "height", "40px", "width", "40px", 4, "ngIf"], ["class", "large-logo", "alt", "dextools logo", 3, "src", 4, "ngIf"], ["type", "button", "class", "close", "aria-label", "Close", 3, "click", 4, "ngIf"], [1, "nav-wrapper"], [1, "nav", "nav--no-borders", "flex-column"], ["class", "nav-item", 4, "ngIf"], [1, "nav", "nav--no-borders", "flex-column", "list-container"], [1, "nav-item"], [1, "nav-link", 3, "href", "click"], ["name", "multichart", 3, "width"], ["class", "nav nav--no-borders flex-column group-submenu-desktop", 4, "ngIf"], ["href", "javaScript:", 1, "nav-link", "group-menu-item", 3, "click"], [1, "fa-menu-icon", 3, "icon"], ["class", "nav nav--no-borders flex-column nav-item group-submenu-mobile", 4, "ngIf"], [1, "main-sidebar__nav-title", 3, "ngClass"], ["target", "_blank", "rel", "noopener", "href", "https://burn.dextools.io/", 1, "nav-link"], ["icon", "fire", 1, "fa-menu-icon"], ["href", "javascript:", 1, "nav-link", "academy-link", 3, "click"], [1, "youtube-icon", 3, "icon"], ["target", "_blank", "rel", "noopener", "href", "https://info.dextools.io/", 1, "nav-link"], ["icon", "globe", 1, "fa-menu-icon"], ["class", "nav nav--no-borders flex-column", 4, "ngIf"], [3, "ngTemplateOutlet", 4, "ngIf"], [4, "ngIf"], [3, "backdrop", "panelTitle", "panelSubtitle", "closeButton", "relativeButton", "maxHeight", "panelClosed", 4, "ngIf"], ["feedback", ""], ["productList", ""], [3, "closeButton", "showHeader", "panelClosed", 4, "ngIf"], ["src", "assets/img/logo/dextools_logo.png", "alt", "dextools logo small", "loading", "lazy", "height", "40px", "width", "40px", 1, "short-logo"], ["alt", "dextools logo", 1, "large-logo", 3, "src"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["placement", "left", 3, "icon", "ngbTooltip"], ["icon", "house", "size", "lg"], ["name", "pairExplorer", 3, "width"], ["name", "liveNewPairs", 3, "width"], [3, "innerHTML"], ["name", "bigSwap", "transform", "scale(1.2)", 3, "width"], ["name", "multiswap", 3, "width"], ["name", "stats", 3, "width"], ["placement", "auto", 1, "nav-link", 3, "ngbTooltip", "disableTooltip", "triggers", "autoClose", "href", "click"], ["name", "walletInfo", 3, "width"], [1, "nav", "nav--no-borders", "flex-column", "group-submenu-desktop"], [3, "ngTemplateOutlet"], [1, "nav", "nav--no-borders", "flex-column", "nav-item", "group-submenu-mobile"], ["icon", "display-chart-up", "size", "lg"], ["icon", "check", "size", "lg"], [1, "nav-link", 3, "click"], ["size", "lg", 3, "icon"], [1, "user-connection"], ["class", "btn-primary btn-disconnect", 3, "click", 4, "ngIf"], ["class", "btn-primary btn-connect", 3, "click", 4, "ngIf"], ["href", "#", 1, "nav-link", 3, "click"], [1, "user-account"], [1, "badge", 3, "ngClass"], [1, "btn-primary", "btn-disconnect", 3, "click"], [1, "btn-primary", "btn-connect", 3, "click"], [3, "backdrop", "panelTitle", "panelSubtitle", "closeButton", "relativeButton", "maxHeight", "panelClosed"], [3, "mobile"], [1, "update-token-container", 3, "ngClass"], [3, "click"], [3, "icon"], ["href", "https://t.me/DexTools_Pricebot", "target", "_blank", "rel", "noopener", 1, "nav-link"], ["name", "priceBot", 3, "width"], ["target", "_blank", "rel", "noopener", 1, "nav-link", 3, "href"], ["href", "https://github.com/dextools-io/chart-widget", "target", "_blank", "rel", "noopener", 1, "nav-link"], ["icon", "code", 1, "fa-menu-icon"], ["href", "https://github.com/dextools-io/aggregator-widget", "target", "_blank", "rel", "noopener", 1, "nav-link"], [1, "position-relative", "bg-container"], [1, "badge", "bg-info", "new-tag"], ["href", "https://api-dev.dextools.io/docs/", "target", "_blank", "rel", "noopener", 1, "nav-link"], ["icon", "gear-code", 1, "fa-menu-icon"], ["name", "newPairsBot", 3, "width"], [3, "closeButton", "showHeader", "panelClosed"]],
                template: function(l, v) {
                    1 & l && (o.TgZ(0, "aside", 0, 1)(2, "div", 2)(3, "nav", 3)(4, "div", 4)(5, "div", 5)(6, "a", 6),
                    o.NdJ("click", function(K) {
                        return v.navigateToPage(K, v.ChainPage.Dashboard + v.chainSelected, !0),
                        !1
                    }),
                    o.YNc(7, Un, 1, 0, "img", 7),
                    o.YNc(8, cn, 1, 2, "img", 8),
                    o.qZA(),
                    o.YNc(9, Bt, 3, 5, "button", 9),
                    o.qZA()()()(),
                    o.TgZ(10, "div", 10)(11, "ul", 11),
                    o.YNc(12, dn, 7, 8, "li", 12),
                    o.qZA(),
                    o.TgZ(13, "ul", 13),
                    o.YNc(14, un, 7, 11, "li", 12),
                    o.YNc(15, zt, 6, 9, "li", 12),
                    o.YNc(16, hn, 7, 10, "li", 12),
                    o.TgZ(17, "li", 14)(18, "a", 15),
                    o.NdJ("click", function(K) {
                        return v.navigateToPage(K, "/" + v.ChainPage.Multichart),
                        !1
                    }),
                    o.TgZ(19, "div"),
                    o._UZ(20, "app-icon", 16),
                    o.qZA(),
                    o.TgZ(21, "span"),
                    o._uU(22),
                    o.ALo(23, "translate"),
                    o.qZA()()(),
                    o.YNc(24, gn, 7, 10, "li", 12),
                    o.YNc(25, Gt, 7, 10, "li", 12),
                    o.YNc(26, pn, 8, 19, "li", 12),
                    o.TgZ(27, "li", 14),
                    o.YNc(28, mn, 2, 1, "ul", 17),
                    o.TgZ(29, "a", 18),
                    o.NdJ("click", function() {
                        return v.toggleProducts(),
                        !1
                    }),
                    o.TgZ(30, "div"),
                    o._UZ(31, "fa-icon", 19),
                    o.qZA(),
                    o.TgZ(32, "span"),
                    o._uU(33),
                    o.ALo(34, "translate"),
                    o.qZA()()(),
                    o.YNc(35, Rn, 2, 1, "ul", 20),
                    o.qZA(),
                    o.TgZ(36, "h6", 21),
                    o._uU(37),
                    o.ALo(38, "translate"),
                    o.qZA(),
                    o.TgZ(39, "ul", 11),
                    o.YNc(40, oo, 6, 6, "li", 12),
                    o.TgZ(41, "li", 14)(42, "a", 22)(43, "div"),
                    o._UZ(44, "fa-icon", 23),
                    o.qZA(),
                    o.TgZ(45, "span"),
                    o._uU(46, "Burn"),
                    o.qZA()()(),
                    o.TgZ(47, "li", 14)(48, "a", 24),
                    o.NdJ("click", function() {
                        return v.showVideoModal(),
                        !1
                    }),
                    o._UZ(49, "fa-icon", 25),
                    o.TgZ(50, "span"),
                    o._uU(51),
                    o.ALo(52, "translate"),
                    o.qZA()()(),
                    o.TgZ(53, "li", 14)(54, "a", 26)(55, "div"),
                    o._UZ(56, "fa-icon", 27),
                    o.qZA(),
                    o.TgZ(57, "span"),
                    o._uU(58, "Web"),
                    o.qZA()()()(),
                    o.YNc(59, fn, 3, 1, "ul", 28),
                    o.YNc(60, Nn, 1, 1, "ng-container", 29),
                    o.YNc(61, bn, 14, 9, "ng-container", 30),
                    o.qZA()(),
                    o.YNc(62, Kt, 4, 11, "app-panel-component", 31),
                    o.YNc(63, $n, 5, 6, "ng-template", null, 32, o.W1O),
                    o.YNc(65, qt, 43, 23, "ng-template", null, 33, o.W1O),
                    o.YNc(67, Qt, 2, 2, "app-panel-component", 34)),
                    2 & l && (o.Q6J("ngClass", o.VKq(45, Zn, v.showMenu)),
                    o.xp6(6),
                    o.cQ8("href", "", v.context, "/", v.language, "/", v.chainSelected, "", o.LSH),
                    o.xp6(1),
                    o.Q6J("ngIf", !v.showMenu && !v.sidebarExpanded),
                    o.xp6(1),
                    o.Q6J("ngIf", !!v.showMenu || !!v.sidebarExpanded),
                    o.xp6(1),
                    o.Q6J("ngIf", v.showMenu),
                    o.xp6(3),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.Dashboard, v.chainSelected)),
                    o.xp6(2),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.PairExplorer, v.chainSelected)),
                    o.xp6(1),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.LiveNewPairs, v.chainSelected)),
                    o.xp6(1),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.BigSwap, v.chainSelected)),
                    o.xp6(2),
                    o.ekj("active", v.isRouteActive("/" + v.language + "/" + v.ChainPage.Multichart)),
                    o.cQ8("href", "", v.context, "/", v.language, "/", v.ChainPage.Multichart, "", o.LSH),
                    o.xp6(2),
                    o.Q6J("width", 20),
                    o.xp6(2),
                    o.Oqu(o.lcZ(23, 37, "header.multichart")),
                    o.xp6(2),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.Multiswap, v.chainSelected)),
                    o.xp6(1),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.Stats, v.chainSelected)),
                    o.xp6(1),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.WalletInfo, v.chainSelected)),
                    o.xp6(2),
                    o.Q6J("ngIf", v.showProducts && "desktop" === v.mediaDevice),
                    o.xp6(1),
                    o.uIk("datatype", "products"),
                    o.xp6(2),
                    o.Q6J("icon", v.showProducts ? "minus-circle" : "plus-circle"),
                    o.xp6(2),
                    o.Oqu(o.lcZ(34, 39, "header.products")),
                    o.xp6(2),
                    o.Q6J("ngIf", v.showProducts && "mobileTablet" === v.mediaDevice),
                    o.xp6(1),
                    o.Q6J("ngClass", o.VKq(47, Pn, !!v.sidebarExpanded || "mobileTablet" === v.mediaDevice)),
                    o.xp6(1),
                    o.Oqu(o.lcZ(38, 41, "header.extra")),
                    o.xp6(3),
                    o.Q6J("ngIf", v.isPageAvailableInChain(v.ChainPage.Dextswap, v.chainSelected)),
                    o.xp6(8),
                    o.uIk("datatype", "dextools-academy"),
                    o.xp6(1),
                    o.Q6J("icon", o.DdM(49, On)),
                    o.xp6(2),
                    o.Oqu(o.lcZ(52, 43, "header.dextools_academy")),
                    o.xp6(8),
                    o.Q6J("ngIf", v.isAdmin),
                    o.xp6(1),
                    o.Q6J("ngIf", "desktop" === v.mediaDevice),
                    o.xp6(1),
                    o.Q6J("ngIf", "mobileTablet" === v.mediaDevice),
                    o.xp6(1),
                    o.Q6J("ngIf", "mobileTablet" === v.mediaDevice && v.toggleSettingsPanel),
                    o.xp6(5),
                    o.Q6J("ngIf", v.showUpdateLinksPanel))
                },
                dependencies: [T.mk, T.O5, L.uH, L.BN, Y.aw, Y.X$, ee._L, T.tP, Oe.lQ, p.yX, Ft.b, rn.r],
                styles: [".row[_ngcontent-%COMP%]{align-content:center;display:flex;flex-flow:row wrap}.column[_ngcontent-%COMP%]{align-content:center;display:flex;flex-flow:row wrap;flex-direction:column}.col-1[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 8.33%;max-width:8.33%}@media only screen and (min-width: 400px){.col-xs-1[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 8.33%;max-width:8.33%}}@media screen and (min-width: 800px){.col-md-1[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 8.33%;max-width:8.33%}}@media screen and (min-width: 1000px){.col-lg-1[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 8.33%;max-width:8.33%}}@media screen and (min-width: 1200px){.col-xl-1[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 8.33%;max-width:8.33%}}@media screen and (min-width: 1400px){.col-xxl-1[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 8.33%;max-width:8.33%}}.col-2[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%}@media only screen and (min-width: 400px){.col-xs-2[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%}}@media screen and (min-width: 800px){.col-md-2[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%}}@media screen and (min-width: 1000px){.col-lg-2[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%}}@media screen and (min-width: 1200px){.col-xl-2[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%}}@media screen and (min-width: 1400px){.col-xxl-2[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%}}.col-3[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 25%;max-width:25%}@media only screen and (min-width: 400px){.col-xs-3[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 25%;max-width:25%}}@media screen and (min-width: 800px){.col-md-3[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 25%;max-width:25%}}@media screen and (min-width: 1000px){.col-lg-3[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 25%;max-width:25%}}@media screen and (min-width: 1200px){.col-xl-3[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 25%;max-width:25%}}@media screen and (min-width: 1400px){.col-xxl-3[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 25%;max-width:25%}}.col-4[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 33.33%;max-width:33.33%}@media only screen and (min-width: 400px){.col-xs-4[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 33.33%;max-width:33.33%}}@media screen and (min-width: 800px){.col-md-4[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 33.33%;max-width:33.33%}}@media screen and (min-width: 1000px){.col-lg-4[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 33.33%;max-width:33.33%}}@media screen and (min-width: 1200px){.col-xl-4[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 33.33%;max-width:33.33%}}@media screen and (min-width: 1400px){.col-xxl-4[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 33.33%;max-width:33.33%}}.col-5[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 41.66%;max-width:41.66%}@media only screen and (min-width: 400px){.col-xs-5[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 41.66%;max-width:41.66%}}@media screen and (min-width: 800px){.col-md-5[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 41.66%;max-width:41.66%}}@media screen and (min-width: 1000px){.col-lg-5[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 41.66%;max-width:41.66%}}@media screen and (min-width: 1200px){.col-xl-5[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 41.66%;max-width:41.66%}}@media screen and (min-width: 1400px){.col-xxl-5[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 41.66%;max-width:41.66%}}.col-6[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 50%;max-width:50%}@media only screen and (min-width: 400px){.col-xs-6[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 50%;max-width:50%}}@media screen and (min-width: 800px){.col-md-6[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 50%;max-width:50%}}@media screen and (min-width: 1000px){.col-lg-6[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 50%;max-width:50%}}@media screen and (min-width: 1200px){.col-xl-6[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 50%;max-width:50%}}@media screen and (min-width: 1400px){.col-xxl-6[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 50%;max-width:50%}}.col-7[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 58.33%;max-width:58.33%}@media only screen and (min-width: 400px){.col-xs-7[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 58.33%;max-width:58.33%}}@media screen and (min-width: 800px){.col-md-7[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 58.33%;max-width:58.33%}}@media screen and (min-width: 1000px){.col-lg-7[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 58.33%;max-width:58.33%}}@media screen and (min-width: 1200px){.col-xl-7[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 58.33%;max-width:58.33%}}@media screen and (min-width: 1400px){.col-xxl-7[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 58.33%;max-width:58.33%}}.col-8[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 66.66%;max-width:66.66%}@media only screen and (min-width: 400px){.col-xs-8[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 66.66%;max-width:66.66%}}@media screen and (min-width: 800px){.col-md-8[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 66.66%;max-width:66.66%}}@media screen and (min-width: 1000px){.col-lg-8[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 66.66%;max-width:66.66%}}@media screen and (min-width: 1200px){.col-xl-8[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 66.66%;max-width:66.66%}}@media screen and (min-width: 1400px){.col-xxl-8[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 66.66%;max-width:66.66%}}.col-9[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 75%;max-width:75%}@media only screen and (min-width: 400px){.col-xs-9[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 75%;max-width:75%}}@media screen and (min-width: 800px){.col-md-9[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 75%;max-width:75%}}@media screen and (min-width: 1000px){.col-lg-9[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 75%;max-width:75%}}@media screen and (min-width: 1200px){.col-xl-9[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 75%;max-width:75%}}@media screen and (min-width: 1400px){.col-xxl-9[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 75%;max-width:75%}}.col-10[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 83.33%;max-width:83.33%}@media only screen and (min-width: 400px){.col-xs-10[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 83.33%;max-width:83.33%}}@media screen and (min-width: 800px){.col-md-10[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 83.33%;max-width:83.33%}}@media screen and (min-width: 1000px){.col-lg-10[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 83.33%;max-width:83.33%}}@media screen and (min-width: 1200px){.col-xl-10[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 83.33%;max-width:83.33%}}@media screen and (min-width: 1400px){.col-xxl-10[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 83.33%;max-width:83.33%}}.col-11[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 91.66%;max-width:91.66%}@media only screen and (min-width: 400px){.col-xs-11[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 91.66%;max-width:91.66%}}@media screen and (min-width: 800px){.col-md-11[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 91.66%;max-width:91.66%}}@media screen and (min-width: 1000px){.col-lg-11[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 91.66%;max-width:91.66%}}@media screen and (min-width: 1200px){.col-xl-11[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 91.66%;max-width:91.66%}}@media screen and (min-width: 1400px){.col-xxl-11[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 91.66%;max-width:91.66%}}.col-12[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 100%;max-width:100%}@media only screen and (min-width: 400px){.col-xs-12[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 100%;max-width:100%}}@media screen and (min-width: 800px){.col-md-12[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 100%;max-width:100%}}@media screen and (min-width: 1000px){.col-lg-12[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 100%;max-width:100%}}@media screen and (min-width: 1200px){.col-xl-12[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 100%;max-width:100%}}@media screen and (min-width: 1400px){.col-xxl-12[_ngcontent-%COMP%]{box-sizing:border-box;flex:0 0 100%;max-width:100%}}.flex[_ngcontent-%COMP%]{display:flex}.f-center[_ngcontent-%COMP%]{justify-content:center}.f-around[_ngcontent-%COMP%]{justify-content:space-around}.f-between[_ngcontent-%COMP%]{justify-content:space-between}.f-start[_ngcontent-%COMP%]{justify-content:flex-start}.f-end[_ngcontent-%COMP%]{justify-content:flex-end}.f-stretch[_ngcontent-%COMP%]{justify-content:stretch}.f-v-center[_ngcontent-%COMP%]{align-items:center}.f-v-baseline[_ngcontent-%COMP%]{align-items:baseline}.f-v-start[_ngcontent-%COMP%]{align-items:flex-start}.f-v-end[_ngcontent-%COMP%]{align-items:flex-end}.f-v-stretch[_ngcontent-%COMP%]{align-items:stretch}.main-sidebar[_ngcontent-%COMP%]{background-color:#f4f5f6;box-sizing:border-box;flex:0 0 16.66%;max-width:16.66%;top:0;bottom:0;position:fixed;z-index:99999;will-change:transform;transition:transform .2s ease-in-out,width .2s ease-in-out;box-shadow:#a5abb84d 0 .0625rem .3125rem;padding-bottom:1.25rem;width:4rem}body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#f4f5f6}.main-sidebar.open[_ngcontent-%COMP%]{transform:translate(0);z-index:999993}.main-sidebar[_ngcontent-%COMP%]   .toggle-sidebar[_ngcontent-%COMP%]{position:absolute;right:0;height:100%;padding:1.25rem;font-size:20px;border-left:.0625rem solid #e1e5eb}.main-sidebar[_ngcontent-%COMP%]   .toggle-sidebar[_ngcontent-%COMP%]:hover{cursor:pointer}.navbar-brand[_ngcontent-%COMP%]{padding-top:.7rem;padding-bottom:.7rem;margin-right:1.5rem;font-size:.9rem;font-weight:400}.main-sidebar[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{overflow:hidden;height:3.75rem;font-size:16px}.main-sidebar[_ngcontent-%COMP%]   .nav-wrapper[_ngcontent-%COMP%]{overflow-y:auto;overflow-x:hidden;height:calc(100% - 61px);position:relative}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%], .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{white-space:nowrap;min-width:100%;max-width:100%;overflow:hidden;text-overflow:ellipsis;will-change:background-color,color;transition:color .2s ease,background-color .2s ease;font-size:.85rem}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{font-weight:400;padding:.75rem 1.25rem;color:#818ea3}body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{color:#818ea3}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.disable-link[_ngcontent-%COMP%]{opacity:.3}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{min-width:1.25rem;text-align:center;vertical-align:middle;will-change:color;transition:color .2s ease;margin-right:.575rem}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#e2e7ec;color:#142028}body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#23323c}body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{color:#fff}body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{color:#142028}body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{color:#142028}.main-sidebar[_ngcontent-%COMP%]   .nav--no-borders[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{border-bottom:0}.main-sidebar__nav-title[_ngcontent-%COMP%]{color:#818ea3;overflow:hidden;text-overflow:ellipsis;transition:color .25s ease-in-out;will-change:color;text-transform:uppercase;margin:0;font-size:.625rem;padding:.625rem .375rem;text-align:center}body.dark-theme   [_nghost-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%]{color:#818ea3}.main-sidebar__nav-title.no-uppercase[_ngcontent-%COMP%]{text-transform:none}.main-sidebar__nav-title.align-left[_ngcontent-%COMP%]{padding-left:1.25rem;padding-right:1.25rem;text-align:left}.navbar[_ngcontent-%COMP%], .main-sidebar__nav-title[_ngcontent-%COMP%], .nav[_ngcontent-%COMP%]{border-color:#f4f5f6!important}body.dark-theme   [_nghost-%COMP%]   .navbar[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .nav[_ngcontent-%COMP%]{border-color:#142028!important}body.dark-theme[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]{border-color:#142028!important}body.light   [_nghost-%COMP%]   .navbar[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .nav[_ngcontent-%COMP%]{border-color:#f4f5f6!important}body.light[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .main-sidebar__nav-title[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]{border-color:#f4f5f6!important}.main-sidebar[_ngcontent-%COMP%]:hover{width:13.75rem;z-index:999993}.main-sidebar[_ngcontent-%COMP%]:hover   .nav-link[_ngcontent-%COMP%]{text-overflow:visible}.main-sidebar[_ngcontent-%COMP%]:hover   .nav-link[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:1!important;font-size:inherit!important}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{text-overflow:initial}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:0;font-size:0;transition:opacity .2s ease-in-out}.main-sidebar[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]{overflow:visible}.main-navbar[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]{height:3.75rem}.main-navbar[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{display:flex}.main-navbar[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{min-width:3.75rem}.main-navbar[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .nav-link-icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{line-height:2.5rem}.navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{font-weight:500;color:#3d5170}body.dark-theme   [_nghost-%COMP%]   .navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{color:#cacedb}body.dark-theme[_ngcontent-%COMP%]   .navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{color:#cacedb}body.light   [_nghost-%COMP%]   .navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{color:#3d5170}body.light[_ngcontent-%COMP%]   .navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{color:#3d5170}.navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]:focus, .navbar-light[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]:hover{color:#000000e6}.close[_ngcontent-%COMP%]{position:absolute;top:1rem;right:.625rem}.nav-link[_ngcontent-%COMP%]{padding:.625rem;transition:all .25s cubic-bezier(.27,.01,.38,1.06);cursor:pointer;font-size:13px;font-weight:400}@media (min-width: 1024px){.nav-link.active[_ngcontent-%COMP%]:hover{cursor:default}}.nav-link[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:not(.d-flex){display:inline-block;margin-top:-.3125rem;margin-right:.5390625rem;text-align:center;width:1.25rem}.nav-link.disabled[_ngcontent-%COMP%]{color:#868e96}.main-sidebar[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]   a.align-left[_ngcontent-%COMP%]{position:absolute;left:1rem;top:1rem}.main-sidebar[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]   .large-logo[_ngcontent-%COMP%]{height:1.875rem;width:auto}.main-sidebar[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]   .short-logo[_ngcontent-%COMP%]{margin-left:-.5rem;margin-top:-.3125rem}.main-sidebar__nav-title.has-icon[_ngcontent-%COMP%]{cursor:pointer;padding-right:.0625rem;padding-left:1rem;transition:opacity ease-out .3s}.nav-link.theme-active[_ngcontent-%COMP%]{color:#fff!important}.toggle-icon-changer[_ngcontent-%COMP%]{margin-top:0!important;display:flex!important;justify-content:space-around;align-items:center}.theme-icon[_ngcontent-%COMP%]{color:#818ea3}.theme-icon.theme-active[_ngcontent-%COMP%]{color:#fff}.theme-icon-left[_ngcontent-%COMP%]{margin-top:0;margin-right:-.3125rem}.new-tag[_ngcontent-%COMP%]{left:30%;top:0rem;font-size:.5rem}.user-account[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%]{font-size:.625rem;font-weight:400;margin-left:.3125rem;text-transform:capitalize;color:#fff}.user-account[_ngcontent-%COMP%]   .badge.free[_ngcontent-%COMP%]{background:#23323c}.user-account[_ngcontent-%COMP%]   .badge.premium[_ngcontent-%COMP%]{background:#efb90a}.user-account[_ngcontent-%COMP%]   .badge.standard[_ngcontent-%COMP%]{background:#8247e5}.user-connection[_ngcontent-%COMP%]{display:flex;padding:.625rem 1.25rem}.user-connection[_ngcontent-%COMP%]   .btn-connect[_ngcontent-%COMP%], .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{font-family:Poppins,Roboto,sans-serif;font-style:normal;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:14px;line-height:20px;color:#142028;border-radius:.625rem;padding:.375rem .75rem;border:none;width:100%;height:3rem}body.dark-theme   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-connect[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-connect[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-connect[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-connect[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{color:#142028}.user-connection[_ngcontent-%COMP%]   .btn-connect[_ngcontent-%COMP%]:hover, .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]:hover{background-color:#00a2bf}.user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%], .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]:hover{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]:hover{background-color:#23323c}body.light   [_nghost-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .user-connection[_ngcontent-%COMP%]   .btn-disconnect[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}@media (max-width: 770px){.main-sidebar[_ngcontent-%COMP%]{background-color:#fff}body.dark-theme   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#0b1217}body.light   [_nghost-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#fff}body.light[_ngcontent-%COMP%]   .main-sidebar[_ngcontent-%COMP%]{background-color:#fff}}@media (max-width: 991.98px){.main-sidebar[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{font-size:90%}}@media (max-width: 1023px){.main-sidebar[_ngcontent-%COMP%]{transform:translate(100%);box-shadow:none;width:100%;box-sizing:border-box;flex:0 0 100%;max-width:100%}.main-sidebar[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:1!important;font-size:inherit!important}.main-sidebar[_ngcontent-%COMP%]:hover{width:100%}}body.dark-theme   [_nghost-%COMP%]     .main-sidebar{box-shadow:.1875rem .25rem .875rem #0000004d}body.dark-theme   [_nghost-%COMP%]     .group-submenu-desktop{box-shadow:.1875rem .25rem .875rem #0000004d}.main-sidebar[_ngcontent-%COMP%]:hover   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:1;font-size:inherit;margin-left:.375rem}.update-token-container[_ngcontent-%COMP%]{margin-top:1.25rem;display:flex;justify-content:center;align-items:center}.update-token-container.open[_ngcontent-%COMP%]{justify-content:flex-start;padding:0 1.25rem}.update-token-container.mobile[_ngcontent-%COMP%]{margin:.625rem 0 1.25rem;padding:0 1.25rem;justify-content:flex-start}.update-token-container.mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .update-token-container.mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .update-token-container.mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .update-token-container.mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .update-token-container.mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#e2e7ec}.update-token-container.mobile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:.375rem}.update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center;background:none;border:none;border-radius:.625rem;padding:.5rem .625rem;background-color:#e2e7ec;color:#3d5170;font-size:13px}body.dark-theme   [_nghost-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#cacedb}body.dark-theme[_ngcontent-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#cacedb}body.light   [_nghost-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#3d5170}body.light[_ngcontent-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#3d5170}.update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#00b8d8!important;color:#142028;text-decoration:none}body.dark-theme   [_nghost-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff}body.light   [_nghost-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}body.light[_ngcontent-%COMP%]   .update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}.update-token-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:0;font-size:0;transition:opacity .2s ease-in-out;transition:font-size .2s ease-in-out}.academy-link[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem;line-height:1}.academy-link[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:20px}.group-menu-item[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:20px;vertical-align:middle}.group-submenu-desktop[_ngcontent-%COMP%]{position:fixed;right:-9.375rem;background-color:#f4f5f6;border-radius:.625rem;box-shadow:#a5abb84d 0 .0625rem .3125rem}body.dark-theme   [_nghost-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]{background-color:#f4f5f6}.group-submenu-desktop[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{border-radius:.625rem;background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#23323c}body.light   [_nghost-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .group-submenu-desktop[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}.group-submenu-mobile[_ngcontent-%COMP%]{padding-left:1.25rem}.fa-menu-icon[_ngcontent-%COMP%]{font-size:20px;vertical-align:middle}.list-container[_ngcontent-%COMP%]{margin-top:.625rem}"],
                data: {
                    animation: [(0,
                    at.X$)("hoverAnimation", [(0,
                    at.SB)("in", (0,
                    at.oB)({
                        opacity: 1
                    })), (0,
                    at.eR)(":enter", [(0,
                    at.oB)({
                        opacity: 0
                    }), (0,
                    at.jt)(200)])])]
                },
                changeDetection: 0
            }),
            M
        }
        )();
        var A = m(86311)
          , w = m(70383)
          , c = m(86612);
        function b(M, G) {
            if (1 & M && (o.TgZ(0, "span"),
            o._uU(1),
            o.qZA()),
            2 & M) {
                const l = G.$implicit;
                o.xp6(1),
                o.AsE("It will be automatically updated in ", l, " ", l > 1 ? "mins" : "min", " or ")
            }
        }
        function k(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "div", 8),
                o._UZ(1, "fa-icon", 9),
                o._uU(2, " New app version available. "),
                o.YNc(3, b, 2, 2, "span", 10),
                o.TgZ(4, "a", 11),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.updateApp())
                }),
                o._uU(5, " Click here to update"),
                o.qZA()()
            }
            if (2 & M) {
                const l = o.oxw();
                o.xp6(3),
                o.Q6J("rxLet", l.forcedUpdateTimeout$)
            }
        }
        function oe(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "div", 12),
                o._UZ(1, "fa-icon", 13),
                o._uU(2),
                o.ALo(3, "translate"),
                o.TgZ(4, "a", 11),
                o.NdJ("click", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.reloadApp())
                }),
                o._uU(5),
                o.ALo(6, "translate"),
                o.qZA(),
                o._uU(7),
                o.ALo(8, "translate"),
                o.qZA()
            }
            2 & M && (o.xp6(2),
            o.hij(" ", o.lcZ(3, 3, "app.real_time_issues_part_1"), " "),
            o.xp6(3),
            o.hij(" ", o.lcZ(6, 5, "app.real_time_issues_part_2"), ""),
            o.xp6(2),
            o.hij(" ", o.lcZ(8, 7, "app.real_time_issues_part_3"), "\n"))
        }
        function Ae(M, G) {
            1 & M && o._UZ(0, "app-side-menu")
        }
        const Ve = function(M) {
            return {
                "align-with-footer": M
            }
        };
        function Mt(M, G) {
            if (1 & M) {
                const l = o.EpF();
                o.TgZ(0, "app-video-button", 14),
                o.NdJ("modalClosed", function() {
                    o.CHM(l);
                    const I = o.oxw();
                    return o.KtG(I.closeAcademyModal())
                }),
                o.qZA()
            }
            if (2 & M) {
                const l = o.oxw();
                o.Q6J("ngClass", o.VKq(3, Ve, l.bottomReached))("link", l.link)("showModal", l.showAcademyModal)
            }
        }
        const Wn = "mobileAppReminderClosingDate"
          , $t = "academy"
          , Yn = "academyModalViewed"
          , zn = "videoVersion";
        let Gn = (()=>{
            class M {
                constructor(l, v, I, K, Ne, rt, pt, yn, jn, Et, Po, Oo, qo, Qo, jo, Xo, ea, ta, na) {
                    this._authenticationService = v,
                    this._notificationsService = I,
                    this._priceTrackService = K,
                    this._priceAlertsService = Ne,
                    this._router = rt,
                    this._favoritePairsService = pt,
                    this._appUpdates = yn,
                    this._exchangeService = jn,
                    this._settingsService = Et,
                    this._analyticsService = Po,
                    this._announcementsService = Oo,
                    this._modalService = qo,
                    this._environment = Qo,
                    this._webSocketService = jo,
                    this._commonService = Xo,
                    this._tokenLogosService = ea,
                    this._location = ta,
                    this._cdRef = na,
                    this.show_alert = !1,
                    this.init_charge = !0,
                    this.dext_interval = re.wd,
                    this.isUpdateAvailable = !1,
                    this.isWsConnectionUnstable = !1,
                    this.screenWidth = window.innerWidth,
                    this.bottomReached = !1,
                    this.chain = this._exchangeService.chain ?? me.qop.Ethereum,
                    this.Chain = me.qop,
                    this._userAccess = !1,
                    this._routerNavigationEnd$ = this._router.events.pipe((0,
                    D.h)(He=>He instanceof n.m2)),
                    this.videoVersion = "01",
                    this.showVideoModal = !1,
                    this.showAcademyModal = !1,
                    this._commonService.initialize(this.chain),
                    this._settingsService.initialize(l),
                    this._analyticsService.initialize(),
                    this._tokenLogosService.initialize(),
                    this._settingsService.showAcademyModal$.subscribe(He=>{
                        He ? (window.open("https://www.youtube.com/c/DEXToolsAcademy", "_blank", "noopener"),
                        ne._Z.getMap($t)?.get(Yn) || (ne._Z.addToMap($t, Yn, !0),
                        this.showAcademyModal = He)) : this.showAcademyModal = !1,
                        this._cdRef.markForCheck()
                    }
                    ),
                    this._favoritePairsService.initialize(),
                    this._authenticationService.currentUser$.pipe((0,
                    Z.b)(He=>{
                        const ht = !!He && [re.uU.P100, re.uU.P20].includes(He.plan);
                        ht !== this._userAccess && (this._userAccess = ht,
                        this.init_charge || this._priceAlertsService.initializeAlerts().subscribe())
                    }
                    )).subscribe(),
                    (0,
                    ye.a)([this._webSocketService.isConnected$(), this._webSocketService.errors$().pipe((0,
                    we.e)(4e3), (0,
                    D.h)(He=>He.length > 0))]).subscribe(([He,ht])=>{
                        !this.isWsConnectionUnstable && ht.length >= 4 && !He && (this.isWsConnectionUnstable = !0,
                        this._cdRef.detectChanges())
                    }
                    ),
                    this._announcementsService.initialize(),
                    this._appUpdates.updateAvailable$.subscribe(He=>{
                        if (He.forcedUpdateTimeout) {
                            const ht = He.forcedUpdateTimeout;
                            this.forcedUpdateTimeout$ = (0,
                            Ge.F)(6e4).pipe((0,
                            Le.q)(ht), (0,
                            Ce.O)(-1), (0,
                            De.U)(ct=>ht - ct - 1), (0,
                            Z.b)(ct=>{
                                0 === ct && this.updateApp()
                            }
                            ))
                        }
                        this.isUpdateAvailable = !0,
                        this._cdRef.detectChanges()
                    }
                    ),
                    (0,
                    ye.a)([this._exchangeService.chain$, this._routerNavigationEnd$, this._settingsService.getConfigChanged$("language")]).pipe((0,
                    Z.b)(He=>{
                        (void 0 === this.previousChain || this._router.getCurrentNavigation()) && (this.previousChain = He[0]),
                        this.previousLanguage || (this.previousLanguage = this._settingsService.language),
                        He[0] === this.previousChain && null != this._router.getCurrentNavigation() && (this.previousLanguage = He[2]),
                        this._cdRef.detectChanges()
                    }
                    ), (0,
                    D.h)(He=>He[0] !== this.previousChain && null == this._router.getCurrentNavigation())).subscribe(He=>{
                        this.chain = He[0] ?? me.qop.Ethereum;
                        let ht = this._router.url;
                        this._router.url !== this._location.path() && (ht = this._location.path(!0),
                        this.previousLanguage = this._settingsService.language);
                        let ct = ht.replace(new RegExp(`${this.previousLanguage}/${this.previousChain}/${ge.$.PairExplorer}/.*`), `${this._settingsService.language}/${this.chain}/${ge.$.PairExplorer}/${me.CXF.getDefaultPairByChain(this.chain)}`);
                        ct = ct.replace(new RegExp(`${this.previousLanguage}/${this.previousChain}/${ge.$.Dextswap}/.*`), `${this._settingsService.language}/${this.chain}/${ge.$.Dextswap}/${w.m.getDefaultTokenByNetwork(w.m.getNetworkByChain(this.chain))}`),
                        ct = ct.replace(new RegExp(`${this.previousLanguage}/${this.previousChain}/(${ge.$.LiveNewPairs}|${ge.$.Multiswap}|${ge.$.WalletInfo}|${ge.$.Stats}|${ge.$.BigSwap})(/.*)?`), `/${this._settingsService.language}/${this.chain}/$1$2`);
                        const xo = ne.lM.convertEnumToArray(me.T4m).join("|")
                          , oa = new RegExp(xo)
                          , Fo = ct.match(oa)
                          , d = `${ge.$.Dashboard}${this._settingsService.language}`
                          , y = Fo ? `/${Fo[0]}` : ""
                          , s = He[0] ? `/${this.chain}` : "";
                        ct = ct.replace(new RegExp(`/${this.previousLanguage}((${this.previousChain ? `/${this.previousChain}` : ""}(/(${xo}))?(#.*)?$|(\\?.*)?$)?|(#.*)|(\\?.*))?$`), `${d}${s}${y}`),
                        this.previousChain = He[0],
                        this.previousLanguage = this._settingsService.language,
                        this._cdRef.detectChanges(),
                        ht !== ct && this._router.navigate([ct])
                    }
                    )
                }
                ngOnInit() {
                    (0,
                    ot.R)(window, "beforeunload").pipe((0,
                    Le.q)(1)).subscribe(()=>{
                        this._priceAlertsService.stopAlerts(),
                        this._webSocketService.closeConnection()
                    }
                    ),
                    (0,
                    ye.a)([this._settingsService.getConfigChanged$("language"), this._routerNavigationEnd$]).pipe((0,
                    Le.q)(1)).subscribe(l=>{
                        this.link = "es" === l[0] ? "https://www.youtube.com/embed/sZi63rVLtgU" : "https://www.youtube.com/embed/WFQRJUnPwH8",
                        this._shouldShowYoutubeVideo(l[1].urlAfterRedirects) && this._loadVideo(),
                        this._cdRef.detectChanges()
                    }
                    ),
                    this._routerNavigationEnd$.pipe((0,
                    Le.q)(1)).subscribe(l=>{
                        this._shouldShowMobileAppReminder(l.urlAfterRedirects) && this.openMobileAppModal()
                    }
                    ),
                    this._authenticationService.currentUser$.subscribe(l=>{
                        if (this.timeout && this.timeout.unsubscribe(),
                        l && l.ts) {
                            let I = !1;
                            Date.now() - l.ts >= this.dext_interval && (I = !0),
                            [re.uU.P100, re.uU.P20].includes(l.plan) && (this.show_alert = !1),
                            this.init_charge && I && this.getTokensDextMethod(l.id),
                            this.timeout = (0,
                            Ze.H)(this.dext_interval).subscribe(()=>this.getTokensDextMethod(l.id))
                        } else
                            !l && !this.show_alert && (this.show_alert = !0,
                            setTimeout(()=>{
                                this.show_alert = !1,
                                this._cdRef.detectChanges()
                            }
                            , 1e4));
                        this._cdRef.detectChanges(),
                        this.init_charge && this._priceAlertsService.priceAlertsIssued$.pipe((0,
                        De.U)(I=>this._priceAlertsService.getNotificationsForAlerts(I, ge.$.PairExplorer)), (0,
                        Z.b)(I=>this._notificationsService.notify(I, 0))).subscribe();
                        const v = ne._Z.get("lastRole") || re.uU.P0;
                        l && [re.uU.P100, re.uU.P20].includes(l.plan) && (this.init_charge || v !== l.plan) && (this._priceAlertsService.getAlertRecipients().pipe((0,
                        Z.b)(I=>{
                            I.email && this._priceAlertsService.setAlertStatus({
                                email: !0
                            }),
                            I.telegramBotId && I.telegramBotUrl && I.telegramUserKey && this._priceAlertsService.setAlertStatus({
                                telegram: !0
                            })
                        }
                        )).subscribe(),
                        ne._Z.set("lastRole", l.plan))
                    }
                    ),
                    this._priceTrackService.historyLoaded$.pipe((0,
                    D.h)(l=>!0 === l), (0,
                    Le.q)(1), (0,
                    $e.z)(()=>this._priceAlertsService.initializeAlerts())).subscribe()
                }
                ngAfterViewInit() {
                    ne.d$.isIntersectionObserverSupported(window) && this._routerNavigationEnd$.pipe((0,
                    nt.g)(1e3)).subscribe(l=>{
                        const v = document.querySelector("footer.main-footer");
                        if (null != v) {
                            const I = {
                                threshold: 0
                            };
                            this._intersectionObserverSubs && this._intersectionObserverSubs.unsubscribe(),
                            this._intersectionObserverSubs = ne.d$.observeElementIntersection(v, I).pipe((0,
                            D.h)(([K])=>null != K)).subscribe(([K])=>{
                                this.handleScrollingBottomReached(K)
                            }
                            )
                        }
                    }
                    ),
                    this.init_charge = !1,
                    this._cdRef.detectChanges()
                }
                getTokensDextMethod(l) {
                    this._authenticationService.getTokensDext(l).subscribe(v=>{
                        v.data && (ne._Z.setString(re.g2.USER_DATA, JSON.stringify({
                            data: v.data
                        })),
                        this._authenticationService.setCurrentUserValue(this._authenticationService.decryptDataUser()))
                    }
                    )
                }
                updateApp() {
                    this._appUpdates.updateApp()
                }
                reloadApp() {
                    location.reload()
                }
                handleScrollingBottomReached(l) {
                    this.bottomReached = l.isIntersecting,
                    this._cdRef.detectChanges()
                }
                getChainName(l) {
                    return me.CXF.getChainName(l)
                }
                _loadVideo() {
                    this.showVideoModal && this.openVideoYT()
                }
                openVideoYT() {
                    const l = this._modalService.open(p.GF, {
                        centered: !0,
                        scrollable: !0
                    });
                    l.componentInstance.link = this.link,
                    l.result.then(()=>{
                        ne._Z.addToMap($t, zn, this.videoVersion),
                        this.showVideoModal = !1,
                        this._cdRef.detectChanges()
                    }
                    ).catch(()=>{
                        ne._Z.addToMap($t, zn, this.videoVersion),
                        this.showVideoModal = !1,
                        this._cdRef.detectChanges()
                    }
                    )
                }
                openMobileAppModal() {
                    this._modalService.open(Ee, {
                        modalDialogClass: "mobile-app-qr-modal",
                        backdrop: !1,
                        windowClass: "window-mobile-app-qr-modal"
                    }).result.then(()=>{}
                    ).catch(()=>{
                        ne._Z.set(Wn, new Date)
                    }
                    )
                }
                _shouldShowMobileAppReminder(l) {
                    if (this._environment.static_generation || Be.c.getChainPageFromUrl(l) !== ge.$.Dashboard)
                        return !1;
                    const v = JSON.parse(ne._Z.getString(Wn)) || null;
                    return !this._authenticationService.deviceId && null == v
                }
                _shouldShowYoutubeVideo(l) {
                    if (this._environment.static_generation || Be.c.getChainPageFromUrl(l) !== ge.$.Dashboard)
                        return this.showVideoModal = !1,
                        !1;
                    const v = ne._Z.getMap($t)?.get(zn) ?? null;
                    return this.showVideoModal = !(null !== v && v === this.videoVersion),
                    this.showVideoModal
                }
                closeAcademyModal() {
                    this.showAcademyModal = !1,
                    this._settingsService.showAcademyModal(this.showAcademyModal),
                    this._cdRef.detectChanges()
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.Y36(T.K0),o.Y36(re.$h),o.Y36(re.TF),o.Y36(me.UW7),o.Y36(me.Pld),o.Y36(n.F0),o.Y36(me.SBY),o.Y36(re.Qe),o.Y36(me.OqV),o.Y36(re.gb),o.Y36(c.y),o.Y36(Dt),o.Y36(ee.FF),o.Y36(re.qA),o.Y36(me.p9V),o.Y36(me.v_H),o.Y36(me.wUe),o.Y36(T.Ye),o.Y36(o.sBO))
            }
            ,
            M.\u0275cmp = o.Xpm({
                type: M,
                selectors: [["app-root"]],
                standalone: !0,
                features: [o.jDz],
                decls: 10,
                vars: 6,
                consts: [["class", "alert alert-dismissible full-width-alert text-center alert-primary fade show mb-0", 4, "ngIf"], ["class", "alert alert-dismissible full-width-alert text-center alert-custom-warning fade show mb-0", 4, "ngIf"], [1, "container-fluid", "icon-sidebar-nav", "p-0"], [1, "row"], [4, "ngIf"], ["o", "outlet"], ["buttonImage", "assets/img/logo/dextforce-academy.jpeg", "videoPreviewImage", "assets/img/video-home.jpg", 3, "ngClass", "link", "showModal", "modalClosed", 4, "ngIf"], [3, "chain"], [1, "alert", "alert-dismissible", "full-width-alert", "text-center", "alert-primary", "fade", "show", "mb-0"], ["icon", "info", 1, "mx-2"], [4, "rxLet"], ["href", "javascript:", "type", "button", 1, "upgrade-action", "text-white", 3, "click"], [1, "alert", "alert-dismissible", "full-width-alert", "text-center", "alert-custom-warning", "fade", "show", "mb-0"], ["icon", "exclamation-triangle", 1, "mx-2"], ["buttonImage", "assets/img/logo/dextforce-academy.jpeg", "videoPreviewImage", "assets/img/video-home.jpg", 3, "ngClass", "link", "showModal", "modalClosed"]],
                template: function(l, v) {
                    if (1 & l && (o.YNc(0, k, 6, 1, "div", 0),
                    o.YNc(1, oe, 9, 9, "div", 1),
                    o.TgZ(2, "div", 2)(3, "div", 3),
                    o.YNc(4, Ae, 1, 0, "app-side-menu", 4),
                    o.TgZ(5, "main"),
                    o._UZ(6, "router-outlet", null, 5),
                    o.qZA()()(),
                    o.YNc(8, Mt, 1, 5, "app-video-button", 6),
                    o._UZ(9, "app-announcement", 7)),
                    2 & l) {
                        const I = o.MAs(7);
                        o.Q6J("ngIf", v.isUpdateAvailable && !I.activatedRouteData.isEmptyPage),
                        o.xp6(1),
                        o.Q6J("ngIf", v.isWsConnectionUnstable && !I.activatedRouteData.isEmptyPage),
                        o.xp6(3),
                        o.Q6J("ngIf", !I.activatedRouteData.isEmptyPage),
                        o.xp6(1),
                        o.Q6J("@fadeAnimation", I.isActivated ? I.activatedRoute : ""),
                        o.xp6(3),
                        o.Q6J("ngIf", !v.showVideoModal),
                        o.xp6(1),
                        o.Q6J("chain", v.chain)
                    }
                },
                dependencies: [T.O5, L.uH, L.BN, A.e, Hn, n.lC, p.Ey, T.mk, bt, Y.aw, Y.X$],
                styles: [".alert-open-beta[_ngcontent-%COMP%]{font-family:Poppins,Roboto,sans-serif;font-style:normal;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:13px;line-height:16px;z-index:999999;bottom:0;position:fixed;width:100%}.alert-open-beta.hide[_ngcontent-%COMP%]{bottom:-31.25rem;transition:bottom 0s linear .3s,opacity .2s ease-in-out}.upgrade-action[_ngcontent-%COMP%]{text-decoration:underline}.alert[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{background-color:transparent;color:#fff;font-size:1.1875rem}.alert.alert-custom-warning[_ngcontent-%COMP%]{background-color:#eda803;color:#fff}"],
                data: {
                    animation: [p.qy]
                },
                changeDetection: 0
            }),
            M
        }
        )();
        const io = "dataAnyone";
        let so = (()=>{
            class M {
                constructor(l, v, I, K) {
                    this._authenticationService = l,
                    this._syncService = v,
                    this._analyticsService = I,
                    this._webSocketService = K
                }
                init(l) {
                    var v = this;
                    return (0,
                    e.Z)(function*() {
                        yield re.Vd.loadCryptoLibs(),
                        v._authenticationService.initialize(),
                        v._syncService.initialize(),
                        yield v._registerDevice(l),
                        v._prepareLogin(),
                        v._webSocketService.initialize(),
                        v._loadAnalyticsScript()
                    })()
                }
                _loadAnalyticsScript() {
                    this._analyticsService.loadScript()
                }
                _prepareLogin() {
                    if (null != this._authenticationService.authToken)
                        return;
                    let l;
                    const v = JSON.parse(ne._Z.getString(re.g2.USER_DATA));
                    v ? (l = v.jwt,
                    l ? (delete v.jwt,
                    ne._Z.setString(re.g2.USER_DATA, JSON.stringify(v))) : this._authenticationService.logout()) : l = ne._Z.getString(io),
                    l && (this._authenticationService.authToken = l),
                    ne._Z.delete(io)
                }
                _registerDevice(l) {
                    var v = this;
                    return (0,
                    e.Z)(function*() {
                        const I = v._authenticationService.isMobileApp
                          , K = l.searchParams.get(re.It.DEVICE_ID);
                        if (!I)
                            return v._authenticationService.removeDeviceInfo(),
                            void (null !== K && v._removeDeviceParams(l));
                        const Ne = (l.searchParams.get(re.It.PLATFORM) ?? "").toLowerCase();
                        if (K && Ne && Object.values(re.t4).includes(Ne)) {
                            const rt = {
                                deviceId: K,
                                platform: Ne
                            };
                            yield(0,
                            N.n)(v._authenticationService.registerDevice(rt)),
                            v._removeDeviceParams(l)
                        }
                    })()
                }
                _removeDeviceParams(l) {
                    l.searchParams.delete(re.It.DEVICE_ID),
                    l.searchParams.delete(re.It.PLATFORM),
                    window.location.replace(l.toString())
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.LFG(re.$h),o.LFG(re._U),o.LFG(c.y),o.LFG(me.p9V))
            }
            ,
            M.\u0275prov = o.Yz7({
                token: M,
                factory: M.\u0275fac,
                providedIn: "root"
            }),
            M
        }
        )();
        var ko = m(19832);
        function co(M, G) {
            return new ko.w(M,"./assets/i18n/",".json?cb=" + G.appVersion.toLowerCase().split(" ").join("."))
        }
        m(78848);
        const lo = "DEXTools"
          , uo = "localhost"
          , vt = `http://${uo}`
          , ho = `${vt}`
          , go = `${vt}:3030/back`
          , po = `${vt}:3020`
          , To = `${vt}:3020/cz`
          , mo = me.AD_.reduce((M,G)=>(M[`api_ ${G[0]}_url`] = `${vt}:${G[1]}/api`,
        M), {});
        function yt(M, G) {
            return /ether/.test(M) ? G.api_ethereum_url : G[`api_ ${M}_url`]
        }
        new class qn {
            constructor() {
                this.appTitle = lo,
                this.externalLink = !1,
                this.allowAdmin = !0,
                this.app_scope = "",
                this.appUrl = `${ho}`,
                this.host = `${vt}`,
                this.assets_url = `${vt}/assets`,
                this.appLogo = `${vt}/assets/img/logo/dextools_logo_header_125.png`,
                this.apiUrls = {
                    ...mo
                },
                this.back_url = `${go}`,
                this.meta_url = `${vt}:3030/meta`,
                this.ws_url = `ws://${uo}:8050`,
                this.paths = function Lo(M, G) {
                    return {
                        token: {
                            update: (l,v,I,K,Ne)=>{
                                const rt = Ne ? `&volume=${Ne}` : ""
                                  , pt = K ? `&txCount=${K}` : "";
                                return `${yt(l, M)}/token/holders?pair=${v}&token=${I}${rt}${pt}`
                            }
                            ,
                            audit: (l,v,I=!1)=>`${yt(l, M)}/token/audit?token=${v}&force=${I}`
                        },
                        tokenNews: {
                            save: `${yt("ethereum", M)}/token-news/save`,
                            all: `${yt("ethereum", M)}/token-news/all`,
                            status: `${yt("ethereum", M)}/token-news/status`
                        },
                        sponsors: {
                            edit: `${G}/featured/zzz-edit`
                        },
                        banner: {
                            edit: `${G}/banner/zzz-banner`
                        }
                    }
                }(mo, go),
                this.production = !1,
                this.static_generation = !1,
                this.whitelistedUrls = [],
                this.siteId = "",
                this.appVersion = "2.57.1",
                this.shared_url = `${po}`,
                this.cf_proxy_url = To
            }
        }
        ;
        const gt = "https://www.dextools.io"
          , Qn = `${gt}/app`
          , Co = `${gt}/shared`
          , Io = `${gt}/cz`
          , bo = ["refreshingWindow"]
          , Do = me.fiO.reduce((M,G)=>(M[`api_ ${G}_url`] = "bnb" === G ? `${gt}/chain-bsc/api` : "okc" === G ? `${gt}/chain-oec/api` : "multiversx" === G ? `${gt}/chain-elrond/api` : `${gt}/chain-${G}/api`,
        M), {})
          , wt = new class So {
            constructor() {
                this.appTitle = lo,
                this.externalLink = !1,
                this.allowAdmin = !1,
                this.app_scope = "/app",
                this.appUrl = `${Qn}`,
                this.host = `${gt}`,
                this.assets_url = `${Qn}/assets`,
                this.appLogo = `${Qn}/assets/img/logo/dextools_logo_header_125.png`,
                this.apiUrls = {
                    ...Do
                },
                this.back_url = `${gt}/back`,
                this.meta_url = `${gt}/meta`,
                this.ws_url = "wss://ws.dextools.io/",
                this.paths = void 0,
                this.production = !0,
                this.static_generation = !1,
                this.whitelistedUrls = [],
                this.siteId = "4",
                this.appVersion = "2.57.1",
                this.shared_url = `${Co}`,
                this.cf_proxy_url = Io
            }
        }
        ;
        let Mo = (()=>{
            class M extends re.gb {
                constructor(l, v, I, K) {
                    if (super(l, v, I, K),
                    this._defaultConfigValue = {
                        language: re.Vr.supportNavigationLanguage,
                        hot_movement: !1,
                        candle_normalization: !0,
                        dark_theme: !0,
                        notifications: !1,
                        notificationsLogoUrl: "assets/img/logo/dextools_logo.png",
                        notificationsAudioUrl: "assets/sounds/notification.mp3"
                    },
                    this._localStorageConfigKey = "configApp",
                    this._showAcademyModal$ = new ut.X(!1),
                    this.showAcademyModal$ = this._showAcademyModal$.asObservable(),
                    ne._Z.getString(this._localStorageConfigKey)) {
                        const Ne = JSON.parse(ne._Z.getString(this._localStorageConfigKey)) || null;
                        delete Ne.chat_enabled,
                        ne._Z.set(this._localStorageConfigKey, Ne)
                    }
                }
                showAcademyModal(l) {
                    this._showAcademyModal$.next(l)
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.LFG(T.Ye),o.LFG(Y.sK),o.LFG(re.v2),o.LFG(o.FYo))
            }
            ,
            M.\u0275prov = o.Yz7({
                token: M,
                factory: M.\u0275fac,
                providedIn: "root"
            }),
            M
        }
        )();
        var Uo = m(30501);
        const xn = {
            primaryStrategy: "local",
            patchZone: !1
        };
        let Ro = (()=>{
            class M {
                constructor(l, v, I, K) {
                    this._appUpdates = l,
                    this._appInitStatus = v,
                    this._sponsorsService = I,
                    this._injector = K
                }
                ngDoBootstrap(l) {
                    this._isAppRunningInValidWindow(wt.appUrl, wt.whitelistedUrls) && this._loadNonProductionModules().then(()=>{
                        l.bootstrap(Gn),
                        l.isStable.pipe((0,
                        Le.q)(2)).subscribe(v=>{
                            console.log("App stable:", v)
                        }
                        ),
                        this._sponsorsService.setBannerInitialDelay(1e3),
                        (0,
                        ze.D)(this._appInitStatus.donePromise).pipe((0,
                        nt.g)(1500), (0,
                        Le.q)(1)).subscribe(()=>{
                            this._sponsorsService.removeBannerInitialDelay()
                        }
                        ),
                        wt.static_generation || (this._appUpdates.initialize(),
                        this._appUpdates.startAppVersionChecks())
                    }
                    )
                }
                _isAppRunningInValidWindow(l, v) {
                    return !!wt.static_generation || (null != window.parent.location.href.match(`^${l.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")}`) || v && v.length > 0 && null != window.parent.location.href.match(`^(${v.join("|").replace(/[-\/\\^$*+?.()[\]{}]/g, "\\$&")})`)) && !bo.includes(window.name)
                }
                _loadNonProductionModules() {
                    var l = this;
                    return (0,
                    e.Z)(function*() {
                        if (wt.static_generation) {
                            const {ScullyLibModule: v} = yield m.e(786).then(m.bind(m, 30786));
                            (0,
                            o.Lck)(v, l._injector)
                        }
                    })()
                }
            }
            return M.\u0275fac = function(l) {
                return new (l || M)(o.LFG(re.Qe),o.LFG(o.CZH),o.LFG(Uo.D),o.LFG(o.zs3))
            }
            ,
            M.\u0275mod = o.oAB({
                type: M
            }),
            M.\u0275inj = o.cJS({
                providers: [...re.pP, {
                    provide: re.qA,
                    useValue: wt
                }, T.Ye, {
                    provide: T.S$,
                    useClass: T.b0
                }, {
                    provide: n.wN,
                    useClass: ue
                }, {
                    provide: re.gb,
                    useFactory: vo,
                    deps: [T.Ye, Y.sK, re.v2, o.FYo]
                }, {
                    provide: o.ip1,
                    useFactory: No,
                    deps: [so, me.OqV, me.YfE],
                    multi: !0
                }, {
                    provide: xe.OG,
                    useValue: xn
                }, {
                    provide: re.i5,
                    useValue: {
                        url: `${wt.host}/captcha-votes`,
                        siteKey: "0x4AAAAAAACQbae05Bv_UBmu"
                    }
                }, {
                    provide: re.zX,
                    useValue: {
                        scriptList: [{
                            name: "share-buttons",
                            src: "assets/vendors/share-buttons/src/share-buttons.js"
                        }, {
                            name: "captcha",
                            src: "https://challenges.cloudflare.com/turnstile/v0/api.js"
                        }]
                    }
                }, {
                    provide: me.ylm,
                    useValue: {
                        backgroundLight: "#F5F6F8",
                        backgroundDark: "#161825"
                    }
                }],
                imports: [Gn, R.b2, ie.JF, n.Bz.forRoot(pe, {
                    onSameUrlNavigation: "reload"
                }), Q.UX, ve.PW, ie.JF, Y.aw.forRoot({
                    loader: {
                        provide: Y.Zw,
                        useFactory: co,
                        deps: [ie.eN, re.qA]
                    }
                }), F.wn.forRoot(), H.Rh.forRoot({
                    toastComponent: p.MN
                }), Q.u5, Oe.pc]
            }),
            M
        }
        )();
        function vo(M, G, l, v) {
            return new Mo(M,G,l,v)
        }
        function No(M, G, l) {
            return (0,
            e.Z)(function*() {
                const v = new URL(window.location.href);
                yield M.init(v);
                const I = ne.lM.convertEnumToArray(me.qop)
                  , K = v.pathname.match(I.join("|"));
                return null !== K && (G.chain = K[0]),
                (0,
                N.n)(l.initialResolution(G.chain))
            })
        }
        wt.production && (0,
        o.G48)(),
        R.q6().bootstrapModule(Ro, {
            ngZoneEventCoalescing: !0
        }).catch(M=>console.error("----", M))
    }
    ,
    48178: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            C7: ()=>e,
            E_: ()=>T,
            bA: ()=>n,
            pt: ()=>ie,
            vl: ()=>ve
        });
        var R = m(99703);
        const o = "https://aggregator-api.kyberswap.com/"
          , e = "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
          , T = e.toLowerCase();
        class ie {
        }
        ie.ETH = {
            name: "ETH",
            chainEnum: R.Dnr.ETHEREUM,
            apiUrl: `${o}ethereum/`
        },
        ie.BNB = {
            name: "BNB",
            chainEnum: R.Dnr.BINANCE,
            apiUrl: `${o}bsc/`
        },
        ie.POLYGON = {
            name: "POLYGON",
            chainEnum: R.Dnr.POLYGON,
            apiUrl: `${o}polygon/`
        },
        ie.FANTOM = {
            name: "FANTOM",
            chainEnum: R.Dnr.FANTOM,
            apiUrl: `${o}fantom/`
        },
        ie.CRONOS = {
            name: "CRONOS",
            chainEnum: R.Dnr.CRONOS,
            apiUrl: `${o}cronos/`
        },
        ie.AVALANCHE = {
            name: "AVALANCHE",
            chainEnum: R.Dnr.AVALANCHE,
            apiUrl: `${o}avalanche/`
        },
        ie.AURORA = {
            name: "AURORA",
            chainEnum: R.Dnr.Aurora,
            apiUrl: `${o}aurora/`
        },
        ie.OPTIMISM = {
            name: "OPTIMISM",
            chainEnum: R.Dnr.Optimism,
            apiUrl: `${o}optimism/`
        },
        ie.ARBITRUM = {
            name: "ARBITRUM",
            chainEnum: R.Dnr.Arbitrum,
            apiUrl: `${o}arbitrum/`
        },
        ie.VELAS = {
            name: "VELAS",
            chainEnum: R.Dnr.VELAS,
            apiUrl: `${o}velas/`
        },
        ie.OASIS = {
            name: "OASIS",
            chainEnum: R.Dnr.OASIS,
            apiUrl: `${o}oasis/`
        },
        ie.UNSUPPORTED = {
            name: "UNSUPPORTED",
            chainEnum: R.Dnr.ETHEREUM,
            apiUrl: "n/a"
        };
        const n = [ie.ETH, ie.BNB, ie.POLYGON, ie.FANTOM, ie.AVALANCHE, ie.CRONOS, ie.AURORA, ie.ARBITRUM, ie.OPTIMISM]
          , Q = {
            ETH: `https://mainnet.infura.io/v3/${R.sJR.ETH}`,
            BNB: "https://bsc-dataseed.binance.org/",
            POLYGON: "https://rpc.ankr.com/polygon",
            FANTOM: "https://rpc.ftm.tools/",
            CRONOS: "https://evm-cronos.crypto.org/",
            AVALANCHE: "https://rpc.ankr.com/avalanche",
            ARBITRUM: "https://rpc.ankr.com/arbitrum",
            AURORA: "https://mainnet.aurora.dev",
            VELAS: "https://evmexplorer.velas.com/rpc",
            OASIS: "https://emerald.oasis.dev",
            OPTIMISM: "https://rpc.ankr.com/optimism"
        }
          , ve = {
            1: Q.ETH,
            10: Q.OPTIMISM,
            25: Q.CRONOS,
            56: Q.BNB,
            106: Q.VELAS,
            137: Q.POLYGON,
            250: Q.FANTOM,
            42161: Q.ARBITRUM,
            42262: Q.OASIS,
            43114: Q.AVALANCHE,
            1313161554: Q.AURORA
        }
    }
    ,
    70383: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            m: ()=>ie
        });
        var R = m(97582)
          , o = m(52413)
          , e = m(99703)
          , T = m(48178);
        let ie = (()=>{
            class n {
                static getNetworkByChain(ve) {
                    let Y = "";
                    switch (ve) {
                    case e.qop.Ethereum:
                        Y = "ETH";
                        break;
                    case e.qop.Binance:
                        Y = "BNB";
                        break;
                    default:
                        Y = ve.toUpperCase()
                    }
                    const H = n.getSupportedNetworkByName(Y) ?? T.pt.UNSUPPORTED;
                    return H === T.pt.UNSUPPORTED ? (console.warn("DEXTswap: could not find aggregator for chain", Y),
                    T.pt.UNSUPPORTED) : H
                }
                static getDefaultTokenByNetwork(ve) {
                    switch (ve.name.toUpperCase()) {
                    case T.pt.ETH.name:
                        return e.Zzf;
                    case T.pt.BNB.name:
                        return e.PPV;
                    case T.pt.POLYGON.name:
                        return e.i8M;
                    default:
                        return ve.chainEnum.chainBaseToken?.tokenAddress
                    }
                }
                static getSupportedNetworkByName(ve) {
                    return T.bA.find(Y=>Y.name === ve)
                }
                static isChainSupported(ve) {
                    return T.bA.some(Y=>Y.chainEnum.chain === ve)
                }
            }
            return (0,
            R.__decorate)([(0,
            o.HP)()], n, "getNetworkByChain", null),
            (0,
            R.__decorate)([(0,
            o.HP)()], n, "getDefaultTokenByNetwork", null),
            (0,
            R.__decorate)([(0,
            o.HP)()], n, "getSupportedNetworkByName", null),
            (0,
            R.__decorate)([(0,
            o.HP)()], n, "isChainSupported", null),
            n
        }
        )()
    }
    ,
    99703: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            JEM: ()=>Xs,
            PPV: ()=>Hs,
            AD_: ()=>ie,
            fiO: ()=>T,
            ylm: ()=>qa,
            Amu: ()=>Ac,
            PWx: ()=>yc,
            qop: ()=>n,
            eV1: ()=>ic,
            xic: ()=>sc,
            CXF: ()=>z,
            p9V: ()=>ha,
            Dnr: ()=>F,
            CqV: ()=>ul,
            v_H: ()=>pr,
            ibW: ()=>Q,
            bAW: ()=>Y,
            PS7: ()=>rr,
            jxT: ()=>ar,
            TQh: ()=>_r,
            DvC: ()=>fl,
            Ur3: ()=>L,
            vzY: ()=>ee,
            Zzf: ()=>Zs,
            Ech: ()=>la,
            bmb: ()=>H,
            nIe: ()=>xe,
            WpZ: ()=>ne,
            D0O: ()=>p,
            hmC: ()=>Ht,
            khD: ()=>hc,
            xlK: ()=>Ec,
            $a1: ()=>gc,
            Wu7: ()=>dc,
            P5T: ()=>uc,
            OqV: ()=>An,
            Uw1: ()=>pc,
            i9O: ()=>te,
            jUi: ()=>mc,
            YfE: ()=>Sr,
            SBY: ()=>Lc,
            NmI: ()=>Dc,
            S88: ()=>Uc,
            sJR: ()=>Va,
            R_O: ()=>En,
            QS8: ()=>ya,
            lN8: ()=>Ja,
            Tpk: ()=>yo,
            ImM: ()=>Yc,
            Qvc: ()=>hl,
            V41: ()=>rl,
            jav: ()=>ec,
            uXi: ()=>ml,
            iyB: ()=>Sc,
            i8M: ()=>Vs,
            kAQ: ()=>Rc,
            wUs: ()=>ra,
            OoE: ()=>Nc,
            LJP: ()=>lt,
            mK2: ()=>$c,
            Pld: ()=>zc,
            UW7: ()=>cr,
            nGv: ()=>Mc,
            K9A: ()=>js,
            tAw: ()=>fc,
            x_$: ()=>_c,
            Atn: ()=>Cc,
            P2u: ()=>bc,
            VGy: ()=>Vt,
            zjc: ()=>tt,
            wUe: ()=>jc,
            Brn: ()=>Kc,
            i6H: ()=>_l,
            iU1: ()=>et,
            YQQ: ()=>Fa,
            o85: ()=>Xc,
            d8E: ()=>Bo,
            T4m: ()=>ua,
            b_Z: ()=>e,
            lpF: ()=>R,
            p_2: ()=>Ml,
            ydy: ()=>nl,
            zhn: ()=>ol,
            j4Y: ()=>Aa,
            LVq: ()=>Ws,
            fvd: ()=>ac,
            LR_: ()=>Qs,
            nm_: ()=>Ys,
            q2m: ()=>Gs,
            FJI: ()=>qs,
            bbF: ()=>oc,
            fUz: ()=>Zt,
            RD2: ()=>zs,
            VU5: ()=>vl,
            H_p: ()=>Js,
            n9D: ()=>Ks,
            K1z: ()=>Bs,
            PLX: ()=>rc,
            yth: ()=>$s,
            Yre: ()=>Fs
        });
        const R = "/user-store/"
          , o = "/user/store/"
          , e = "Unknown"
          , T = ["ethereum", "bnb", "polygon", "fantom", "cronos", "avalanche", "velas", "oasis", "metis", "kucoin", "optimism", "arbitrum", "celo", "telos", "aurora", "moonbeam", "moonriver", "harmony", "astar", "fuse", "iotex", "okc", "heco", "milkomeda", "dfk", "solana", "evmos", "dogechain", "canto", "etc", "gnosis", "bitgert", "arbitrumnova", "songbird", "redlight", "kardia", "smartbch", "conflux", "tomb", "boba", "elastos", "shiden", "fusion", "wan", "rsk", "nova", "hoo", "cube", "syscoin", "ronin", "tomo", "kava", "thundercore", "meter", "echelon", "shib", "ethw", "kek", "ethf", "sx", "muu", "alvey", "aptos", "multiversx", "flare", "pom", "ultron", "energi", "exosama", "coredao", "ethergoerli", "filecoin", "zksync", "polygonzkevm", "pulse", "klaytn"]
          , ie = [["ethereum", 3030], ["bnb", 3040], ["polygon", 3050], ["fantom", 3070], ["cronos", 3080], ["avalanche", 3090], ["velas", 3100], ["oasis", 3110], ["metis", 3120], ["kucoin", 3120], ["optimism", 3120], ["arbitrum", 3120], ["celo", 3120], ["telos", 3120], ["aurora", 3120], ["moonbeam", 3120], ["moonriver", 3120], ["harmony", 3120], ["astar", 3120], ["fuse", 3120], ["iotex", 3120], ["okc", 3120], ["heco", 3120], ["milkomeda", 3120], ["dfk", 3120], ["solana", 3120], ["evmos", 3120], ["dogechain", 3120], ["canto", 3120], ["etc", 3120], ["gnosis", 3120], ["bitgert", 3120], ["arbitrumnova", 3120], ["songbird", 3120], ["redlight", 3120], ["kardia", 3120], ["smartbch", 3120], ["conflux", 3120], ["tomb", 3120], ["boba", 3120], ["elastos", 3120], ["shiden", 3120], ["fusion", 3120], ["wan", 3120], ["rsk", 3120], ["nova", 3120], ["hoo", 3120], ["cube", 3120], ["syscoin", 3120], ["ronin", 3120], ["tomo", 3120], ["kava", 3120], ["thundercore", 3120], ["meter", 3120], ["echelon", 3120], ["shib", 3120], ["ethw", 3120], ["kek", 3120], ["ethf", 3120], ["sx", 3120], ["muu", 3120], ["alvey", 3120], ["aptos", 3120], ["multiversx", 3120], ["flare", 3120], ["pom", 3120], ["ultron", 3120], ["energi", 3120], ["exosama", 3120], ["coredao", 3120], ["ethergoerli", 3120], ["filecoin", 3120], ["zksync", 3120], ["polygonzkevm", 3120], ["pulse", 3120], ["klaytn", 3120]];
        var n = (()=>{
            return (g = n || (n = {})).Ethereum = "ether",
            g.Binance = "bnb",
            g.Polygon = "polygon",
            g.Fantom = "fantom",
            g.Cronos = "cronos",
            g.Avalanche = "avalanche",
            g.Oasis = "oasis",
            g.Velas = "velas",
            g.Kucoin = "kucoin",
            g.Metis = "metis",
            g.Optimism = "optimism",
            g.Arbitrum = "arbitrum",
            g.Celo = "celo",
            g.Telos = "telos",
            g.Aurora = "aurora",
            g.Moonbeam = "moonbeam",
            g.Moonriver = "moonriver",
            g.Harmony = "harmony",
            g.Astar = "astar",
            g.Fuse = "fuse",
            g.Iotex = "iotex",
            g.Okc = "okc",
            g.Heco = "heco",
            g.Milkomeda = "milkomeda",
            g.Dfk = "dfk",
            g.Solana = "solana",
            g.Evmos = "evmos",
            g.Doge = "dogechain",
            g.Canto = "canto",
            g.Etc = "etc",
            g.Gnosis = "gnosis",
            g.Bitgert = "bitgert",
            g.Arbitrumnova = "arbitrumnova",
            g.Redlight = "redlight",
            g.Kardiachain = "kardia",
            g.Smartbch = "smartbch",
            g.Conflux = "conflux",
            g.Tomb = "tomb",
            g.Boba = "boba",
            g.Elastos = "elastos",
            g.Shiden = "shiden",
            g.Fusion = "fusion",
            g.Wan = "wan",
            g.Rsk = "rsk",
            g.Nova = "nova",
            g.Hoo = "hoo",
            g.Cube = "cube",
            g.Syscoin = "syscoin",
            g.Ronin = "ronin",
            g.Tomo = "tomo",
            g.Kava = "kava",
            g.Thundercore = "thundercore",
            g.Meter = "meter",
            g.Echelon = "echelon",
            g.Shib = "shib",
            g.Ethw = "ethw",
            g.Kek = "kek",
            g.Ethf = "ethf",
            g.Sx = "sx",
            g.Muu = "muu",
            g.Alvey = "alvey",
            g.Aptos = "aptos",
            g.Multiversx = "multiversx",
            g.Flare = "flare",
            g.Pom = "pom",
            g.Ultron = "ultron",
            g.Energi = "energi",
            g.Exosama = "exosama",
            g.CoreDao = "coredao",
            g.EthereumGoerli = "ethergoerli",
            g.Filecoin = "filecoin",
            g.Zksync = "zksync",
            g.Polygonzkevm = "polygonzkevm",
            g.Pulse = "pulse",
            g.Klaytn = "klaytn",
            n;
            var g
        }
        )();
        const Q = "univ2"
          , Y = "uniswap"
          , H = "pancake"
          , xe = "pancakev2"
          , ne = "dex091865"
          , Oe = "Liquidswap"
          , p = "Unknown DEX"
          , Le = "assets/img/exchanges/unknown.png"
          , N = "https://www.dextools.io";
        class F {
        }
        F.ETHEREUM = {
            chain: n.Ethereum,
            chainName: "Ethereum",
            chainShortName: "Ether",
            chainPrefix: "uni",
            chainBaseToken: {
                tokenAddress: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                wrappedTokenAddress: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
            },
            id: 1,
            hexId: "0x1",
            logoUrl: N + "/resources/chains/med/ether.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/ethereum/assets/",
            defaultPair: "0xa29fe6ef9592b5d408cca961d0fb9b1faf497d6d",
            aggregatorSupported: !0,
            bitquerySupported: !0,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !0,
            mempoolSupported: !0,
            newPairsBotUrl: "https://t.me/DEXTNewPairsBot",
            scanner: {
                name: "Etherscan",
                url: "https://etherscan.io",
                logoUrl: "assets/img/chain-scanners/ether-scan.png"
            }
        },
        F.BINANCE = {
            chain: n.Binance,
            chainName: "BNB Chain",
            chainShortName: "BNB Chain",
            chainPrefix: "bsc",
            chainBaseToken: {
                tokenAddress: "0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
                wrappedTokenAddress: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
            },
            id: 56,
            hexId: "0x38",
            logoUrl: N + "/resources/chains/med/bsc.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/smartchain/assets/",
            defaultPair: "0x4b729d5d871057f3a9c424792729217cde72410d",
            aggregatorSupported: !0,
            bitquerySupported: !0,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !0,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/DEXTNewPairsBotBSC",
            scanner: {
                name: "Bscscan",
                url: "https://bscscan.com",
                logoUrl: "assets/img/chain-scanners/bsc-scan.png"
            }
        },
        F.POLYGON = {
            chain: n.Polygon,
            chainName: "Polygon",
            chainShortName: "Polygon",
            chainPrefix: "polygon",
            chainBaseToken: {
                tokenAddress: "0x0000000000000000000000000000000000001010",
                wrappedTokenAddress: "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
                refTokenAddress: "0x7ceb23fd6bc0add59e62ac25578270cff1b9f619"
            },
            id: 137,
            hexId: "0x89",
            logoUrl: N + "/resources/chains/med/polygon.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/polygon/assets/",
            defaultPair: "0xadbf1854e5883eb8aa7baf50705338739e558e5b",
            aggregatorSupported: !0,
            bitquerySupported: !0,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !0,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/DEXTNewPairsPolygon",
            scanner: {
                name: "Polygonscan",
                url: "https://polygonscan.com",
                logoUrl: N + "/resources/chains/med/polygon.png"
            }
        },
        F.FANTOM = {
            chain: n.Fantom,
            chainName: "Fantom",
            chainShortName: "Fantom",
            chainPrefix: "fantom",
            chainBaseToken: {
                tokenAddress: "0x74b23882a30290451a17c44f4f05243b6b58c76d",
                wrappedTokenAddress: "0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83"
            },
            id: 250,
            hexId: "0xfa",
            logoUrl: N + "/resources/chains/med/fantom.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/fantom/assets/",
            defaultPair: "0xf0702249f4d3a25cd3ded7859a165693685ab577",
            aggregatorSupported: !0,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !0,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/DEXTNewPairsFantom",
            scanner: {
                name: "Ftmscan",
                url: "https://ftmscan.com",
                logoUrl: "assets/img/chain-scanners/ftm-scan.svg"
            }
        },
        F.CRONOS = {
            chain: n.Cronos,
            chainName: "Cronos",
            chainShortName: "Cronos",
            chainPrefix: "cronos",
            chainBaseToken: {
                tokenAddress: "0xc21223249ca28397b4b6541dffaecc539bff0c59",
                wrappedTokenAddress: "0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23"
            },
            id: 25,
            hexId: "0x19",
            logoUrl: N + "/resources/chains/med/cronos.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/cronos/assets/",
            defaultPair: "0xe61db569e231b3f5530168aa2c9d50246525b6d6",
            aggregatorSupported: !0,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/CronosNewPairsBot",
            scanner: {
                name: "Cronoscan",
                url: "https://cronoscan.com",
                logoUrl: "assets/img/chain-scanners/cronos-scan.ico"
            }
        },
        F.AVALANCHE = {
            chain: n.Avalanche,
            chainName: "Avalanche",
            chainShortName: "Avax",
            chainPrefix: "avalanche",
            chainBaseToken: {
                tokenAddress: "0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7",
                wrappedTokenAddress: "0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664"
            },
            id: 43114,
            hexId: "0xa86a",
            logoUrl: N + "/resources/chains/med/avalanche.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/avalanchec/assets/",
            defaultPair: "0xa389f9430876455c36478deea9769b7ca4e3ddb1",
            aggregatorSupported: !0,
            bitquerySupported: !0,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !0,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/DEXTAvaxNewPairsBot",
            scanner: {
                name: "Snowtrace",
                url: "https://snowtrace.io",
                logoUrl: "assets/img/chain-scanners/snowtrace-scan.svg"
            }
        },
        F.OASIS = {
            chain: n.Oasis,
            chainName: "Oasis",
            chainShortName: "Oasis",
            chainPrefix: "oasis",
            id: 42262,
            hexId: "0xa516",
            logoUrl: N + "/resources/chains/med/oasis.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/oasis/assets/",
            defaultPair: "0xfb9bd52abe613a5c4a20e9fc09462a2ec5f2d1b2",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/DEXTOasisLiveNewPairsBot",
            scanner: {
                name: "Oasis scan",
                url: "https://explorer.emerald.oasis.dev",
                logoUrl: N + "/resources/chains/med/oasis.png"
            }
        },
        F.VELAS = {
            chain: n.Velas,
            chainName: "Velas",
            chainShortName: "Vlx",
            chainPrefix: "velas",
            id: 106,
            hexId: "0x6a",
            logoUrl: N + "/resources/chains/med/velas.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/velas/assets/",
            defaultPair: "0x8e2b762bee3e2bf2c8fb0cdd04274042748d6c23",
            aggregatorSupported: !1,
            bitquerySupported: !0,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "https://t.me/DEXTVelasNewPairsBot",
            scanner: {
                name: "Velas explorer",
                url: "https://evmexplorer.velas.com",
                logoUrl: N + "/resources/chains/med/velas.png"
            }
        },
        F.Kucoin = {
            chain: n.Kucoin,
            chainName: "KCC",
            chainShortName: "KCC",
            chainPrefix: "kucoin",
            id: 321,
            hexId: "0x141",
            logoUrl: N + "/resources/chains/med/kucoin.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/kcc/assets/",
            defaultPair: "0xb3b92d6b2656f9ceb4a381718361a21bf9b82bd9",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "KCC explorer",
                url: "https://scan.kcc.io",
                logoUrl: "assets/img/chain-scanners/kucoin-scan.svg"
            }
        },
        F.Metis = {
            chain: n.Metis,
            chainName: "Metis",
            chainShortName: "Metis",
            chainPrefix: "metis",
            id: 1088,
            hexId: "0x440",
            logoUrl: N + "/resources/chains/med/metis.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/metis/assets/",
            defaultPair: "0x5ae3ee7fbb3cb28c17e7adc3a6ae605ae2465091",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Andromeda Metis explorer",
                url: "https://andromeda-explorer.metis.io",
                logoUrl: N + "/resources/chains/med/metis.png"
            }
        },
        F.Optimism = {
            chain: n.Optimism,
            chainName: "Optimism",
            chainShortName: "OP",
            chainPrefix: "optimism",
            chainBaseToken: {
                tokenAddress: "0x94b008aa00579c1307b0ef2c499ad98a8ce58e58",
                wrappedTokenAddress: "0x4200000000000000000000000000000000000006"
            },
            id: 10,
            hexId: "0xa",
            logoUrl: N + "/resources/chains/med/optimism.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/optimism/assets/",
            defaultPair: "0xc858a329bf053be78d6239c4a4343b8fbd21472b",
            aggregatorSupported: !0,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Optimism explorer",
                url: "https://optimistic.etherscan.io",
                logoUrl: N + "/resources/chains/med/optimism.png"
            }
        },
        F.Arbitrum = {
            chain: n.Arbitrum,
            chainName: "Arbitrum",
            chainShortName: "Arbitrum",
            chainPrefix: "arbitrum",
            chainBaseToken: {
                tokenAddress: "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",
                wrappedTokenAddress: "0x82af49447d8a07e3bd95bd0d56f35241523fbab1"
            },
            id: 42161,
            hexId: "0xa4b1",
            logoUrl: N + "/resources/chains/med/arbitrum.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/arbitrum/assets/",
            defaultPair: "0x905dfcd5649217c42684f23958568e533c711aa3",
            aggregatorSupported: !0,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !0,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Arbiscan",
                url: "https://arbiscan.io",
                logoUrl: "assets/img/chain-scanners/arbitrum-scan.png"
            }
        },
        F.Celo = {
            chain: n.Celo,
            chainName: "Celo",
            chainShortName: "Celo",
            chainPrefix: "celo",
            id: 42220,
            hexId: "0xa4ec",
            logoUrl: N + "/resources/chains/med/celo.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/celo/assets/",
            defaultPair: "0x1e593f1fe7b61c53874b54ec0c59fd0d5eb8621e",
            aggregatorSupported: !1,
            bitquerySupported: !0,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Celo explorer",
                url: "https://explorer.celo.org",
                logoUrl: N + "/resources/chains/med/celo.png"
            }
        },
        F.Telos = {
            chain: n.Telos,
            chainName: "Telos",
            chainShortName: "Telos",
            chainPrefix: "telos",
            id: 40,
            hexId: "0x28",
            logoUrl: N + "/resources/chains/med/telos.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/telos/assets/",
            defaultPair: "0x3eff1f57305b3d685ed1dbbc3e287d534f3d0bfc",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Teloscan",
                url: "https://www.teloscan.io",
                logoUrl: N + "/resources/chains/med/telos.png"
            }
        },
        F.Aurora = {
            chain: n.Aurora,
            chainName: "Aurora",
            chainShortName: "Aurora",
            chainPrefix: "aurora",
            chainBaseToken: {
                tokenAddress: "0xc42c30ac6cc15fac9bd938618bcaa1a1fae8501d",
                wrappedTokenAddress: "0x8bec47865ade3b172a928df8f990bc7f2a3b9f79"
            },
            id: 1313161554,
            hexId: "0x4e454152",
            logoUrl: N + "/resources/chains/med/aurora.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/aurora/assets/",
            defaultPair: "0x03b666f3488a7992b2385b12df7f35156d7b29cd",
            aggregatorSupported: !0,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Aurora explorer",
                url: "https://aurorascan.dev",
                logoUrl: N + "/resources/chains/med/aurora.png"
            }
        },
        F.Moonbeam = {
            chain: n.Moonbeam,
            chainName: "Moonbeam",
            chainShortName: "Moonbeam",
            chainPrefix: "moonbeam",
            id: 1284,
            hexId: "0x1284",
            logoUrl: N + "/resources/chains/med/moonbeam.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/moonbeam/assets/",
            defaultPair: "0x555b74dafc4ef3a5a1640041e3244460dc7610d1",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Moonbeam explorer",
                url: "https://moonscan.io",
                logoUrl: "assets/img/chain-scanners/moonbeam-scan.png"
            }
        },
        F.Moonriver = {
            chain: n.Moonriver,
            chainName: "Moonriver",
            chainShortName: "Moonriver",
            chainPrefix: "moonriver",
            id: 1285,
            hexId: "0x505",
            logoUrl: N + "/resources/chains/med/moonriver.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/moonriver/assets/",
            defaultPair: "0xe537f70a8b62204832b8ba91940b77d3f79aeb81",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Moonriver explorer",
                url: "https://moonriver.moonscan.io",
                logoUrl: "assets/img/chain-scanners/moonriver-scan.png"
            }
        },
        F.Harmony = {
            chain: n.Harmony,
            chainName: "Harmony",
            chainShortName: "Harmony",
            chainPrefix: "harmony",
            id: 16666e5,
            hexId: "0x63564c40",
            logoUrl: N + "/resources/chains/med/harmony.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/harmony/assets/",
            defaultPair: "0xbf255d8c30dbab84ea42110ea7dc870f01c0013a",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Harmony explorer",
                url: "https://explorer.harmony.one",
                logoUrl: N + "/resources/chains/med/harmony.png"
            }
        },
        F.Astar = {
            chain: n.Astar,
            chainName: "Astar",
            chainShortName: "Astar",
            chainPrefix: "astar",
            id: 592,
            hexId: "0x250",
            logoUrl: N + "/resources/chains/med/astar.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/astar/assets/",
            defaultPair: "0x806f746a7c4293092ac7aa604347be123322df1e",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Blockscout explorer",
                url: "https://blockscout.com/astar",
                logoUrl: N + "/resources/chains/med/astar.png"
            }
        },
        F.Fuse = {
            chain: n.Fuse,
            chainName: "Fuse",
            chainShortName: "Fuse",
            chainPrefix: "fuse",
            id: 122,
            hexId: "0x7a",
            logoUrl: "assets/img/chains/fuse.svg",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/fuse/assets/",
            defaultPair: "0x9f17b1895633e855b8b1c1d0ade9b3b72eb0590c",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Fuse explorer",
                url: "https://explorer.fuse.io",
                logoUrl: "assets/img/chains/fuse.svg"
            }
        },
        F.Iotex = {
            chain: n.Iotex,
            chainName: "Iotex",
            chainShortName: "Iotex",
            chainPrefix: "iotex",
            id: 4689,
            hexId: "0x1251",
            logoUrl: N + "/resources/chains/med/iotex.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/iotex/assets/",
            defaultPair: "0x6bdefe87c4b18726002d3505b3251c89c8004c6a",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "IotexScan",
                url: "https://iotexscan.io",
                logoUrl: "assets/img/chain-scanners/iotex-scan.svg"
            }
        },
        F.Okc = {
            chain: n.Okc,
            chainName: "OKC",
            chainShortName: "OKC",
            chainPrefix: "oec",
            id: 66,
            hexId: "0x42",
            logoUrl: N + "/resources/chains/med/oec.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/okc/assets/",
            defaultPair: "0xf3098211d012ff5380a03d80f150ac6e5753caa8",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Okc explorer",
                url: "https://www.oklink.com/en/okc",
                logoUrl: "assets/img/chain-scanners/okc-scan.png"
            }
        },
        F.Heco = {
            chain: n.Heco,
            chainName: "Heco",
            chainShortName: "Heco",
            chainPrefix: "heco",
            id: 128,
            hexId: "0x80",
            logoUrl: N + "/resources/chains/med/heco.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/heco/assets/",
            defaultPair: "0x499b6e03749b4baf95f9e70eed5355b138ea6c31",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Heco explorer",
                url: "https://hecoinfo.com",
                logoUrl: N + "/resources/chains/med/heco.png"
            }
        },
        F.Milkomeda = {
            chain: n.Milkomeda,
            chainName: "Milkomeda",
            chainShortName: "Milkomeda",
            chainPrefix: "milkomeda",
            id: 2001,
            hexId: "0x7d1",
            logoUrl: N + "/resources/chains/med/milkomeda.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/milkomeda/assets/",
            defaultPair: "0x0b46ad9e9b749c9d500c81a4975b1599a872ebe8",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Milkomeda explorer",
                url: "https://explorer-mainnet-cardano-evm.c1.milkomeda.com",
                logoUrl: N + "/resources/chains/med/milkomeda.png"
            }
        },
        F.DFK = {
            chain: n.Dfk,
            chainName: "Avax DFK",
            chainShortName: "Avax DFK",
            chainPrefix: "dfk",
            id: 1130,
            hexId: "0x46a",
            logoUrl: N + "/resources/chains/med/avalanche.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/dfk/assets/",
            defaultPair: "0xcf329b34049033de26e4449aebcb41f1992724d3",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Defi Kingdoms explorer",
                url: "https://subnets.avax.network/defi-kingdoms/dfk-chain/explorer",
                logoUrl: N + "/resources/chains/med/avalanche.png"
            }
        },
        F.Solana = {
            chain: n.Solana,
            chainName: "Solana",
            chainShortName: "Solana",
            chainPrefix: "solana",
            id: -1,
            hexId: "0x",
            logoUrl: N + "/resources/chains/med/solana.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/solana/assets/",
            defaultPair: "EGZ7tiLeH62TPV1gL8WwbXGzEPa9zmcpVnnkPKKnrE2U",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "SolScan explorer",
                url: "https://solscan.io",
                logoUrl: "assets/img/chain-scanners/solana-scan.svg"
            }
        },
        F.Evmos = {
            chain: n.Evmos,
            chainName: "Evmos",
            chainShortName: "Evmos",
            chainPrefix: "evmos",
            id: 9001,
            hexId: "0x2329",
            logoUrl: N + "/resources/chains/med/evmos.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/evmos/assets/",
            defaultPair: "0x6df94e977d82d917a621dff75c00abd19a27c26b",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Evmos explorer",
                url: "https://evm.evmos.org",
                logoUrl: "assets/img/chain-scanners/evmos-scan.png"
            }
        },
        F.Doge = {
            chain: n.Doge,
            chainName: "Doge Chain",
            chainShortName: "Doge",
            chainPrefix: "dogechain",
            id: 2e3,
            hexId: "0x7d0",
            logoUrl: N + "/resources/chains/med/dogechain.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/doge/assets/",
            defaultPair: "0x5bf60ea5cf2383f407f09cf38378176298238a6c ",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Doge explorer",
                url: "https://explorer.dogechain.dog",
                logoUrl: N + "/resources/chains/med/dogechain.png"
            }
        },
        F.Etc = {
            chain: n.Etc,
            chainName: "Eth Classic",
            chainShortName: "Etc",
            chainPrefix: "etc",
            id: 61,
            hexId: "0x3d",
            logoUrl: N + "/resources/chains/med/etc.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/classic/assets/",
            defaultPair: "0xfb6414f689e93bacd942919fba7cd8aa7f5e5c64",
            aggregatorSupported: !1,
            bitquerySupported: !0,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Etc explorer",
                url: "https://blockscout.com/etc/mainnet",
                logoUrl: "assets/img/chain-scanners/etc-scan.svg"
            }
        },
        F.Bitgert = {
            chain: n.Bitgert,
            chainName: "Bitgert",
            chainShortName: "Bitgert",
            chainPrefix: "bitgert",
            id: 32520,
            hexId: "0x7f08",
            logoUrl: N + "/resources/chains/med/bitgert.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/bitgert/assets/",
            defaultPair: "0x8c243d7b04e0f8f78dc87c8c2297581310468129",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Bitgert explorer",
                url: "https://brisescan.com",
                logoUrl: N + "/resources/chains/med/bitgert.png"
            }
        },
        F.Arbitrumnova = {
            chain: n.Arbitrumnova,
            chainName: "Arbitrum nova",
            chainShortName: "Arb nova",
            chainPrefix: "arbitrumnova",
            id: 42170,
            hexId: "0xa4ba",
            logoUrl: N + "/resources/chains/med/arbitrumnova.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/arbitrumnova/assets/",
            defaultPair: "0x26d96cfc6df8262b1bb327a2df0ede02fdfc8874",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Arbitrum nova explorer",
                url: "https://nova-explorer.arbitrum.io",
                logoUrl: N + "/resources/chains/med/arbitrumnova.png"
            }
        },
        F.Redlight = {
            chain: n.Redlight,
            chainName: "Redlight",
            chainShortName: "Redlight",
            chainPrefix: "redlight",
            id: 2611,
            hexId: "0xa33",
            logoUrl: N + "/resources/chains/med/redlight.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/redlight/assets/",
            defaultPair: "0x46f013d0aa26d12c39b1c9dfdf67fcd05a452e52",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Redlight explorer",
                url: "https://redlightscan.finance",
                logoUrl: N + "/resources/chains/med/redlight.png"
            }
        },
        F.Kardiachain = {
            chain: n.Kardiachain,
            chainName: "KardiaChain",
            chainShortName: "Kardia",
            chainPrefix: "kardia",
            id: 24,
            hexId: "0x18",
            logoUrl: N + "/resources/chains/med/kardia.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/kardia/assets/",
            defaultPair: "0x1c107492b20b12cd384e193b4426da97354cbea3",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Kardiachain explorer",
                url: "https://explorer.kardiachain.io",
                logoUrl: "assets/img/chain-scanners/kardia-scan.svg"
            }
        },
        F.Tomb = {
            chain: n.Tomb,
            chainName: "Tomb Chain",
            chainShortName: "Tomb",
            chainPrefix: "tomb",
            id: 6969,
            hexId: "0x1b39",
            logoUrl: N + "/resources/chains/med/tomb.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/tomb/assets/",
            defaultPair: "0xd78372c98386c01e8f4abb2c5cdf8c234a99cf06",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Tomb explorer",
                url: "https://tombscout.com",
                logoUrl: "assets/img/chain-scanners/tomb-scan.svg"
            }
        },
        F.Gnosis = {
            chain: n.Gnosis,
            chainName: "Gnosis",
            chainShortName: "Gnosis",
            chainPrefix: "gnosis",
            id: 100,
            hexId: "0x64",
            logoUrl: N + "/resources/chains/med/gnosis.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/gnosis/assets/",
            defaultPair: "0xa227c72a4055a9dc949cae24f54535fe890d3663",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Gnosis explorer",
                url: "https://blockscout.com/poa/xdai",
                logoUrl: "assets/img/chain-scanners/gnosis-scan.svg"
            }
        },
        F.Conflux = {
            chain: n.Conflux,
            chainName: "Conflux",
            chainShortName: "Conflux",
            chainPrefix: "conflux",
            id: 1030,
            hexId: "0x406",
            logoUrl: N + "/resources/chains/med/conflux.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/conflux/assets/",
            defaultPair: "0x8fcf9c586d45ce7fcf6d714cb8b6b21a13111e0b",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Conflux explorer",
                url: "https://confluxscan.net",
                logoUrl: "assets/img/chain-scanners/conflux-scan.svg"
            }
        },
        F.Smartbch = {
            chain: n.Smartbch,
            chainName: "Smartbch",
            chainShortName: "Smartbch",
            chainPrefix: "smartbch",
            id: 1e4,
            hexId: "0x2710",
            logoUrl: N + "/resources/chains/med/smartbch.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/smartbch/assets/",
            defaultPair: "0x27580618797a2ce02fdfbbee948388a50a823611",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Smartbch explorer",
                url: "https://sonar.cash",
                logoUrl: "assets/img/chain-scanners/sonar-scan.png"
            }
        },
        F.Shiden = {
            chain: n.Shiden,
            chainName: "Shiden",
            chainShortName: "Shiden",
            chainPrefix: "shiden",
            id: 336,
            hexId: "0x150",
            logoUrl: N + "/resources/chains/med/shiden.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/shiden/assets/",
            defaultPair: "0x1f582584c003c9ba9258d1ea6c5289e617a169bf",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Shiden explorer",
                url: "https://blockscout.com/shiden",
                logoUrl: "assets/img/chain-scanners/shiden-scan.svg"
            }
        },
        F.Wan = {
            chain: n.Wan,
            chainName: "WanChain",
            chainShortName: "WanChain",
            chainPrefix: "wan",
            id: 888,
            hexId: "0x378",
            logoUrl: N + "/resources/chains/med/wan.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/wanchain/assets/",
            defaultPair: "0x0a886dc4d584d55e9a1fa7eb0821762296b4ec0e",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "WanChain explorer",
                url: "https://wanscan.org",
                logoUrl: N + "/resources/chains/med/wan.png"
            }
        },
        F.Rsk = {
            chain: n.Rsk,
            chainName: "RSK",
            chainShortName: "RSK",
            chainPrefix: "rsk",
            id: 30,
            hexId: "0x1e",
            logoUrl: N + "/resources/chains/med/rsk.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/rsk/assets/",
            defaultPair: "0x1dd8665ec5f47416ff37beb2de5cf7b095d377ad",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "RSK explorer",
                url: "https://explorer.rsk.co",
                logoUrl: "assets/img/chain-scanners/rsk-scan.svg"
            }
        },
        F.Canto = {
            chain: n.Canto,
            chainName: "Canto",
            chainShortName: "Canto",
            chainPrefix: "canto",
            id: 7700,
            hexId: "0x1e14",
            logoUrl: N + "/resources/chains/med/canto.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/canto/assets/",
            defaultPair: "0x9571997a66d63958e1b3de9647c22bd6b9e7228c",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Canto explorer",
                url: "https://evm.explorer.canto.io",
                logoUrl: N + "/resources/chains/med/canto.png"
            }
        },
        F.Boba = {
            chain: n.Boba,
            chainName: "Boba",
            chainShortName: "Boba",
            chainPrefix: "boba",
            id: 288,
            hexId: "0x120",
            logoUrl: N + "/resources/chains/med/boba.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/boba/assets/",
            defaultPair: "0xa43159b18ff8208bc3176a10af22c8167531769e",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Boba explorer",
                url: "https://bobascan.com",
                logoUrl: "assets/img/chain-scanners/boba-scan.svg"
            }
        },
        F.Elastos = {
            chain: n.Elastos,
            chainName: "Elastos",
            chainShortName: "Elastos",
            chainPrefix: "elastos",
            id: 20,
            hexId: "0x14",
            logoUrl: N + "/resources/chains/med/elastos.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/elastos/assets/",
            defaultPair: "0x6077b7990d3d0dfb5a50f1d207f67ac5955b999d",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Elastos explorer",
                url: "https://esc.elastos.io",
                logoUrl: "assets/img/chain-scanners/elastos-scan.svg"
            }
        },
        F.Fusion = {
            chain: n.Fusion,
            chainName: "Fusion",
            chainShortName: "Fusion",
            chainPrefix: "fusion",
            id: 32659,
            hexId: "0x7f93",
            logoUrl: N + "/resources/chains/med/fusion.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/fusion/assets/",
            defaultPair: "0x5df4e8cc088d997eb5fe475c28c621db18ea0787",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Fusion explorer",
                url: "https://fsnscan.com",
                logoUrl: "assets/img/chain-scanners/fusion-scan.svg"
            }
        },
        F.Nova = {
            chain: n.Nova,
            chainName: "Nova",
            chainShortName: "Nova",
            chainPrefix: "nova",
            id: 87,
            hexId: "0x57",
            logoUrl: N + "/resources/chains/med/nova.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/nova/assets/",
            defaultPair: "0x0775f696f64c824471e29460fb92694a41e754cf",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Nova explorer",
                url: "https://novascan.io",
                logoUrl: N + "/resources/chains/med/nova.png"
            }
        },
        F.Hoo = {
            chain: n.Hoo,
            chainName: "Hoo Smart",
            chainShortName: "Hoo Smart",
            chainPrefix: "hoo",
            id: 70,
            hexId: "0x46",
            logoUrl: N + "/resources/chains/med/hoo.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/hoo/assets/",
            defaultPair: "0x4d5d0fb1b7744264293a35903a25783a4b577831",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Hoo explorer",
                url: "https://hooscan.com",
                logoUrl: "assets/img/chain-scanners/hoo-scan.svg"
            }
        },
        F.Cube = {
            chain: n.Cube,
            chainName: "Cube",
            chainShortName: "Cube",
            chainPrefix: "cube",
            id: 1818,
            hexId: "0x71a",
            logoUrl: N + "/resources/chains/med/cube.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/cube/assets/",
            defaultPair: "0x5d3ad1fe9beee77167033df7e9f43020f1071e41",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Cube explorer",
                url: "https://www.cubescan.network/en-us/home",
                logoUrl: "assets/img/chain-scanners/cube-scan.png"
            }
        },
        F.Syscoin = {
            chain: n.Syscoin,
            chainName: "Syscoin",
            chainShortName: "Syscoin",
            chainPrefix: "syscoin",
            id: 57,
            hexId: "0x39",
            logoUrl: N + "/resources/chains/med/syscoin.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/syscoin/assets/",
            defaultPair: "0x2cdf912cbeaf76d67feadc994d889c2f4442b300",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Syscoin explorer",
                url: "https://explorer.syscoin.org",
                logoUrl: "assets/img/chain-scanners/syscoin-scan.svg"
            }
        },
        F.Ronin = {
            chain: n.Ronin,
            chainName: "Ronin",
            chainShortName: "Ronin",
            chainPrefix: "ronin",
            id: -1,
            hexId: "0x",
            logoUrl: N + "/resources/chains/med/ronin.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/ronin/assets/",
            defaultPair: "0xa7964991f339668107e2b6a6f6b8e8b74aa9d017",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Ronin explorer",
                url: "https://explorer.roninchain.com",
                logoUrl: N + "/resources/chains/med/ronin.png"
            }
        },
        F.Tomo = {
            chain: n.Tomo,
            chainName: "Tomo",
            chainShortName: "Tomo",
            chainPrefix: "tomo",
            id: 88,
            hexId: "0x58",
            logoUrl: N + "/resources/chains/med/tomo.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/tomochain/assets/",
            defaultPair: "0x347f551eaba062167779c9c336aa681526857b81",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Tomo explorer",
                url: "https://tomoscan.io",
                logoUrl: "assets/img/chain-scanners/tomo-scan.svg"
            }
        },
        F.Kava = {
            chain: n.Kava,
            chainName: "Kava",
            chainShortName: "Kava",
            chainPrefix: "kava",
            id: 2222,
            hexId: "0x8ae",
            logoUrl: N + "/resources/chains/med/kava.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/kava/assets/",
            defaultPair: "0x6bbebe57397d530fb95c69bd58ac0932d9bd39eb",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Kava explorer",
                url: "https://explorer.kava.io",
                logoUrl: "assets/img/chain-scanners/kava-scan.svg"
            }
        },
        F.Thundercore = {
            chain: n.Thundercore,
            chainName: "Thundercore",
            chainShortName: "Thundercore",
            chainPrefix: "thundercore",
            id: 108,
            hexId: "0x6c",
            logoUrl: N + "/resources/chains/med/thundercore.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/thundertoken/assets/",
            defaultPair: "0xa192acf29aebd0c94cad757a695812bf34d1e265",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Thundercore explorer",
                url: "https://scan.thundercore.com",
                logoUrl: "assets/img/chain-scanners/thundercore-scan.png"
            }
        },
        F.Meter = {
            chain: n.Meter,
            chainName: "Meter",
            chainShortName: "Meter",
            chainPrefix: "meter",
            id: 82,
            hexId: "0x52",
            logoUrl: N + "/resources/chains/med/meter.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/meter/assets/",
            defaultPair: "0xaca210bd7d12c15560994e4c7b2bec1b538ad306",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Meter explorer",
                url: "https://scan.meter.io",
                logoUrl: "assets/img/chain-scanners/meter-scan.png"
            }
        },
        F.Echelon = {
            chain: n.Echelon,
            chainName: "Echelon",
            chainShortName: "Echelon",
            chainPrefix: "echelon",
            id: 3e3,
            hexId: "0xbb8",
            logoUrl: N + "/resources/chains/med/echelon.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/echelon/assets/",
            defaultPair: "0xece49b38d9fe03756dc348ba7844d13be77c0909",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Echelon explorer",
                url: "https://app.ech.network/explorer",
                logoUrl: N + "/resources/chains/med/echelon.png"
            }
        },
        F.Shib = {
            chain: n.Shib,
            chainName: "Shibchain",
            chainShortName: "Shib",
            chainPrefix: "shib",
            id: 27,
            hexId: "0x1b",
            logoUrl: N + "/resources/chains/med/shib.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/shib/assets/",
            defaultPair: "0x063c6d432037a6c9345738b9525e6b5fbf6ceaf7",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Shib explorer",
                url: "https://explorer.shibchain.app",
                logoUrl: N + "/resources/chains/med/shib.png"
            }
        },
        F.Ethw = {
            chain: n.Ethw,
            chainName: "EthereumPoW",
            chainShortName: "EthW",
            chainPrefix: "ethw",
            id: 10001,
            hexId: "0x2711",
            logoUrl: N + "/resources/chains/med/ethw.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/ethw/assets/",
            defaultPair: "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Ethw explorer",
                url: "https://www.oklink.com/en/ethw",
                logoUrl: "assets/img/chain-scanners/ethw-scan.png"
            }
        },
        F.Kek = {
            chain: n.Kek,
            chainName: "Kek",
            chainShortName: "Kek",
            chainPrefix: "kek",
            id: 420420,
            hexId: "0x66a44",
            logoUrl: N + "/resources/chains/med/kek.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/kek/assets/",
            defaultPair: "0x769574c9cda37df69043fb12221c97bf7fd0bafa",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Kek explorer",
                url: "https://mainnet-explorer.kekchain.com",
                logoUrl: "assets/img/chain-scanners/kek-scan.png"
            }
        },
        F.Ethf = {
            chain: n.Ethf,
            chainName: "EthereumFair",
            chainShortName: "Ethf",
            chainPrefix: "ethf",
            id: 513100,
            hexId: "0x7d44c",
            logoUrl: N + "/resources/chains/med/ethf.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/ethf/assets/",
            defaultPair: "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Ethereum Fair explorer",
                url: "https://explorer.etherfair.org",
                logoUrl: N + "/resources/chains/med/ethf.png"
            }
        },
        F.SX = {
            chain: n.Sx,
            chainName: "SX Network",
            chainShortName: "SX",
            chainPrefix: "sx",
            id: 416,
            hexId: "0x1a0",
            logoUrl: N + "/resources/chains/med/sx.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/sx/assets/",
            defaultPair: "0x88123500716c483d2d0289cad564517f96743847",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "SX Network",
                url: "https://explorer.sx.technology",
                logoUrl: N + "/resources/chains/med/sx.png"
            }
        },
        F.Muu = {
            chain: n.Muu,
            chainName: "Muu Chain",
            chainShortName: "Muu",
            chainPrefix: "muu",
            id: 11512,
            hexId: "0x2cf8",
            logoUrl: N + "/resources/chains/med/muu.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/muu/assets/",
            defaultPair: "0x8d9db48f288ccd089a68e978ec162fcfb14e3e41",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Muuscan",
                url: "https://explorer.muuchain.com",
                logoUrl: N + "/resources/chains/med/muu.png"
            }
        },
        F.Alv = {
            chain: n.Alvey,
            chainName: "Alvey Chain",
            chainShortName: "Alvey",
            chainPrefix: "alvey",
            id: 3797,
            hexId: "0xed5",
            logoUrl: N + "/resources/chains/med/alvey.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/alv/assets/",
            defaultPair: "0x7faf0ce59ed8bf87ed19cbee59318bd3ca55f7fa",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Alveyscan",
                url: "https://alveyscan.com/",
                logoUrl: N + "/resources/chains/med/alvey.png"
            }
        },
        F.Aptos = {
            chain: n.Aptos,
            chainName: "Aptos",
            chainShortName: "Aptos",
            chainPrefix: "aptos",
            id: -1,
            hexId: "0x",
            logoUrl: N + "/resources/chains/med/aptos.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/aptos/assets/",
            defaultPair: "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12<0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC-0x1::aptos_coin::AptosCoin-0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated>",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Aptos Explorer",
                url: "https://explorer.aptoslabs.com",
                logoUrl: N + "/resources/chains/med/aptos.png"
            }
        },
        F.Multiversx = {
            chain: n.Multiversx,
            chainName: "MultiversX",
            chainShortName: "MultiversX",
            chainPrefix: "elrond",
            id: -1,
            hexId: "0x",
            logoUrl: N + "/resources/chains/med/elrond.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/elrond/assets/",
            defaultPair: "erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Multiversx Explorer",
                url: "https://explorer.multiversx.com",
                logoUrl: N + "/resources/chains/med/elrond.png"
            }
        },
        F.Flare = {
            chain: n.Flare,
            chainName: "Flare",
            chainShortName: "Flare",
            chainPrefix: "flare",
            id: 14,
            hexId: "0xe",
            logoUrl: N + "/resources/chains/med/flare.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/flare/assets/",
            defaultPair: "0xff1b852a0582bf87e69fad114560595fc5cf1212",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Flare Explorer",
                url: "https://flare-explorer.flare.network",
                logoUrl: N + "/resources/chains/med/flare.png"
            }
        },
        F.Pom = {
            chain: n.Pom,
            chainName: "Proof Of Memes",
            chainShortName: "POM",
            chainPrefix: "pom",
            id: 18159,
            hexId: "0x46ef",
            logoUrl: N + "/resources/chains/med/pom.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/pom/assets/",
            defaultPair: "0x0282a441addc2c6a0d1d0cd74469338be405b658",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "POM Explorer",
                url: "https://memescan.io",
                logoUrl: N + "/resources/chains/med/pom.png"
            }
        },
        F.Ultron = {
            chain: n.Ultron,
            chainName: "Ultron",
            chainShortName: "ULTRON",
            chainPrefix: "ultron",
            id: 1231,
            hexId: "0x4cf",
            logoUrl: N + "/resources/chains/med/ultron.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/ultron/assets/",
            defaultPair: "0x938ba76720683be80c1d3deffa27b9153e48c5e9",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Ultron Explorer",
                url: "https://ulxscan.com",
                logoUrl: N + "/resources/chains/med/ultron.png"
            }
        },
        F.Energi = {
            chain: n.Energi,
            chainName: "Energi",
            chainShortName: "ENERGI",
            chainPrefix: "energi",
            id: 246,
            hexId: "0xf6",
            logoUrl: N + "/resources/chains/med/energi.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/energi/assets/",
            defaultPair: "0x486b881f845532454ee1c4b695a1da9ae7e97c09",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Energi Explorer",
                url: "https://explorer.energi.network",
                logoUrl: N + "/resources/chains/med/energi.png"
            }
        },
        F.Exosama = {
            chain: n.Exosama,
            chainName: "Exosama",
            chainShortName: "Exosama",
            chainPrefix: "exosama",
            id: 2109,
            hexId: "0x83d",
            logoUrl: N + "/resources/chains/med/exosama.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/exosama/assets/",
            defaultPair: "0x7f46ed28ca9f47a3f63dc52fb2300d171d8eb9a0",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "EXOSAMA Explorer",
                url: "https://explorer.exosama.com",
                logoUrl: N + "/resources/chains/med/exosama.png"
            }
        },
        F.Coredao = {
            chain: n.CoreDao,
            chainName: "Core Dao",
            chainShortName: "Core",
            chainPrefix: "coredao",
            id: -1,
            hexId: "0x",
            logoUrl: N + "/resources/chains/med/coredao.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/coredao/assets/",
            defaultPair: "0x5ebae3a840ff34b107d637c8ed07c3d1d2017178",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "CORE Explorer",
                url: "https://scan.coredao.org",
                logoUrl: N + "/resources/chains/med/coredao.png"
            }
        },
        F.Ethergoerli = {
            chain: n.EthereumGoerli,
            chainName: "Goerli",
            chainShortName: "Goerli",
            chainPrefix: "ethergoerli",
            id: 5,
            hexId: "0x5",
            logoUrl: N + "/resources/chains/med/ether_goerli.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/goerli/assets/",
            defaultPair: "0x00b64e468d2c705a0907f58505536a6c8c49ab26",
            aggregatorSupported: !1,
            bitquerySupported: !0,
            contractAuditSupported: !1,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Goerli Testnet Explorer",
                url: "https://goerli.etherscan.io",
                logoUrl: N + "/resources/chains/med/ether_goerli.png"
            }
        },
        F.Filecoin = {
            chain: n.Filecoin,
            chainName: "Filecoin",
            chainShortName: "Filecoin",
            chainPrefix: "filecoin",
            id: 314,
            hexId: "0x13a",
            logoUrl: N + "/resources/chains/med/filecoin.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/filecoin/assets/",
            defaultPair: "0xe939c9eda1df1555d0ae2230d85184e71b337743",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Filfox",
                url: "https://filfox.info/en",
                logoUrl: N + "/resources/chains/med/filecoin.png"
            }
        },
        F.Zksync = {
            chain: n.Zksync,
            chainName: "Zksync",
            chainShortName: "Zksync",
            chainPrefix: "zksync",
            id: 324,
            hexId: "0x144",
            logoUrl: N + "/resources/chains/med/zksync.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/zksync/assets/",
            defaultPair: "0xdfaab828f5f515e104baaba4d8d554da9096f0e4",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !0,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "ZkSync Era Block Explorer",
                url: "https://explorer.zksync.io",
                logoUrl: N + "/resources/chains/med/zksync.png"
            }
        },
        F.Polygonzkevm = {
            chain: n.Polygonzkevm,
            chainName: "Polygon-zkevm",
            chainShortName: "Polygonzkevm",
            chainPrefix: "polygonzkevm",
            id: 1101,
            hexId: "0x44d",
            logoUrl: N + "/resources/chains/med/polygonzkevm.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/polygonzkevm/assets/",
            defaultPair: "0xc44ad482f24fd750caeba387d2726d8653f8c4bb",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !1,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Polygon zkEVM Explorer",
                url: "https://zkevm.polygonscan.com",
                logoUrl: N + "/resources/chains/med/polygonzkevm.png"
            }
        },
        F.Pulse = {
            chain: n.Pulse,
            chainName: "Pulse",
            chainShortName: "Pulse",
            chainPrefix: "pulse",
            id: 369,
            hexId: "0x171",
            logoUrl: N + "/resources/chains/med/pulse.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/pulse/assets/",
            defaultPair: "0xe56043671df55de5cdf8459710433c10324de0ae",
            aggregatorSupported: !1,
            bitquerySupported: !1,
            contractAuditSupported: !0,
            liquidityProviderSupported: !1,
            covalentSupported: !1,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Pulse Chain",
                url: "https://scan.pulsechain.com",
                logoUrl: N + "/resources/chains/med/pulse.png"
            }
        },
        F.Klaytn = {
            chain: n.Klaytn,
            chainName: "Klaytn",
            chainShortName: "Klaytn",
            chainPrefix: "klaytn",
            id: 8217,
            hexId: "0x2019",
            logoUrl: N + "/resources/chains/med/klaytn.png",
            trustWalletAssetsRepoUrl: "https://assets-cdn.trustwallet.com/blockchains/klaytn/assets/",
            defaultPair: "0xd83f1b074d81869eff2c46c530d7308ffec18036  ",
            aggregatorSupported: !1,
            bitquerySupported: !0,
            contractAuditSupported: !0,
            liquidityProviderSupported: !1,
            covalentSupported: !0,
            bigSwapsSupported: !1,
            mempoolSupported: !1,
            newPairsBotUrl: "#",
            scanner: {
                name: "Klaytn Finder",
                url: "https://www.klaytnfinder.io",
                logoUrl: N + "/resources/chains/med/klaytn.png"
            }
        };
        const L = "USD"
          , ee = new RegExp(L,"i")
          , x = "WETH"
          , V = "ETH"
          , j = "CRO"
          , ue = "AVAX"
          , D = "WAVAX"
          , Z = "ROSE"
          , Ce = "METIS"
          , ot = "WKCS"
          , $e = "WETH"
          , Ue = "WETH"
          , Me = "CELO"
          , _ = "WCELO"
          , S = "WTLOS"
          , P = "WTLOS"
          , B = "NEAR"
          , X = "WNEAR"
          , ce = "WGLMR"
          , Ee = "WMOVR"
          , Fe = "WONE"
          , ft = "WASTR"
          , _t = "WFUSE"
          , an = "WIOTX"
          , Dt = "WOKT"
          , bt = "WADA"
          , Ft = "WJEWEL"
          , Yt = "WEVMOS"
          , cn = "WWDOGE"
          , Bt = "WCANTO"
          , un = "WETC"
          , hn = "WXDAI"
          , Gt = "WBRISE"
          , mn = "WETH"
          , fn = "WREDLC"
          , _n = "WKAI"
          , Tt = "WBCH"
          , Cn = "WCFX"
          , Kt = "WWAN"
          , Sn = "BOBA"
          , Mn = "WELA"
          , vn = "WSDN"
          , Pn = "WWAN"
          , jt = "WRBTC"
          , A = "WSNT"
          , w = "WSNT"
          , c = "wHOO"
          , b = "wHOO"
          , k = "WCUBE"
          , Ae = "WSYS"
          , Mt = "WETH"
          , ro = "WTOMO"
          , Wn = "WKAVA"
          , Gn = "MTGR"
          , so = "WECH"
          , co = "WSHIB"
          , Kn = "WETH"
          , Jn = "WKEK"
          , Xt = "WETH"
          , po = "WMUU"
          , qn = "WEGLD"
          , fo = "WFLR"
          , gt = "WPOM"
          , Co = "wULX"
          , bo = "WNRG"
          , So = "WSAMA"
          , Mo = "WCORE"
          , xn = "GETH"
          , vo = "WFIL"
          , M = "ETH"
          , G = "WETH"
          , l = "WETH"
          , v = "WETH"
          , I = "WPLS"
          , K = "WPLS"
          , Ne = "WKLAY"
          , pt = ["TUSD", "USDC", "USDT", "DAI", "sUSD", "GUSD", "LUSD", "BUSD", "agEUR", "EURT", "EURS", "mUSD", "EUROC", "FRAX"]
          , Ha = [x, V, "WMATIC", "MATIC"]
          , Is = {
            [n.Ethereum]: V,
            [n.Binance]: "BNB",
            [n.Polygon]: "MATIC",
            [n.Fantom]: "FTM",
            [n.Cronos]: j,
            [n.Avalanche]: ue,
            [n.Oasis]: Z,
            [n.Velas]: "VLX",
            [n.Metis]: Ce,
            [n.Kucoin]: ot,
            [n.Optimism]: $e,
            [n.Arbitrum]: Ue,
            [n.Celo]: Me,
            [n.Telos]: S,
            [n.Aurora]: B,
            [n.Moonbeam]: ce,
            [n.Moonriver]: Ee,
            [n.Harmony]: Fe,
            [n.Astar]: ft,
            [n.Fuse]: _t,
            [n.Iotex]: an,
            [n.Okc]: Dt,
            [n.Heco]: "WHT",
            [n.Milkomeda]: bt,
            [n.Dfk]: Ft,
            [n.Solana]: "SOL",
            [n.Evmos]: Yt,
            [n.Doge]: cn,
            [n.Canto]: Bt,
            [n.Etc]: un,
            [n.Gnosis]: hn,
            [n.Bitgert]: Gt,
            [n.Arbitrumnova]: mn,
            [n.Redlight]: fn,
            [n.Kardiachain]: _n,
            [n.Smartbch]: Tt,
            [n.Conflux]: Cn,
            [n.Tomb]: Kt,
            [n.Boba]: Sn,
            [n.Elastos]: Mn,
            [n.Shiden]: vn,
            [n.Fusion]: "FSN",
            [n.Wan]: Pn,
            [n.Rsk]: jt,
            [n.Nova]: A,
            [n.Hoo]: c,
            [n.Cube]: k,
            [n.Syscoin]: Ae,
            [n.Ronin]: Mt,
            [n.Tomo]: ro,
            [n.Kava]: Wn,
            [n.Thundercore]: "WTT",
            [n.Meter]: Gn,
            [n.Echelon]: so,
            [n.Shib]: co,
            [n.Ethw]: Kn,
            [n.Kek]: Jn,
            [n.Ethf]: Xt,
            [n.Sx]: "WSX",
            [n.Muu]: po,
            [n.Alvey]: "ALV",
            [n.Aptos]: "APT",
            [n.Multiversx]: qn,
            [n.Flare]: fo,
            [n.Pom]: gt,
            [n.Ultron]: Co,
            [n.Energi]: bo,
            [n.Exosama]: So,
            [n.CoreDao]: Mo,
            [n.EthereumGoerli]: xn,
            [n.Filecoin]: vo,
            [n.Zksync]: M,
            [n.Polygonzkevm]: l,
            [n.Pulse]: I,
            [n.Klaytn]: Ne
        }
          , Ds = {
            [n.Ethereum]: x,
            [n.Binance]: "WBNB",
            [n.Polygon]: "WMATIC",
            [n.Fantom]: "WFTM",
            [n.Cronos]: "WCRO",
            [n.Avalanche]: D,
            [n.Oasis]: "WROSE",
            [n.Velas]: "WVLX",
            [n.Metis]: "WMETIS",
            [n.Kucoin]: "WKCS",
            [n.Optimism]: "WETH",
            [n.Arbitrum]: "WETH",
            [n.Celo]: _,
            [n.Telos]: P,
            [n.Aurora]: X,
            [n.Moonbeam]: "WGLMR",
            [n.Moonriver]: "WMOVR",
            [n.Harmony]: "WONE",
            [n.Astar]: "WASTR",
            [n.Fuse]: "WFUSE",
            [n.Iotex]: "WIOTX",
            [n.Okc]: "WOKT",
            [n.Heco]: "WHT",
            [n.Milkomeda]: "WADA",
            [n.Dfk]: "WJEWEL",
            [n.Solana]: "SOL",
            [n.Evmos]: "WEVMOS",
            [n.Doge]: "WWDOGE",
            [n.Canto]: "WCANTO",
            [n.Etc]: "WETC",
            [n.Gnosis]: "WXDAI",
            [n.Bitgert]: "WBRISE",
            [n.Arbitrumnova]: "WETH",
            [n.Redlight]: "WREDLC",
            [n.Kardiachain]: "WKAI",
            [n.Smartbch]: "WBCH",
            [n.Conflux]: "WCFX",
            [n.Tomb]: "WWAN",
            [n.Boba]: "BOBA",
            [n.Elastos]: "WELA",
            [n.Shiden]: "WSDN",
            [n.Fusion]: "WFSN",
            [n.Wan]: "WWAN",
            [n.Rsk]: "WRBTC",
            [n.Nova]: w,
            [n.Hoo]: b,
            [n.Cube]: "WCUBE",
            [n.Syscoin]: "WSYS",
            [n.Ronin]: "WETH",
            [n.Tomo]: "WTOMO",
            [n.Kava]: "WKAVA",
            [n.Thundercore]: "WTT",
            [n.Meter]: "MTGR",
            [n.Echelon]: "WECH",
            [n.Shib]: "WSHIB",
            [n.Ethw]: "WETH",
            [n.Kek]: "WKEK",
            [n.Ethf]: "WETH",
            [n.Sx]: "WSX",
            [n.Muu]: "WMUU",
            [n.Alvey]: "WALV",
            [n.Aptos]: "APT",
            [n.Multiversx]: "WEGLD",
            [n.Flare]: "WFLR",
            [n.Pom]: "WPOM",
            [n.Ultron]: "wULX",
            [n.Energi]: "WNRG",
            [n.Exosama]: "WSAMA",
            [n.CoreDao]: "WCORE",
            [n.EthereumGoerli]: "GETH",
            [n.Filecoin]: "WFIL",
            [n.Zksync]: G,
            [n.Polygonzkevm]: v,
            [n.Pulse]: K,
            [n.Klaytn]: "WKLAY"
        }
          , Us = {
            [n.Ethereum]: [x, V],
            [n.Binance]: ["WBNB", "BNB"],
            [n.Polygon]: Ha,
            [n.Fantom]: [x, V, "WFTM", "FTM"],
            [n.Cronos]: [x, V, "WCRO", j],
            [n.Avalanche]: [D, ue],
            [n.Oasis]: [Z, "WROSE"],
            [n.Velas]: ["WVLX", "VLX"],
            [n.Metis]: [Ce, "WMETIS"],
            [n.Kucoin]: [ot, "WKCS"],
            [n.Optimism]: [$e, "WETH"],
            [n.Arbitrum]: [Ue, "WETH"],
            [n.Celo]: [Me, _],
            [n.Telos]: [S, P],
            [n.Aurora]: [B, X],
            [n.Moonbeam]: [ce, "WGLMR"],
            [n.Moonriver]: [Ee, "WMOVR"],
            [n.Harmony]: [Fe, "WONE"],
            [n.Astar]: [ft, "WASTR"],
            [n.Fuse]: [_t, "WFUSE"],
            [n.Iotex]: [an, "WIOTX"],
            [n.Okc]: [Dt, "WOKT"],
            [n.Heco]: ["WHT", "WHT"],
            [n.Milkomeda]: [bt, "WADA"],
            [n.Dfk]: [Ft, "WJEWEL"],
            [n.Solana]: ["SOL", "SOL"],
            [n.Evmos]: [Yt, "WEVMOS"],
            [n.Doge]: [cn, "WWDOGE"],
            [n.Canto]: [Bt, "WCANTO"],
            [n.Etc]: [un, "WETC"],
            [n.Gnosis]: [hn, "WXDAI"],
            [n.Bitgert]: [Gt, "WBRISE"],
            [n.Arbitrumnova]: [mn, "WETH"],
            [n.Redlight]: [fn, "WREDLC"],
            [n.Kardiachain]: [_n, "WKAI"],
            [n.Smartbch]: [Tt, "WBCH"],
            [n.Conflux]: [Cn, "WCFX"],
            [n.Tomb]: [Kt, "WWAN"],
            [n.Boba]: [Sn, "BOBA"],
            [n.Elastos]: [Mn, "WELA"],
            [n.Shiden]: [vn, "WSDN"],
            [n.Fusion]: ["FSN", "WFSN"],
            [n.Wan]: [Pn, "WWAN"],
            [n.Rsk]: [jt, "WRBTC"],
            [n.Nova]: [A, w],
            [n.Hoo]: [c, b],
            [n.Cube]: [k, "WCUBE"],
            [n.Syscoin]: [Ae, "WSYS"],
            [n.Ronin]: [Mt, "WETH"],
            [n.Tomo]: [ro, "WTOMO"],
            [n.Kava]: [Wn, "WKAVA"],
            [n.Thundercore]: ["WTT", "WTT"],
            [n.Meter]: [Gn, "MTGR"],
            [n.Echelon]: [so, "WECH"],
            [n.Shib]: [co, "WSHIB"],
            [n.Ethw]: [Kn, "WETH"],
            [n.Kek]: [Jn, "WKEK"],
            [n.Ethf]: [Xt, "WETH"],
            [n.Sx]: ["WSX", "WSX"],
            [n.Muu]: [po, "WMUU"],
            [n.Alvey]: ["ALV", "WALV"],
            [n.Aptos]: ["APT", "APT"],
            [n.Multiversx]: [qn, "WEGLD"],
            [n.Flare]: [fo, "WFLR"],
            [n.Pom]: [gt, "WPOM"],
            [n.Ultron]: [Co, "wULX"],
            [n.Energi]: [bo, "WNRG"],
            [n.Exosama]: [So, "WSAMA"],
            [n.CoreDao]: [Mo, "WCORE"],
            [n.EthereumGoerli]: [xn, "GETH"],
            [n.Filecoin]: [vo, "WFIL"],
            [n.Zksync]: [M, G],
            [n.Polygonzkevm]: [l, v],
            [n.Pulse]: [I, K],
            [n.Klaytn]: [Ne, "WKLAY"]
        }
          , Rs = {
            [n.Ethereum]: pt,
            [n.Binance]: ["TUSD", "USDC", "USDT", "DAI", "BUSD", "EURS", "EURT", "jEUR"],
            [n.Polygon]: Ha,
            [n.Fantom]: ["TUSD", "USDC", "USDT", "DAI", "BUSD", "fUSD", "MIM", "YUSD"],
            [n.Cronos]: ["USDC", "USDT", "DAI", "BUSD"],
            [n.Avalanche]: ["USDT.e", "USDC.e", "USDT", "USDC", "DAI", "DAI.e"],
            [n.Oasis]: ["USDT", "USDC"],
            [n.Velas]: ["BUSD", "USDT", "USDC"],
            [n.Metis]: ["m.USDT", "m.USDC", "km.USDC", "kUSDT", "DAI", "BUSD"],
            [n.Kucoin]: ["USDT", "USDC", "DAI", "BUSD", "KUSD", "USBL"],
            [n.Optimism]: ["USDT", "USDC", "sUSD", "DAI", "vUSD", "MAI", "MIM", "FRAX"],
            [n.Arbitrum]: ["USDT", "USDC", "DAI", "MIM", "FRAX", "TUSD", "sUSD", "DIA"],
            [n.Celo]: ["USDT", "USDC", "DAI", "mCUSD", "cUSD", "mCEUR", "mCREAL", "cEUR", "USBL", "pUSD", "pEUR", "dcUSD", "dcEUR", "cUSDC", "asUSDC", "UUSD", "KUSD", "stabilUSD", "openUSDT", "openUSDC", "stabUSD", "BUSD", "variableDebtmCUSD"],
            [n.Telos]: ["USDT", "USDC"],
            [n.Aurora]: ["USDT", "USDC", "BUSD", "DAI"],
            [n.Moonbeam]: ["USDT", "USDC", "BUSD", "DAI", "oUSDC", "FRAX", "xcUSDT", "gnosis", "EURe", "MAI"],
            [n.Moonriver]: ["USDT", "USDC", "USDC.e", "USDT.e", "BUSD", "DAI", "USDN", "USBL", "FRAX", "MIM"],
            [n.Harmony]: ["BUSD", "1USDC", "1USDT", "bscBUSD", "bscUSDT", "bscUSDC", "bscDAI", "ONEUSD", "uBUSD", "3CRV", "1DAI", "vUSD", "1MIM", "USBL", "FRAX", "1FRAX", "MAI"],
            [n.Astar]: ["USDT", "USDC", "BUSD"],
            [n.Fuse]: ["fUSD", "BUSD", "USDC", "USDT", "G$", "DAI", "EUR", "ofaUSD", "oBUSD", "oUSDC"],
            [n.Iotex]: ["USDT", "BUSD_b", "BUSD", "USDC", "USDC_m", "USDT_m", "USDC_b", "DAI_m", "USDT_b", "XIM", "MAI", "DAI", "BUSD-bsc", "USDT-matic", "ioBUSD", "ioUSDT", "ioUSDC", "DAI-matic"],
            [n.Okc]: ["USDT", "USDC", "USDK", "pUSDC", "pUSDT", "cUSDT", "BUSD", "anyUSDT", "fUSDT", "aUSDT", "tUSDT", "DAIK", "pDAIK"],
            [n.Heco]: ["USDT", "HUSD", "USDTHECO", "TUSD", "DAI-HECO", "USDC-HECO"],
            [n.Milkomeda]: ["USDT", "USDC", "BUSD", "DAI"],
            [n.Dfk]: ["USDC"],
            [n.Solana]: ["USDC", "USDT", "HUSD", "UXD", "sUSD", "sUSDC-9", "sUSDT-9", "soUSDT", "PAI", "USDH", "pUSDC", "pUSDT", "abUSDT-USDT", "waUSDT_v1", "agEUR", "sagEUR-9", "waDAI_v1", "waUSDC_v1", "BUSDet", "FRAX", "abBUSD", "USDK", "wFRAX_v1", "USDTav", "BUSDbs", "wHUSD_v1", "wDAI_v1", "sUSDT-9", "abUSDT", "afUSDC", "afDAI", "sUSDT-8", "ahUSDT", "wTUSD_v1", "wUSDT_v1", "aeUSDC", "USDTbs", "apUSDT", "aeUSDT", "DAI", "DAIpo", "aaUSDT", "USDTet", "USDTpo", "USDCav", "soUSDC", "USDCet", "xUSD", "aeMIM", "sCASH-8", "sCASH-9", "MIMet", "wsUSD_v1", "acUSD", "aeFEI"],
            [n.Evmos]: ["USDC"],
            [n.Doge]: [],
            [n.Canto]: ["USDC", "USDT", "cUSDC", "cUSDT"],
            [n.Etc]: ["USDT", "USDC", "DAI", "BUSDT"],
            [n.Gnosis]: ["USDC", "USDT", "hUSDC", "hUSDT", "BUSD", "USBL", "xDAIx", "DAI", "FRAX"],
            [n.Bitgert]: ["APEUSDC", "USDT", "USDC", "USDTi", "DAI"],
            [n.Arbitrumnova]: ["USDT", "USDC", "DAI"],
            [n.Redlight]: ["USDT-R"],
            [n.Kardiachain]: ["USDT", "USDC", "KUSD-T", "BUSD"],
            [n.Smartbch]: ["bcUSDT", "bbBUSD", "sBUSD", "USDC", "USDT", "bcDAI", "flexUSD"],
            [n.Conflux]: ["USDT", "USDC", "AUSD", "DAI"],
            [n.Tomb]: ["USDC", "MIM", "DAI"],
            [n.Boba]: ["USDC", "MIM", "DAI", "FRAX", "USDT", "BUSD"],
            [n.Elastos]: ["ethUSDC", "ethUSDT", "ethDAI", "bnbBUSD", "htHUSD"],
            [n.Shiden]: ["DAI", "DAI.e", "USDC", "USDT", "USDT.e", "USDC.e", "sUSDT", "TUSDT"],
            [n.Fusion]: ["USDC", "USDT"],
            [n.Wan]: ["wanEURS", "wanGUSD", "wanTUSD", "wanUSDC", "wanUST"],
            [n.Rsk]: ["RDOC", "rDAI", "BDUS", "EURCB", "crUSDT", "kXUSD", "USDC", "iUSDT", "iSUSD", "USDCB", "rUSDT", "XUSD", "DOC"],
            [n.Nova]: ["NUSD"],
            [n.Hoo]: ["USDT", "lUSDT", "USDC", "BUSDT", "ibUSDT", "lUSDC", "sUSD"],
            [n.Cube]: ["USDT", "USDC", "DAI"],
            [n.Syscoin]: ["USDT", "USDC", "DAI", "BUSD", "TUSD"],
            [n.Ronin]: ["USDC"],
            [n.Tomo]: ["USDT", "PUSD"],
            [n.Kava]: ["USDC", "USDT", "DAI", "BUSD"],
            [n.Thundercore]: ["TT-USDT", "TT-USDC", "TT-BUSD", "TT-HUSD", "DAI"],
            [n.Meter]: ["BUSD.bsc", "USDC.eth", "USDT.eth"],
            [n.Echelon]: ["SUSD", "bUSDC"],
            [n.Shib]: [],
            [n.Ethw]: ["USDT", "DAI"],
            [n.Kek]: [],
            [n.Ethf]: ["USDC", "USDT", "DAI"],
            [n.Sx]: ["USDC"],
            [n.Muu]: [],
            [n.Alvey]: [],
            [n.Aptos]: ["USDC", "USDT", "USDD"],
            [n.Multiversx]: ["USDC"],
            [n.Flare]: [],
            [n.Pom]: ["PUSD.e"],
            [n.Ultron]: ["uUSDT", "uUSDC", "BUSD", "DAI"],
            [n.Energi]: ["USDE", "BUSD", "DAI"],
            [n.Exosama]: ["USDC", "USDT", "BUSD"],
            [n.CoreDao]: ["USDT", "USDC"],
            [n.EthereumGoerli]: [],
            [n.Filecoin]: [],
            [n.Zksync]: ["USDC"],
            [n.Polygonzkevm]: ["USDC", "USDT"],
            [n.Pulse]: ["USDC", "USDT", "DAI"],
            [n.Klaytn]: ["oUSDT", "oUSDC", "KDAI"]
        }
          , Ns = {
            [n.Ethereum]: V,
            [n.Binance]: "BNB",
            [n.Polygon]: V,
            [n.Fantom]: "FTM",
            [n.Cronos]: j,
            [n.Avalanche]: ue,
            [n.Oasis]: Z,
            [n.Velas]: "VLX",
            [n.Metis]: Ce,
            [n.Kucoin]: ot,
            [n.Optimism]: $e,
            [n.Arbitrum]: Ue,
            [n.Celo]: Me,
            [n.Telos]: S,
            [n.Aurora]: B,
            [n.Moonbeam]: ce,
            [n.Moonriver]: Ee,
            [n.Harmony]: Fe,
            [n.Astar]: ft,
            [n.Fuse]: _t,
            [n.Iotex]: an,
            [n.Okc]: Dt,
            [n.Heco]: "WHT",
            [n.Milkomeda]: bt,
            [n.Dfk]: Ft,
            [n.Solana]: "SOL",
            [n.Evmos]: Yt,
            [n.Doge]: cn,
            [n.Canto]: Bt,
            [n.Etc]: un,
            [n.Gnosis]: hn,
            [n.Bitgert]: Gt,
            [n.Arbitrumnova]: mn,
            [n.Redlight]: fn,
            [n.Kardiachain]: _n,
            [n.Smartbch]: Tt,
            [n.Conflux]: Cn,
            [n.Tomb]: Kt,
            [n.Boba]: Sn,
            [n.Elastos]: Mn,
            [n.Shiden]: vn,
            [n.Fusion]: "FSN",
            [n.Wan]: Pn,
            [n.Rsk]: jt,
            [n.Nova]: A,
            [n.Hoo]: c,
            [n.Cube]: k,
            [n.Syscoin]: Ae,
            [n.Ronin]: Mt,
            [n.Tomo]: ro,
            [n.Kava]: Wn,
            [n.Thundercore]: "WTT",
            [n.Meter]: Gn,
            [n.Echelon]: so,
            [n.Shib]: co,
            [n.Ethw]: Kn,
            [n.Kek]: Jn,
            [n.Ethf]: Xt,
            [n.Sx]: "WSX",
            [n.Muu]: po,
            [n.Alvey]: "ALV",
            [n.Aptos]: "APT",
            [n.Multiversx]: qn,
            [n.Flare]: fo,
            [n.Pom]: gt,
            [n.Ultron]: Co,
            [n.Energi]: bo,
            [n.Exosama]: So,
            [n.CoreDao]: Mo,
            [n.EthereumGoerli]: xn,
            [n.Filecoin]: vo,
            [n.Zksync]: M,
            [n.Polygonzkevm]: l,
            [n.Pulse]: I,
            [n.Klaytn]: Ne
        }
          , Fs = {
            [n.Ethereum]: "eth",
            [n.Polygon]: "poly",
            [n.Avalanche]: "avax",
            [n.Fantom]: "ftm",
            [n.Cronos]: "cronos",
            [n.Arbitrum]: "arb",
            [n.Harmony]: "harmony",
            [n.Oasis]: "oasis",
            [n.Kucoin]: "kcc"
        }
          , Bs = {
            [n.Cronos]: "cro",
            [n.Okc]: "pkc",
            [n.Avalanche]: "avax",
            [n.Binance]: "bsc",
            [n.Cronos]: "cro",
            [n.Fantom]: "fantom",
            [n.Gnosis]: "gnosis",
            [n.Harmony]: "harmony",
            [n.Ethereum]: "eth",
            [n.Kucoin]: "kcc",
            [n.Polygon]: "poly",
            [n.Heco]: "heco",
            [n.Arbitrum]: "arb",
            [n.Ethw]: "ethw",
            [n.Optimism]: "optimism",
            [n.Zksync]: "zksync",
            [n.Ethw]: "ethw"
        }
          , $s = {
            [n.Ethereum]: "eth",
            [n.Arbitrum]: "arbitrum",
            [n.Binance]: "bsc",
            [n.Polygon]: "polygon",
            [n.Fantom]: "fantom",
            [n.Avalanche]: "avalanche",
            [n.CoreDao]: "core",
            [n.Zksync]: "zksync",
            [n.Polygonzkevm]: "polygonzkevm",
            [n.Pom]: "pom",
            [n.Kava]: "kava",
            [n.Metis]: "metis",
            [n.Astar]: "astar",
            [n.Oasis]: "oasis",
            [n.Iotex]: "iotex",
            [n.Conflux]: "conflux",
            [n.Canto]: "canto",
            [n.Energi]: "energi",
            [n.Velas]: "velas",
            [n.Pulse]: "pulse"
        }
          , Zs = "0xfb7b4564402e5500db5bb6d63ae671302777c75a"
          , Hs = "0xe91a8d2c584ca93c7405f15c22cdfe53c29896e3"
          , Vs = "0x7ceb23fd6bc0add59e62ac25578270cff1b9f619"
          , ca = {
            [n.Ethereum]: {
                exchanges: [{
                    slug: "univ2",
                    isDefault: !0,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.Ethereum,
                    urlInfo: "https://v2.info.uniswap.org",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: "v2",
                    urlUnicrypt: "https://app.unicrypt.network/amm/uni-v2/pair/",
                    pairDefault: "0xa29fe6ef9592b5d408cca961d0fb9b1faf497d6d",
                    backgroundColor: "#ff2d79",
                    textColor: "#fff",
                    limitBotSupported: !0
                }, {
                    slug: "univ3",
                    isDefault: !1,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.Ethereum,
                    urlInfo: "https://v3.info.uniswap.org",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: "v3",
                    urlUnicrypt: "#",
                    pairDefault: "0xa29fe6ef9592b5d408cca961d0fb9b1faf497d6d",
                    backgroundColor: "#ff2d79",
                    textColor: "#fff",
                    hasFeePercentagePools: !0
                }]
            },
            [n.Binance]: {
                exchanges: [{
                    slug: "pancake",
                    isDefault: !0,
                    name: "PancakeSwap",
                    logo: "/resources/exchanges/pancakeswap.png",
                    chainId: n.Binance,
                    urlInfo: "https://pancakeswap.info",
                    urlSwap: "https://v1exchange.pancakeswap.finance/#/swap",
                    version: "v1",
                    urlUnicrypt: "https://app.unicrypt.network/amm/pancake-v1/pair/",
                    backgroundColor: "#f8b612",
                    textColor: "#5a5a5a",
                    pairDefault: "0x4b729d5d871057f3a9c424792729217cde72410d",
                    limitBotSupported: !0
                }, {
                    slug: "pancakev2",
                    isDefault: !1,
                    name: "PancakeSwap",
                    logo: "/resources/exchanges/pancakeswap.png",
                    chainId: n.Binance,
                    urlInfo: "https://pancakeswap.info",
                    urlSwap: "https://pancakeswap.finance/swap",
                    version: "v2",
                    urlUnicrypt: "https://app.unicrypt.network/amm/pancake-v2/pair/",
                    backgroundColor: "#f8b612",
                    textColor: "#5a5a5a",
                    pairDefault: "0x4b729d5d871057f3a9c424792729217cde72410d",
                    limitBotSupported: !0
                }]
            },
            [n.Polygon]: {
                exchanges: [{
                    slug: "quick",
                    isDefault: !0,
                    name: "QuickSwap",
                    logo: "/resources/exchanges/quickswap.png",
                    chainId: n.Polygon,
                    urlInfo: "https://info.quickswap.exchange/",
                    urlSwap: "https://quickswap.exchange/#/swap",
                    version: null,
                    urlUnicrypt: "https://app.unicrypt.network/amm/quickswap-v1/pair/",
                    backgroundColor: "#1a3b8d",
                    textColor: "#fff",
                    pairDefault: "0xadbf1854e5883eb8aa7baf50705338739e558e5b"
                }, {
                    slug: "univ3poly",
                    isDefault: !1,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.Polygon,
                    urlInfo: "https://info.uniswap.org/#/polygon/",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    backgroundColor: "#ff2d79",
                    textColor: "#fff",
                    hasFeePercentagePools: !0
                }]
            },
            [n.Fantom]: {
                exchanges: [{
                    slug: "spooky",
                    isDefault: !0,
                    name: "Spookyswap",
                    logo: "/resources/exchanges/spookyswap.png",
                    chainId: n.Fantom,
                    urlInfo: "https://info.spookyswap.finance/",
                    urlSwap: "https://spookyswap.finance/swap",
                    version: null,
                    urlUnicrypt: "#",
                    backgroundColor: "#8c8ce3",
                    textColor: "#fff",
                    pairDefault: "0xf0702249f4d3a25cd3ded7859a165693685ab577"
                }]
            },
            [n.Cronos]: {
                exchanges: [{
                    slug: "crona",
                    isDefault: !0,
                    name: "CronaSwap",
                    logo: "/resources/exchanges/cronaswap.svg",
                    chainId: n.Cronos,
                    urlInfo: "https://app.cronaswap.org/",
                    urlSwap: "https://app.cronaswap.org/swap",
                    version: null,
                    urlUnicrypt: "#",
                    backgroundColor: "#3f79ed",
                    textColor: "#fff"
                }]
            },
            [n.Avalanche]: {
                exchanges: [{
                    slug: "traderjoe",
                    isDefault: !0,
                    name: "Trader Joe",
                    logo: "/resources/exchanges/traderjoe.png",
                    chainId: n.Avalanche,
                    urlInfo: "https://traderjoexyz.com/",
                    urlSwap: "https://traderjoexyz.com/#/trade",
                    version: null,
                    urlUnicrypt: "#",
                    backgroundColor: "#14163b",
                    textColor: "#fff",
                    pairDefault: "0xa389f9430876455c36478deea9769b7ca4e3ddb1",
                    limitBotSupported: !0
                }]
            },
            [n.Oasis]: {
                exchanges: [{
                    slug: "dex513653",
                    isDefault: !0,
                    name: "YuzuSwap",
                    logo: "/resources/exchanges/yuzuswap.svg",
                    chainId: n.Oasis,
                    urlInfo: "https://yuzu-swap.com/",
                    urlSwap: "https://app.yuzu-swap.com/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    backgroundColor: "#de2549",
                    textColor: "#FFF",
                    pairDefault: "0xfb9bd52abe613a5c4a20e9fc09462a2ec5f2d1b2"
                }]
            },
            [n.Velas]: {
                exchanges: [{
                    slug: "dex7f35e3",
                    isDefault: !0,
                    name: "WagyuSwap",
                    logo: "/resources/exchanges/wagyuswap.png",
                    chainId: n.Velas,
                    urlInfo: "https://www.wagyuswap.app/",
                    urlSwap: "https://exchange.wagyuswap.app/swap",
                    version: null,
                    urlUnicrypt: "#",
                    backgroundColor: "#ee4a63",
                    textColor: "#FFF",
                    pairDefault: "0x8e2b762bee3e2bf2c8fb0cdd04274042748d6c23"
                }]
            },
            [n.Kucoin]: {
                exchanges: [{
                    slug: "dex2e65ae",
                    isDefault: !0,
                    name: "Kuswap",
                    logo: "/resources/exchanges/ku.png",
                    chainId: n.Kucoin,
                    urlInfo: "https://kuswap.finance/",
                    urlSwap: "https://kuswap.finance/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x6c31e0f5c07b81a87120cc58c4dcc3fbafb00367",
                    backgroundColor: "#03a9f4",
                    textColor: "#fff"
                }]
            },
            [n.Metis]: {
                exchanges: [{
                    slug: "dex9dff9f",
                    isDefault: !0,
                    name: "Netswap",
                    logo: "/resources/exchanges/net.svg",
                    chainId: n.Metis,
                    urlInfo: "https://netswap.io/#/home",
                    urlSwap: "https://netswap.io/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x5ae3ee7fbb3cb28c17e7adc3a6ae605ae2465091",
                    backgroundColor: "#c42a61",
                    textColor: "#fff"
                }]
            },
            [n.Optimism]: {
                exchanges: [{
                    slug: "dex31f984",
                    isDefault: !0,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.Optimism,
                    urlInfo: "https://uniswap.org/",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xc858a329bf053be78d6239c4a4343b8fbd21472b",
                    backgroundColor: "#ff007a",
                    textColor: "#fff",
                    hasFeePercentagePools: !0
                }]
            },
            [n.Arbitrum]: {
                exchanges: [{
                    slug: "dex31f984",
                    isDefault: !0,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.Arbitrum,
                    urlInfo: "https://uniswap.org/",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x905dfcd5649217c42684f23958568e533c711aa3",
                    backgroundColor: "#ff007a",
                    textColor: "#fff",
                    hasFeePercentagePools: !0
                }]
            },
            [n.Celo]: {
                exchanges: [{
                    slug: "dexbc74c4",
                    isDefault: !0,
                    name: "Sushiswap",
                    logo: "/resources/exchanges/sushiswap.png",
                    chainId: n.Celo,
                    urlInfo: "https://sushi.com/",
                    urlSwap: "https://app.sushi.com/en/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x1e593f1fe7b61c53874b54ec0c59fd0d5eb8621e",
                    backgroundColor: "#3e3e7c",
                    textColor: "#fff"
                }]
            },
            [n.Telos]: {
                exchanges: [{
                    slug: "dexbc74c4",
                    isDefault: !0,
                    name: "Sushiswap",
                    logo: "/resources/exchanges/sushiswap.png",
                    chainId: n.Telos,
                    urlInfo: "https://sushi.com/",
                    urlSwap: "https://app.sushi.com/en/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x3eff1f57305b3d685ed1dbbc3e287d534f3d0bfc",
                    backgroundColor: "#3e3e7c",
                    textColor: "#fff"
                }]
            },
            [n.Aurora]: {
                exchanges: [{
                    slug: "dexbc74c4",
                    isDefault: !0,
                    name: "Trisolaris",
                    logo: "/resources/exchanges/trisolaris.svg",
                    chainId: n.Aurora,
                    urlInfo: "https://www.trisolaris.io/",
                    urlSwap: "https://www.trisolaris.io/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x03b666f3488a7992b2385b12df7f35156d7b29cd",
                    backgroundColor: "#1350ff",
                    textColor: "#fff"
                }]
            },
            [n.Moonbeam]: {
                exchanges: [{
                    slug: "dexdacc0e",
                    isDefault: !0,
                    name: "Stellaswap",
                    logo: "/resources/exchanges/stella.png",
                    chainId: n.Moonbeam,
                    urlInfo: "https://stellaswap.com/",
                    urlSwap: "https://app.stellaswap.com/exchange/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x555b74dafc4ef3a5a1640041e3244460dc7610d1",
                    backgroundColor: "#E4107B",
                    textColor: "#fff"
                }]
            },
            [n.Moonriver]: {
                exchanges: [{
                    slug: "dex5a1b68",
                    isDefault: !0,
                    name: "Solarbeam",
                    logo: "/resources/exchanges/solarbeam.png",
                    chainId: n.Moonriver,
                    urlInfo: "https://solarbeam.io/",
                    urlSwap: "https://app.solarbeam.io/exchange/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xe537f70a8b62204832b8ba91940b77d3f79aeb81",
                    backgroundColor: "#E4107B",
                    textColor: "#fff"
                }]
            },
            [n.Harmony]: {
                exchanges: [{
                    slug: "dexbc74c4",
                    isDefault: !0,
                    name: "Sushiswap",
                    logo: "/resources/exchanges/sushiswap.png",
                    chainId: n.Harmony,
                    urlInfo: "https://app.sushi.com/",
                    urlSwap: "https://app.sushi.com/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xbf255d8c30dbab84ea42110ea7dc870f01c0013a",
                    backgroundColor: "#3E3E7C",
                    textColor: "#fff"
                }]
            },
            [n.Astar]: {
                exchanges: [{
                    slug: "dex10a03e",
                    isDefault: !0,
                    name: "Arthswap",
                    logo: "/resources/exchanges/arthswap.svg",
                    chainId: n.Astar,
                    urlInfo: "https://app.arthswap.org/",
                    urlSwap: "https://app.arthswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x806f746a7c4293092ac7aa604347be123322df1e",
                    backgroundColor: "#1B6DC1",
                    textColor: "#fff"
                }]
            },
            [n.Fuse]: {
                exchanges: [{
                    slug: "dex294f3a",
                    isDefault: !0,
                    name: "Voltage Finance",
                    logo: "/resources/exchanges/voltage.svg",
                    logoStyles: "{ background-color: #242637 }",
                    chainId: n.Fuse,
                    urlInfo: "https://app.voltage.finance/index.html#/home",
                    urlSwap: "https://app.voltage.finance/index.html#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x9f17b1895633e855b8b1c1d0ade9b3b72eb0590c",
                    backgroundColor: "#c1f23b",
                    textColor: "#000"
                }]
            },
            [n.Iotex]: {
                exchanges: [{
                    slug: "dexa58b9d",
                    isDefault: !0,
                    name: "Mimo",
                    logo: "/resources/exchanges/mimo.svg",
                    chainId: n.Iotex,
                    urlInfo: "https://v2.info.mimo.exchange/",
                    urlSwap: "https://mimo.exchange/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x6bdefe87c4b18726002d3505b3251c89c8004c6a",
                    backgroundColor: "#00e100",
                    textColor: "#000"
                }]
            },
            [n.Okc]: {
                exchanges: [{
                    slug: "dex4d4afe",
                    isDefault: !0,
                    name: "Cherryswap",
                    logo: "/resources/exchanges/cherry.svg",
                    chainId: n.Okc,
                    urlInfo: "https://okinfo.cherryswap.net/",
                    urlSwap: "https://www.cherryswap.net/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xf3098211d012ff5380a03d80f150ac6e5753caa8",
                    backgroundColor: "#e55268",
                    textColor: "#fff"
                }]
            },
            [n.Heco]: {
                exchanges: [{
                    slug: "dex22d941",
                    isDefault: !0,
                    name: "MDEX",
                    logo: "/resources/exchanges/mdex.svg",
                    chainId: n.Heco,
                    urlInfo: "https://ht.mdex.com/",
                    urlSwap: "https://ht.mdex.com/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x499b6e03749b4baf95f9e70eed5355b138ea6c31",
                    backgroundColor: "#000d49",
                    textColor: "#fff"
                }]
            },
            [n.Milkomeda]: {
                exchanges: [{
                    slug: "dexa5ad29",
                    isDefault: !0,
                    name: "Milkyswap",
                    logo: "/resources/exchanges/milky.svg",
                    chainId: n.Milkomeda,
                    urlInfo: "https://www.milkyswap.exchange/",
                    urlSwap: "https://www.milkyswap.exchange/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x0b46ad9e9b749c9d500c81a4975b1599a872ebe8",
                    backgroundColor: "#130123",
                    textColor: "#fff"
                }]
            },
            [n.Dfk]: {
                exchanges: [{
                    slug: "dex7cbaaa",
                    isDefault: !0,
                    name: "DeFi Kingdoms",
                    logo: "/resources/exchanges/defikingdoms.svg",
                    chainId: n.Dfk,
                    urlInfo: "https://defikingdoms.com/",
                    urlSwap: "https://game.defikingdoms.com",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xcf329b34049033de26e4449aebcb41f1992724d3",
                    backgroundColor: "#ffe3bd",
                    textColor: "#100F21"
                }]
            },
            [n.Solana]: {
                exchanges: [{
                    slug: "dexq59qw1",
                    isDefault: !1,
                    name: "Orca",
                    logo: "/resources/exchanges/orca.svg",
                    chainId: n.Solana,
                    urlInfo: "https://www.orca.so/stats",
                    urlSwap: "https://www.orca.so",
                    version: "v1",
                    urlUnicrypt: "#",
                    pairDefault: "EGZ7tiLeH62TPV1gL8WwbXGzEPa9zmcpVnnkPKKnrE2U",
                    backgroundColor: "#0d0f35",
                    textColor: "#fff"
                }, {
                    slug: "dexdp3aqp",
                    isDefault: !0,
                    name: "Orca V2",
                    logo: "/resources/exchanges/orca.svg",
                    chainId: n.Solana,
                    urlInfo: "https://www.orca.so/stats",
                    urlSwap: "https://www.orca.so",
                    version: "v2",
                    urlUnicrypt: "#",
                    pairDefault: "EGZ7tiLeH62TPV1gL8WwbXGzEPa9zmcpVnnkPKKnrE2U",
                    backgroundColor: "#0d0f35",
                    textColor: "#fff"
                }]
            },
            [n.Evmos]: {
                exchanges: [{
                    slug: "dex523cd2",
                    isDefault: !0,
                    name: "Diffusion",
                    logo: "/resources/exchanges/diffusion.svg",
                    chainId: n.Evmos,
                    urlInfo: "https://diffusion.fi/",
                    urlSwap: "https://app.diffusion.fi/#/swap",
                    version: "v1",
                    urlUnicrypt: "#",
                    pairDefault: "0x6df94e977d82d917a621dff75c00abd19a27c26b",
                    backgroundColor: "#05111a",
                    textColor: "#27d2ea"
                }]
            },
            [n.Doge]: {
                exchanges: [{
                    slug: "dex29c9c3",
                    isDefault: !0,
                    name: "DogeSwap",
                    logo: "/resources/exchanges/dogeswap.png",
                    chainId: n.Doge,
                    urlInfo: "https://dogeswap.org/",
                    urlSwap: "https://dogeswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x1352ea1afc5d4913ae0bab5a540a9f91299bebee",
                    backgroundColor: "#ff007a",
                    textColor: "#fff"
                }]
            },
            [n.Canto]: {
                exchanges: [{
                    slug: "dexc1cfba",
                    isDefault: !0,
                    name: "Slingshot",
                    logo: "/resources/exchanges/slingshotfinance.svg",
                    chainId: n.Canto,
                    urlInfo: "https://slingshot.finance/",
                    urlSwap: "https://app.slingshot.finance/trade/ETH",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x9571997a66d63958e1b3de9647c22bd6b9e7228c",
                    backgroundColor: "#66FF9A",
                    textColor: "#000000"
                }]
            },
            [n.Etc]: {
                exchanges: [{
                    slug: "dex66e4b0",
                    isDefault: !0,
                    name: "Soyfinance",
                    logo: "/resources/exchanges/soyfinance.svg",
                    chainId: n.Etc,
                    urlInfo: "https://soy.finance/",
                    urlSwap: "https://app.soy.finance/swap#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xfb6414f689e93bacd942919fba7cd8aa7f5e5c64",
                    backgroundColor: "#8ba333",
                    textColor: "#fff"
                }]
            },
            [n.Gnosis]: {
                exchanges: [{
                    slug: "dex0737d7",
                    isDefault: !0,
                    name: "Honeyswap",
                    logo: "/resources/exchanges/honeyswap.svg",
                    logoStyles: "{ background-color: #2C3437 }",
                    chainId: n.Gnosis,
                    urlInfo: "https://honeyswap.org/",
                    urlSwap: "https://honeyswap.org/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x176fb4db2d823907a4afede3df08746d2c8dd158",
                    backgroundColor: "#40444f",
                    textColor: "#fff"
                }]
            },
            [n.Bitgert]: {
                exchanges: [{
                    slug: "dex31c13f",
                    isDefault: !0,
                    name: "Icecreamswap",
                    logo: "/resources/exchanges/icecreamswap.svg",
                    chainId: n.Bitgert,
                    urlInfo: "https://app.icecreamswap.com/#/",
                    urlSwap: "https://app.icecreamswap.com/#/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x8c243d7b04e0f8f78dc87c8c2297581310468129",
                    backgroundColor: "#FF007A",
                    textColor: "#fff"
                }]
            },
            [n.Arbitrumnova]: {
                exchanges: [{
                    slug: "dexbc74c4",
                    isDefault: !0,
                    name: "Sushiswap",
                    logo: "/resources/exchanges/sushiswap.svg",
                    chainId: n.Bitgert,
                    urlInfo: "https://sushi.com/",
                    urlSwap: "https://app.sushi.com/en/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x26d96cfc6df8262b1bb327a2df0ede02fdfc8874",
                    backgroundColor: "#ef8220",
                    textColor: "#000"
                }]
            },
            [n.Redlight]: {
                exchanges: [{
                    slug: "dex6f8921",
                    isDefault: !0,
                    name: "Dawnswap",
                    logo: "/resources/exchanges/dawnswapfinance.svg",
                    chainId: n.Redlight,
                    urlInfo: "https://dawnswap.finance/farms",
                    urlSwap: "https://dawnswap.finance/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x46f013d0aa26d12c39b1c9dfdf67fcd05a452e52",
                    backgroundColor: "#000000",
                    textColor: "#ff3c3b"
                }]
            },
            [n.Kardiachain]: {
                exchanges: [{
                    slug: "dexf50da1",
                    isDefault: !0,
                    name: "Kaidex",
                    logo: "/resources/exchanges/kaidex.svg",
                    chainId: n.Kardiachain,
                    urlInfo: "https://kaidex.io/statistic",
                    urlSwap: "https://kaidex.io/trade",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x1c107492b20b12cd384e193b4426da97354cbea3",
                    backgroundColor: "#f0ff35",
                    textColor: "#262626"
                }]
            },
            [n.Smartbch]: {
                exchanges: [{
                    slug: "dex265ca0",
                    isDefault: !0,
                    name: "Mistswap",
                    logo: "/resources/exchanges/mistswap.svg",
                    chainId: n.Smartbch,
                    urlInfo: "https://analytics.mistswap.fi/",
                    urlSwap: "https://app.mistswap.fi/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x27580618797a2ce02fdfbbee948388a50a823611",
                    backgroundColor: "#142e4a",
                    textColor: "#fff"
                }]
            },
            [n.Conflux]: {
                exchanges: [{
                    slug: "dex3342f5",
                    isDefault: !0,
                    name: "Swappi",
                    logo: "/resources/exchanges/swappi.svg",
                    chainId: n.Conflux,
                    urlInfo: "https://swappi.io/",
                    urlSwap: "https://app.swappi.io/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x8fcf9c586d45ce7fcf6d714cb8b6b21a13111e0b",
                    backgroundColor: "#163b56",
                    textColor: "#fff"
                }]
            },
            [n.Tomb]: {
                exchanges: [{
                    slug: "dex0703f9",
                    isDefault: !0,
                    name: "Lif3",
                    logo: "/resources/exchanges/lif3.svg",
                    chainId: n.Tomb,
                    urlInfo: "https://lif3.com/garden",
                    urlSwap: "https://lif3.com/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xd78372c98386c01e8f4abb2c5cdf8c234a99cf06",
                    backgroundColor: "#d5b78a",
                    textColor: "#38404e"
                }]
            },
            [n.Boba]: {
                exchanges: [{
                    slug: "dex265d29",
                    isDefault: !0,
                    name: "Oolongswap",
                    logo: "/resources/exchanges/oolongswap.svg",
                    chainId: n.Boba,
                    urlInfo: "https://info.oolongswap.com/#/home",
                    urlSwap: "https://oolongswap.com/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xa43159b18ff8208bc3176a10af22c8167531769e",
                    backgroundColor: "#e0efdd",
                    textColor: "#000"
                }]
            },
            [n.Elastos]: {
                exchanges: [{
                    slug: "dex5334e5",
                    isDefault: !0,
                    name: "Glide Finance",
                    logo: "/resources/exchanges/glidefinance.svg",
                    chainId: n.Elastos,
                    urlInfo: "https://glidefinance.io/info",
                    urlSwap: "https://glidefinance.io/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x6077b7990d3d0dfb5a50f1d207f67ac5955b999d",
                    backgroundColor: "#f1a35b",
                    textColor: "#fff"
                }]
            },
            [n.Shiden]: {
                exchanges: [{
                    slug: "dexad46b1",
                    isDefault: !0,
                    name: "Polkaex",
                    logo: "/resources/exchanges/polkaex.svg",
                    chainId: n.Shiden,
                    urlInfo: "https://app.polkaex.io/farms",
                    urlSwap: "https://app.polkaex.io/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x1f582584c003c9ba9258d1ea6c5289e617a169bf",
                    backgroundColor: "#d20063",
                    textColor: "#fff"
                }]
            },
            [n.Fusion]: {
                exchanges: [{
                    slug: "dexe4788f",
                    isDefault: !0,
                    name: "Chainge Finance",
                    logo: "/resources/exchanges/chaingefinance.svg",
                    chainId: n.Fusion,
                    urlInfo: "https://www.chainge.finance/info/pairs",
                    urlSwap: "https://www.chainge.finance/info/assets",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x5df4e8cc088d997eb5fe475c28c621db18ea0787",
                    backgroundColor: "#ffda00",
                    textColor: "#000"
                }]
            },
            [n.Wan]: {
                exchanges: [{
                    slug: "dexaa5537",
                    isDefault: !0,
                    name: "WanSwap",
                    logo: "/resources/exchanges/wanswap.svg",
                    chainId: n.Wan,
                    urlInfo: "https://www.wanswap.finance/#/farm",
                    urlSwap: "https://www.wanswap.finance/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x808035f3207c33ff3db27798f0af2946796c1aa1",
                    backgroundColor: "#ffe600",
                    textColor: "#46432e"
                }]
            },
            [n.Rsk]: {
                exchanges: [{
                    slug: "dex77c0e1",
                    isDefault: !0,
                    name: "RSK Swap",
                    logo: "/resources/exchanges/rskswap.svg",
                    chainId: n.Rsk,
                    urlInfo: "https://rskswap.com/",
                    urlSwap: "https://app.rskswap.com/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x1dd8665ec5f47416ff37beb2de5cf7b095d377ad",
                    backgroundColor: "#04b43c",
                    textColor: "#fff"
                }]
            },
            [n.Nova]: {
                exchanges: [{
                    slug: "dex52bf55",
                    isDefault: !0,
                    name: "Fusion",
                    logo: "/resources/exchanges/fusion.svg",
                    chainId: n.Nova,
                    urlInfo: "https://fusion.novanetwork.io/#/",
                    urlSwap: "https://fusion.novanetwork.io/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x0775f696f64c824471e29460fb92694a41e754cf",
                    backgroundColor: "#b24141",
                    textColor: "#fff"
                }]
            },
            [n.Hoo]: {
                exchanges: [{
                    slug: "dex7313ea",
                    isDefault: !0,
                    name: "Elkfinance",
                    logo: "/resources/exchanges/elkfinance.svg",
                    chainId: n.Hoo,
                    urlInfo: "https://elk.finance/",
                    urlSwap: "https://app.elk.finance/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x4d5d0fb1b7744264293a35903a25783a4b577831",
                    backgroundColor: "#009f54",
                    textColor: "#fff"
                }]
            },
            [n.Cube]: {
                exchanges: [{
                    slug: "dexbf280f",
                    isDefault: !0,
                    name: "Capricorn",
                    logo: "/resources/exchanges/capricorn.svg",
                    chainId: n.Cube,
                    urlInfo: "https://www.capricorn.finance/",
                    urlSwap: "https://www.capricorn.finance/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x5d3ad1fe9beee77167033df7e9f43020f1071e41",
                    backgroundColor: "#1da3ff",
                    textColor: "#fff"
                }]
            },
            [n.Syscoin]: {
                exchanges: [{
                    slug: "dex021496",
                    isDefault: !0,
                    name: "Pegasys",
                    logo: "/resources/exchanges/pegasys.svg",
                    chainId: n.Syscoin,
                    urlInfo: "https://pegasys.finance/",
                    urlSwap: "https://app.pegasys.finance/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x2cdf912cbeaf76d67feadc994d889c2f4442b300",
                    backgroundColor: "#1c2f49",
                    textColor: "#2bb5cb"
                }]
            },
            [n.Ronin]: {
                exchanges: [{
                    slug: "dex9cb930",
                    isDefault: !0,
                    name: "Katana",
                    logo: "/resources/exchanges/katana.svg",
                    chainId: n.Ronin,
                    urlInfo: "https://katana.roninchain.com/#/farm",
                    urlSwap: "https://katana.roninchain.com/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xa7964991f339668107e2b6a6f6b8e8b74aa9d017",
                    backgroundColor: "#1886f0",
                    textColor: "#fff"
                }]
            },
            [n.Tomo]: {
                exchanges: [{
                    slug: "dex77a396",
                    isDefault: !0,
                    name: "Luaswap",
                    logo: "/resources/exchanges/luaswap.svg",
                    chainId: n.Tomo,
                    urlInfo: "https://luaswap.org/#/",
                    urlSwap: "https://app.luaswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x347f551eaba062167779c9c336aa681526857b81",
                    backgroundColor: "#fabc44",
                    textColor: "#242828"
                }]
            },
            [n.Kava]: {
                exchanges: [{
                    slug: "dex1b1f9f",
                    isDefault: !0,
                    name: "Surfswap",
                    logo: "/resources/exchanges/surfswap.svg",
                    chainId: n.Kava,
                    urlInfo: "https://surfdex.io/",
                    urlSwap: "https://app.surfdex.io/exchange/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x6bbebe57397d530fb95c69bd58ac0932d9bd39eb",
                    backgroundColor: "#26a1a9",
                    textColor: "#fff"
                }]
            },
            [n.Thundercore]: {
                exchanges: [{
                    slug: "dex00b46b",
                    isDefault: !0,
                    name: "Laserswap",
                    logo: "/resources/exchanges/laserswap.svg",
                    chainId: n.Thundercore,
                    urlInfo: "https://laserswap.finance/",
                    urlSwap: "https://laserswap.finance/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xa192acf29aebd0c94cad757a695812bf34d1e265",
                    backgroundColor: "#2fb798",
                    textColor: "#fff"
                }]
            },
            [n.Meter]: {
                exchanges: [{
                    slug: "dex193135",
                    isDefault: !0,
                    name: "Voltswap",
                    logo: "/resources/exchanges/voltswap.svg",
                    chainId: n.Meter,
                    urlInfo: "https://voltswap.finance/#/farm",
                    urlSwap: "https://voltswap.finance",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xaca210bd7d12c15560994e4c7b2bec1b538ad306",
                    backgroundColor: "#e60d7e",
                    textColor: "#fff"
                }]
            },
            [n.Echelon]: {
                exchanges: [{
                    slug: "dexac680d",
                    isDefault: !0,
                    name: "Defyswap",
                    logo: "/resources/exchanges/defyswap.svg",
                    chainId: n.Echelon,
                    urlInfo: "https://defyswap.finance/",
                    urlSwap: "https://defyswap.finance/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xece49b38d9fe03756dc348ba7844d13be77c0909",
                    backgroundColor: "#7645d9",
                    textColor: "#fff"
                }]
            },
            [n.Shib]: {
                exchanges: [{
                    slug: "dex6798a6",
                    isDefault: !0,
                    name: "Shibswap",
                    logo: "/resources/exchanges/shibswap.svg",
                    chainId: n.Shib,
                    urlInfo: "https://shibswap.shibchain.app/#/pool",
                    urlSwap: "https://shibswap.shibchain.app/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x063c6d432037a6c9345738b9525e6b5fbf6ceaf7",
                    backgroundColor: "#e40dce",
                    textColor: "#fff"
                }]
            },
            [n.Ethw]: {
                exchanges: [{
                    slug: "dexc5aa6f",
                    isDefault: !0,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.svg",
                    chainId: n.Ethw,
                    urlInfo: "https://uniswap.org/",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",
                    backgroundColor: "#e8006f",
                    textColor: "#fff"
                }]
            },
            [n.Kek]: {
                exchanges: [{
                    slug: "dex6a4dc4",
                    isDefault: !0,
                    name: "Kekswap",
                    logo: "/resources/exchanges/kekswap.svg",
                    chainId: n.Kek,
                    urlInfo: "https://keeekswap.com/#/swap",
                    urlSwap: "https://keeekswap.com/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x769574c9cda37df69043fb12221c97bf7fd0bafa",
                    backgroundColor: "#0cee1e",
                    textColor: "#fff"
                }]
            },
            [n.Ethf]: {
                exchanges: [{
                    slug: "dexc5aa6f",
                    isDefault: !0,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.Ethf,
                    urlInfo: "https://uniswap.org/",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",
                    backgroundColor: "#ff2d79",
                    textColor: "#fff"
                }]
            },
            [n.Sx]: {
                exchanges: [{
                    slug: "dex14c2cf",
                    isDefault: !0,
                    name: "Sharkswap",
                    logo: "/resources/exchanges/sharkswap.png",
                    chainId: n.Sx,
                    urlInfo: "https://www.sharkswap.xyz/swap",
                    urlSwap: "https://www.sharkswap.xyz/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",
                    backgroundColor: "#3b82f6",
                    textColor: "#fff"
                }]
            },
            [n.Muu]: {
                exchanges: [{
                    slug: "dex8a6edc",
                    isDefault: !0,
                    name: "Barnswap",
                    logo: "/resources/exchanges/barnswap.svg",
                    chainId: n.Muu,
                    urlInfo: "https://barnswap.com/#/swap",
                    urlSwap: "https://barnswap.com/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x8d9db48f288ccd089a68e978ec162fcfb14e3e41",
                    backgroundColor: "#ad1925",
                    textColor: "#fff"
                }]
            },
            [n.Alvey]: {
                exchanges: [{
                    slug: "dex4d8dab",
                    isDefault: !0,
                    name: "Elvesdex",
                    logo: "/resources/exchanges/elvesdex.svg",
                    chainId: n.Alvey,
                    urlInfo: "https://elvesdex.app",
                    urlSwap: "https://elvesdex.app",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x7faf0ce59ed8bf87ed19cbee59318bd3ca55f7fa",
                    backgroundColor: "#487cb6",
                    textColor: "#fff"
                }]
            },
            [n.Aptos]: {
                exchanges: [{
                    slug: "dex561e12",
                    isDefault: !0,
                    name: "Liquidswap",
                    logo: "/resources/exchanges/liquidswap.png",
                    chainId: n.Aptos,
                    urlInfo: "https://liquidswap.com/#/",
                    urlSwap: "https://liquidswap.com/#/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12<0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC-0x1::aptos_coin::AptosCoin-0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated>",
                    backgroundColor: "#6e42ca",
                    textColor: "#fff"
                }]
            },
            [n.Multiversx]: {
                exchanges: [{
                    slug: "dex2fy57p",
                    isDefault: !0,
                    name: "xexchange",
                    logo: "/resources/exchanges/xexchange.png",
                    chainId: n.Multiversx,
                    urlInfo: "https://xexchange.com/",
                    urlSwap: "https://xexchange.com/swap/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq",
                    backgroundColor: "#3364f6",
                    textColor: "#fff"
                }]
            },
            [n.Flare]: {
                exchanges: [{
                    slug: "dex43d79a",
                    isDefault: !0,
                    name: "Pangolin",
                    logo: "/resources/exchanges/pangolin.png",
                    chainId: n.Flare,
                    urlInfo: "https://app.pangolin.exchange/#/dashboard",
                    urlSwap: "https://app.pangolin.exchange/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xff1b852a0582bf87e69fad114560595fc5cf1212",
                    backgroundColor: "#ffc800",
                    textColor: "#000000"
                }]
            },
            [n.Pom]: {
                exchanges: [{
                    slug: "dex93caee",
                    isDefault: !0,
                    name: "POMSwap",
                    logo: "/resources/chains/med/pom.png",
                    chainId: n.Pom,
                    urlInfo: "https://www.pomswap.org/#/swap",
                    urlSwap: "https://www.pomswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x0282a441addc2c6a0d1d0cd74469338be405b658",
                    backgroundColor: "#1e1b57",
                    textColor: "#ffffff"
                }]
            },
            [n.Ultron]: {
                exchanges: [{
                    slug: "dexcf00b7",
                    isDefault: !0,
                    name: "UltronSwap",
                    logo: "/resources/chains/med/ultron.png",
                    chainId: n.Ultron,
                    urlInfo: "https://ultronswap.com/swap",
                    urlSwap: "https://ultronswap.com/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x938ba76720683be80c1d3deffa27b9153e48c5e9",
                    backgroundColor: "#150b42",
                    textColor: "#ffffff"
                }]
            },
            [n.Energi]: {
                exchanges: [{
                    slug: "dexf594e4",
                    isDefault: !0,
                    name: "EnergiSwap",
                    logo: "/resources/chains/med/energi.png",
                    chainId: n.Energi,
                    urlInfo: "https://app.energiswap.exchange/",
                    urlSwap: "https://app.energiswap.exchange/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x486b881f845532454ee1c4b695a1da9ae7e97c09",
                    backgroundColor: "#00e676",
                    textColor: "#000000"
                }]
            },
            [n.Exosama]: {
                exchanges: [{
                    slug: "dex96d271",
                    isDefault: !0,
                    name: "Khaos",
                    logo: "/resources/chains/med/khaos.png",
                    chainId: n.Pom,
                    urlInfo: "https://khaos.exchange/",
                    urlSwap: "https://khaos.exchange/",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x7f46ed28ca9f47a3f63dc52fb2300d171d8eb9a0",
                    backgroundColor: "#171923",
                    textColor: "#ffffff"
                }]
            },
            [n.CoreDao]: {
                exchanges: [{
                    slug: "dexa4d47c",
                    isDefault: !0,
                    name: "Icecreamswap",
                    logo: "/resources/chains/med/icecreamswap.png",
                    chainId: n.CoreDao,
                    urlInfo: "https://icecreamswap.com/?chainId=1116",
                    urlSwap: "https://icecreamswap.com/swap?chainId=1116",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x5ebae3a840ff34b107d637c8ed07c3d1d2017178",
                    backgroundColor: "#F8567F",
                    textColor: "#ffffff"
                }]
            },
            [n.EthereumGoerli]: {
                exchanges: [{
                    slug: "dex84e28e",
                    isDefault: !0,
                    name: "Uniswap",
                    logo: "/resources/exchanges/uniswap.png",
                    chainId: n.EthereumGoerli,
                    urlInfo: "https://uniswap.org/",
                    urlSwap: "https://app.uniswap.org/#/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0x00b64e468d2c705a0907f58505536a6c8c49ab26",
                    backgroundColor: "#ff2d79",
                    textColor: "#fff"
                }]
            },
            [n.Filecoin]: {
                exchanges: [{
                    slug: "abcdf",
                    isDefault: !0,
                    name: p,
                    logo: "/resources/exchanges/unknown.png",
                    chainId: n.Filecoin,
                    urlInfo: "#",
                    urlSwap: "#",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xdfaab828f5f515e104baaba4d8d554da9096f0e4",
                    backgroundColor: "#111111",
                    textColor: "#ffffff"
                }]
            },
            [n.Zksync]: {
                exchanges: [{
                    slug: "dex60627d",
                    isDefault: !0,
                    name: "Mute",
                    logo: "/resources/exchanges/muteio.png",
                    chainId: n.Zksync,
                    urlInfo: "https://mute.io/",
                    urlSwap: "https://app.mute.io",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xe939c9eda1df1555d0ae2230d85184e71b337743",
                    backgroundColor: "#142028",
                    textColor: "#ffffff"
                }]
            },
            [n.Polygonzkevm]: {
                exchanges: [{
                    slug: "dexc43b57",
                    isDefault: !0,
                    name: "Quickswap",
                    logo: "/resources/exchanges/quickswap.png",
                    chainId: n.Polygonzkevm,
                    urlInfo: "https://info.quickswap.exchange/",
                    urlSwap: "https://quickswap.exchange/#/",
                    version: "v3",
                    urlUnicrypt: "#",
                    pairDefault: "0xc44ad482f24fd750caeba387d2726d8653f8c4bb",
                    backgroundColor: "#8141f2",
                    textColor: "#ffffff"
                }]
            },
            [n.Pulse]: {
                exchanges: [{
                    slug: "dexeba10d",
                    isDefault: !0,
                    name: "",
                    logo: "/resources/exchanges/pulsex.png",
                    chainId: n.Pulse,
                    urlInfo: "https://pulsex.com/",
                    urlSwap: "https://app.pulsex.com/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xe56043671df55de5cdf8459710433c10324de0ae",
                    backgroundColor: "#0e8e4b",
                    textColor: "#ffffff"
                }]
            },
            [n.Klaytn]: {
                exchanges: [{
                    slug: "dex9e7654",
                    isDefault: !0,
                    name: "klayswap",
                    logo: "/resources/exchanges/klayswap.png",
                    chainId: n.Klaytn,
                    urlInfo: "https://klayswap.com/",
                    urlSwap: "https://klayswap.com/exchange/swap",
                    version: null,
                    urlUnicrypt: "#",
                    pairDefault: "0xd83f1b074d81869eff2c46c530d7308ffec18036",
                    backgroundColor: "#ff2f00",
                    textColor: "#ffffff"
                }]
            }
        }
          , Ws = ["dex091865", ""]
          , Ys = {
            [n.Ethereum]: "ETH",
            [n.Optimism]: "Optimism",
            [n.Cronos]: "Cronos",
            [n.Binance]: "BNB",
            [n.Okc]: "OEC",
            [n.Gnosis]: "Gnosis",
            [n.Heco]: "Heco",
            [n.Polygon]: "Matic",
            [n.Fantom]: "Fantom",
            [n.Kucoin]: "KCC",
            [n.Zksync]: "Zksync",
            [n.CoreDao]: "Coredao",
            [n.Moonriver]: "Moonriver",
            [n.Doge]: "Dogechain",
            [n.Milkomeda]: "Milkomeda",
            [n.Smartbch]: "Smartbch",
            [n.Bitgert]: "Bitgert",
            [n.Arbitrum]: "Arbitrum",
            [n.Celo]: "Celo",
            [n.Avalanche]: "Avalanche",
            [n.Harmony]: "Harmony"
        }
          , zs = {
            [n.Ethereum]: "ETH",
            [n.Binance]: "BSC",
            [n.Polygon]: "Matic",
            [n.Avalanche]: "AVAX",
            [n.Fantom]: "FTM",
            [n.Doge]: "Doge",
            [n.Cronos]: "Cronos",
            [n.Arbitrum]: "Arbitrum",
            [n.Aptos]: "Alvey"
        }
          , Gs = {
            [n.Ethereum]: F.ETHEREUM.id.toString(),
            [n.Optimism]: F.Optimism.id.toString(),
            [n.Cronos]: F.CRONOS.id.toString(),
            [n.Binance]: F.BINANCE.id.toString(),
            [n.Okc]: F.Okc.id.toString(),
            [n.Polygon]: F.POLYGON.id.toString(),
            [n.Fantom]: F.FANTOM.id.toString(),
            [n.Kucoin]: F.Kucoin.id.toString(),
            [n.Doge]: F.Doge.id.toString(),
            [n.Evmos]: F.Evmos.id.toString(),
            [n.Arbitrum]: F.Arbitrum.id.toString(),
            [n.Avalanche]: F.AVALANCHE.id.toString()
        }
          , Ks = {
            [n.Ethereum]: "ETH",
            [n.EthereumGoerli]: "Goerli",
            [n.Binance]: "BNB",
            [n.Polygon]: "Polygon",
            [n.Arbitrum]: "Arbitrum",
            [n.Avalanche]: "Avalanche"
        }
          , Js = {
            [n.Ethereum]: "ETH",
            [n.Binance]: "BNB",
            [n.Cronos]: "Cronos",
            [n.Etc]: "ETC",
            [n.Velas]: "Velas",
            [n.Heco]: "Heco",
            [n.Polygon]: "Polygon",
            [n.Fantom]: "Fantom",
            [n.Kava]: "Kava",
            [n.Avalanche]: "Avalanche"
        }
          , qs = {
            [n.Ethereum]: F.ETHEREUM.id,
            [n.Binance]: F.BINANCE.id,
            [n.Cronos]: F.CRONOS.id,
            [n.Telos]: F.Telos.id,
            [n.Meter]: F.Meter.id,
            [n.Polygon]: F.POLYGON.id,
            [n.Fantom]: F.FANTOM.id,
            [n.Doge]: F.Doge.id,
            [n.Alvey]: F.Alv.id,
            [n.Muu]: F.Muu.id,
            [n.Bitgert]: F.Bitgert.id,
            [n.Arbitrum]: F.Arbitrum.id
        }
          , Qs = {
            [n.Ethereum]: "eth",
            [n.Binance]: "bsc",
            [n.Avalanche]: "avax",
            [n.Fantom]: "ftm",
            [n.Cronos]: "cro",
            [n.Arbitrum]: "arbi",
            [n.Polygon]: "poly"
        }
          , Va = {
            ETH: "9aa3d95b3bc440fa88ea12eaa4456161",
            POLYGON: "34d8dfc0582a4ed2942bde94f39a0a1e"
        };
        var J = m(94650)
          , Te = m(53763)
          , Lt = m(97582)
          , U = m(52413);
        const la = 42
          , js = 44
          , Xs = 820
          , ec = 62
          , Zt = Object.values(n)
          , za = (new RegExp(`${["all", ...U.lM.convertEnumToArray(n)].join("|")}`),
        [n.Ethereum, n.Binance, n.Arbitrum, n.Polygon, n.Aptos, n.Solana, n.Fantom, n.Avalanche, n.Cronos, n.Multiversx, n.Okc, n.EthereumGoerli, n.Pulse, n.Heco, n.Velas, n.Aurora, n.Harmony, n.Moonbeam, n.Oasis, n.Kucoin, n.Astar, n.Celo, n.Moonriver, n.Optimism, n.Iotex, n.Klaytn, n.Fuse, n.Telos, n.Milkomeda, n.Dfk, n.Evmos, n.Etc, n.Bitgert, n.Arbitrumnova, n.Redlight, n.Canto, n.Echelon, n.Kardiachain, n.Tomb, n.Conflux, n.Smartbch, n.Shiden, n.Boba, n.Elastos, n.Wan, n.Rsk, n.Gnosis, n.Nova, n.Cube, n.Syscoin, n.Ronin, n.Fusion, n.Kava, n.Hoo, n.Tomo, n.Thundercore, n.Meter, n.Kek, n.Ethf, n.Sx, n.Muu, n.Shib, n.Alvey, n.Doge, n.Flare, n.Pom, n.Ultron, n.Energi, n.Exosama, n.CoreDao, n.Ethw, n.Filecoin, n.Zksync, n.Polygonzkevm, n.Metis])
          , Ma = "elrond"
          , da = ["bsc", Ma, "oec"];
        class z {
            static getChainData(u) {
                return z.allChains.find(t=>t.chain === u)
            }
            static getChainPrefix(u) {
                return z.allChains.find(t=>t.chain === u)?.chainPrefix ?? ""
            }
            static getChainName(u) {
                return z.allChains.find(t=>t.chain === u)?.chainName ?? ""
            }
            static getDefaultPairByChain(u) {
                return z.allChains.find(t=>t.chain === u)?.defaultPair ?? ""
            }
            static getScannerDataByChain(u) {
                return z.allChains.find(t=>t.chain === u).scanner
            }
            static getTokenLogoUrlFromChainTokenRepo(u, t, a) {
                const r = t.toLowerCase();
                if ("pancakeswap" === r)
                    return `https://pancakeswap.finance/images/tokens/${a}.png`;
                if ("sushiswap" === r || "uniswap" === r) {
                    const i = "sushiswap" === r || "sushi" === r ? "sushiswap" : "Uniswap";
                    let f;
                    switch (u) {
                    case n.Ethereum:
                        f = "ethereum";
                        break;
                    case n.Binance:
                        f = "smartchain";
                        break;
                    case n.Avalanche:
                        f = "uniswap" === r ? "avalanchec" : "avalanche";
                        break;
                    default:
                        f = u
                    }
                    return `https://raw.githubusercontent.com/${i}/assets/master/blockchains/${f}/assets/${a}/logo.png`
                }
                return `${z.getChainData(u).trustWalletAssetsRepoUrl}${a}/logo.png`
            }
            static isValidChain(u) {
                return -1 !== Object.values(n).indexOf(u)
            }
            static isChainSymbol(u, t) {
                return !!t && Us[u].indexOf(t.toUpperCase()) > -1
            }
            static getChainSymbol(u) {
                return Is[u]
            }
            static getChainWrapperSymbol(u) {
                return Ds[u]
            }
            static isStableSymbol(u, t) {
                return !!t && Rs[u].indexOf(t.toUpperCase()) > -1
            }
            static getRefTokenSymbol(u) {
                return Ns[u]
            }
            static getPairAddressFormatByChain(u, t) {
                return z.isEVMChain(t) ? u.toLowerCase() : u
            }
            static getMakerFormatByChain(u, t) {
                return z.isEVMChain(t) ? u.toLowerCase() : u
            }
            static replaceLegacyChain(u) {
                switch (u) {
                case "bsc":
                    return n.Binance;
                case "oec":
                    return n.Okc;
                case Ma:
                    return n.Multiversx;
                default:
                    return u
                }
            }
            static getLegacyChain(u) {
                switch (u) {
                case n.Binance:
                    return "bsc";
                case n.Okc:
                    return "oec";
                case n.Multiversx:
                    return Ma;
                default:
                    return u
                }
            }
            static isEVMChain(u) {
                return ![n.Solana, n.Aptos, n.Multiversx].includes(u)
            }
            static isCurveAvailableOnChain(u) {
                return [n.Ethereum, n.Avalanche, n.Fantom, n.Gnosis, n.Moonbeam, n.Optimism, n.Polygon, n.Arbitrum, n.Aurora, n.Celo, n.Kava].includes(u)
            }
            static isBalancerAvailableOnChain(u) {
                return [n.Ethereum, n.Polygon, n.Arbitrum, n.Gnosis].includes(u)
            }
        }
        z.allChains = Object.keys(F).map(g=>F[g]).sort((g,u)=>za.indexOf(g.chain) - za.indexOf(u.chain)),
        (0,
        Lt.__decorate)([(0,
        U.HP)()], z, "getChainData", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)()], z, "getScannerDataByChain", null);
        var va = m(62510);
        const Ga = "pancakeswap"
          , Ka = "quickswap";
        let Ja = (()=>{
            class g {
                constructor(t, a) {
                    this._router = t,
                    this._settingsService = a,
                    this.canActivate = (r,i)=>this.convertLegacyUrl(i.url) || !0
                }
                convertLegacyUrl(t) {
                    if (!t.match(`/(${Zt.join("|")})(.*)`)) {
                        const i = [...da, Ga, Ka, "uniswap", "sushiswap"]
                          , f = t.match(`/(${i.join("|")})(.*)`) || [];
                        let C = n.Ethereum;
                        const O = f[2] ?? "";
                        if (f.length > 0)
                            switch (f[1]) {
                            case Ga:
                                C = n.Binance;
                                break;
                            case Ka:
                                C = n.Polygon;
                                break;
                            default:
                                f[1].match(`${da.join("|")}`) && (C = z.replaceLegacyChain(f[1]))
                            }
                        return this._router.createUrlTree([`/${this._settingsService.language}/${C}${O}`])
                    }
                    return null
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(va.F0),J.LFG(Te.gb))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const oc = (g,u)=>{
            const t = (0,
            J.f3M)(Ja)
              , a = (0,
            J.f3M)(Te.Zn)
              , r = t.convertLegacyUrl(u.url);
            return r || (!!z.isValidChain(g.params.chain) || (a.navigate(""),
            !1))
        }
          , ac = (g,u)=>{
            const t = (0,
            J.f3M)(va.F0)
              , a = g.params.pair;
            if (a) {
                const r = U.lM.convertEnumToArray(n)
                  , i = u.url.match(r.join("|"))
                  , f = z.getChainData(i[0]).chainBaseToken;
                if (f && f.tokenAddress === a)
                    return t.createUrlTree([u.url.replace(a, f.wrappedTokenAddress)])
            }
            return !0
        }
          , rc = (g,u)=>{
            const t = (0,
            J.f3M)(va.F0);
            if (g.params.pair)
                return !0;
            const i = z.getChainData(g.params.chainOrExchange).defaultPair;
            return t.createUrlTree([`${u.url}/${i}`])
        }
          , qa = new J.OlP("ChartConfig");
        var et = (()=>{
            return (g = et || (et = {})).SELL = "sell",
            g.BUY = "buy",
            g.BURN = "burn",
            g.MINT = "mint",
            et;
            var g
        }
        )();
        const yo = "main-list";
        var tt = (()=>{
            return (g = tt || (tt = {})).Update = "update",
            g.Price = "price",
            g.Name = "name",
            g.Change = "% change",
            g.ChangeReverse = "% change loss",
            g.Updated = "updated",
            g.Win24 = "win24",
            g.Loss24 = "loss24",
            tt;
            var g
        }
        )()
          , Bo = (()=>{
            return (g = Bo || (Bo = {})).pairList = "pairs",
            g.gainers = "gainers",
            g.losers = "losers",
            g.socials = "socials",
            g.exchanges = "exchanges",
            Bo;
            var g
        }
        )()
          , ua = (()=>{
            return (g = ua || (ua = {})).pairList = "pairs",
            g.gainers = "gainers",
            g.losers = "losers",
            g.socials = "socials-recently-updated",
            g.exchanges = "exchanges",
            ua;
            var g
        }
        )()
          , ra = (()=>{
            return (g = ra || (ra = {}))[g.SPONSORED_PAIR = 0] = "SPONSORED_PAIR",
            g[g.PAIR = 1] = "PAIR",
            ra;
            var g
        }
        )();
        let ic = (()=>{
            class g {
                transform(t) {
                    return z.getChainData(t).logoUrl
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "chainLogoUrl",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , sc = (()=>{
            class g {
                transform(t) {
                    return z.getChainName(t)
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "chainName",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )();
        var wn = m(77579)
          , cc = m(78372);
        const Qa = "lastExchangesCheck"
          , lc = 30 * U.VK;
        class te {
            static get chainExchangeList() {
                return this._chainExchangesList
            }
            static set chainExchangeList(u) {
                this._chainExchangesList = u,
                this.chainStats = te._getChainStats(u),
                this.fullExchangeList = te._getFullExchangeList(u),
                this._exchangesChanged$.next()
            }
            static get fullExchangeList() {
                return this._fullExchangeList
            }
            static set fullExchangeList(u) {
                this._fullExchangeList = u
            }
            static set chainStats(u) {
                te._chainStats = u,
                te._chainStatsUpdated$.next(Object.keys(u))
            }
            static get chainStats() {
                return te._chainStats
            }
            static getGenericExchangeApi(u) {
                if (null == u)
                    return Q;
                switch (u) {
                case xe:
                case H:
                    return H;
                case Q:
                case "univ3":
                    return Q;
                default:
                    return u
                }
            }
            static getExchangeNameFromExchangeApi(u=Q, t) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.slug === u)?.name ?? p
            }
            static getDefaultPairByExchange(u, t) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.name.toLowerCase() === u.toLowerCase())?.pairDefault ?? ""
            }
            static getExchangeVersion(u, t) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.slug === u)?.version ?? ""
            }
            static getChainByExchangeApi(u) {
                return Zt.find(t=>!!(te.chainExchangeList[t] ?? []).find(a=>a.slug === u) && t) ?? n.Ethereum
            }
            static getExchangeSwapUrl(u, t, a="", r=null, i=et.SELL) {
                const f = "v1" === a ? "" : a.toLowerCase()
                  , C = (te.chainExchangeList[u] ?? []).find(W=>W.name.toLowerCase() === t.toLowerCase() && (!W.version || W.version && W.version === f))?.urlSwap ?? "#";
                if (null == r || "#" === C)
                    return C;
                let O;
                try {
                    O = new URL(C).search.length > 0
                } catch {
                    console.warn(`Could not parse swap url for ${t}. Please verify url: ${C}`),
                    O = !1
                }
                const $ = O ? "&" : "?";
                return i === et.BUY ? t.toLowerCase() === Oe.toLowerCase() && u === n.Aptos ? `${C}${$}to=${r}` : `${C}${$}outputCurrency=${r}` : i === et.SELL ? t.toLowerCase() === Oe.toLowerCase() && u === n.Aptos ? `${C}${$}from=${r}` : `${C}${$}inputCurrency=${r}` : C
            }
            static getExchangeInfoUrl(u, t) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.slug === u)?.urlInfo ?? "#"
            }
            static getExchangeUnicryptUrl(u, t) {
                const a = (te.chainExchangeList[t] ?? []).find(r=>r.slug === u)?.urlUnicrypt;
                return a && "" !== a ? a : null
            }
            static getDefaultExchange(u) {
                return (te.chainExchangeList[u ?? n.Ethereum] ?? []).find(t=>!0 === t.isDefault)?.name ?? Y
            }
            static getExchangeLogoUrl(u, t) {
                const a = (te.chainExchangeList[t] ?? []).find(r=>(r.name.toLowerCase() === u.toLowerCase() || r.slug === u) && r);
                return a ? `${N}${a.logo}` : `${Le}`
            }
            static valueIsExchangeApi(u, t) {
                return !!(te.chainExchangeList[t] ?? []).find(a=>a.slug === u)
            }
            static valueIsExchange(u, t) {
                return !!(te.chainExchangeList[t] ?? []).find(a=>a.name === u)
            }
            static getExchangeNameWithoutVersion(u) {
                return u.replace(/\s(.*)(v\d+)$/, "")
            }
            static isExchangeSpecificVersion(u, t=n.Ethereum) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.slug === u && !!a.version)?.version ?? null
            }
            static getExchangeBackgroundColor(u, t=n.Ethereum) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.name.toLowerCase() === u.toLowerCase() || a.slug === u)?.backgroundColor ?? "#818ea3"
            }
            static getExchangeTextColor(u, t=n.Ethereum) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.name.toLowerCase() === u.toLowerCase() || a.slug === u)?.textColor ?? "#fff"
            }
            static getExchangeApiFromExchange(u, t=n.Ethereum) {
                return (te.chainExchangeList[t] ?? []).find(a=>u.toLowerCase() === a.name.toLowerCase())?.slug ?? "unknown-slug"
            }
            static hasExchangePoolRatios(u, t=n.Ethereum) {
                return (te.chainExchangeList[t] ?? []).find(a=>u === a.slug)?.hasPoolRatios ?? !1
            }
            static hasExchangeFeePercentagePools(u, t, a) {
                return (te.chainExchangeList[a] ?? []).find(r=>!(r.name.toLowerCase() !== u.toLowerCase() && r.slug !== u || (!t || r.version !== t) && t) && r)?.hasFeePercentagePools ?? !1
            }
            static getExchangeLimitBotSupported(u, t=n.Ethereum) {
                return (te.chainExchangeList[t] ?? []).find(a=>a.name.toLowerCase() === u.toLowerCase())?.limitBotSupported ?? !1
            }
            static isExchangeInChain(u, t=n.Ethereum) {
                return !!(te.chainExchangeList[t] ?? []).find(a=>a.slug === u)
            }
            static getExchangesFromChain(u=n.Ethereum) {
                return te.chainExchangeList[u ?? n.Ethereum]?.filter(t=>t.name !== p) ?? []
            }
            static getLogoStyle(u, t=n.Ethereum) {
                const a = u.toLowerCase()
                  , r = (te.chainExchangeList[t] ?? []).find(i=>i.slug === u || i.name.toLowerCase() === a)?.logoStyles;
                return r ? r.replace(/[{}]/g, "") : ""
            }
            static get isExchangeListExpired() {
                const u = U._Z.getDate(Qa);
                return !u || Date.now() - lc > u.getTime()
            }
            static updateExchangesCheckDate() {
                U._Z.setDate(Qa)
            }
            static _getChainStats(u) {
                const t = {};
                return z.allChains.map(a=>a.chain).forEach(a=>{
                    (u[a] ?? []).forEach(r=>{
                        t[a] || (t[a] = {
                            exchanges: []
                        });
                        const i = r.version ? te.getExchangeNameWithoutVersion(r.name) : r.name
                          , f = {
                            name: i,
                            logo: `${N}${r.logo}`,
                            versions: r.version && -1 !== [n.Ethereum, n.Ethw, n.Binance, n.Ethf].indexOf(a) ? [{
                                name: r.version,
                                selected: !0
                            }] : [],
                            exchange: r.slug
                        };
                        if (!t[a].exchanges.length || !r.version && t[a].exchanges.length)
                            t[a].exchanges.push(f);
                        else {
                            const C = t[a].exchanges.findIndex(O=>O.name?.toLowerCase() === i.toLowerCase());
                            -1 === C ? t[a].exchanges.push(f) : (r.isDefault && (t[a].exchanges[C].exchange = r.slug),
                            t[a].exchanges[C].versions.push({
                                name: r.version,
                                selected: !0
                            }))
                        }
                    }
                    )
                }
                ),
                t
            }
            static _getFullExchangeList(u) {
                let t = [];
                return Object.keys(u).forEach(a=>{
                    t = [...t, ...u[a] ?? []]
                }
                ),
                t
            }
            static isCurveAddress(u) {
                return /^(0x)[\dA-Fa-f]{40}(?:-\d{1,2}){2}u?$/.test(u)
            }
            static isBalancerAddress(u) {
                return /^(?:0x[\dA-Fa-f]{40}-){2}0x[\dA-Fa-f]{40}$/.test(u)
            }
        }
        te._exchangesChanged$ = new wn.x,
        te.exchangesChanged$ = te._exchangesChanged$.asObservable().pipe((0,
        cc.b)(500)),
        te._exchangesAdded$ = new wn.x,
        te.exchangesAdded$ = te._exchangesAdded$.asObservable(),
        te._chainStatsUpdated$ = new wn.x,
        te.chainStatsUpdated$ = te._chainStatsUpdated$.asObservable(),
        te._chainStats = {},
        te._chainExchangesList = {},
        te._fullExchangeList = [],
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "getExchangeNameFromExchangeApi", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "getExchangeVersion", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "getExchangeLogoUrl", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "valueIsExchangeApi", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "valueIsExchange", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "getExchangeBackgroundColor", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "getExchangeTextColor", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            clearSignal: te.exchangesChanged$
        })], te, "getExchangesFromChain", null),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`,
            clearSignal: te.exchangesChanged$
        })], te, "getLogoStyle", null);
        let dc = (()=>{
            class g {
                transform(t, a) {
                    return te.valueIsExchangeApi(t, a) || te.valueIsExchange(t, a) ? te.getExchangeLogoUrl(t, a) : `${Le}`
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "exchangeLogoUrl",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , uc = (()=>{
            class g {
                transform(t, a) {
                    return te.getExchangeNameFromExchangeApi(t, a)
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "exchangeName",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , hc = (()=>{
            class g {
                transform(t, a, r) {
                    if (t) {
                        const i = te.getExchangeBackgroundColor(t, a);
                        return r ? U.lM.hexToRGB(i, r) : i
                    }
                    return ""
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "exchangeBackgroundColor",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , gc = (()=>{
            class g {
                transform(t, a) {
                    return t ? te.getLogoStyle(t, a) : ""
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "exchangeLogoStyles",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , pc = (()=>{
            class g {
                transform(t, a) {
                    return t ? te.getExchangeTextColor(t, a) : ""
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "exchangeTextColor",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , mc = (()=>{
            class g {
                transform(t, a) {
                    return te.getExchangeVersion(t, a)
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "exchangeVersion",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , fc = (()=>{
            class g {
                transform(t) {
                    return z.getScannerDataByChain(t).logoUrl
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "scannerLogoUrl",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , _c = (()=>{
            class g {
                transform(t, a) {
                    const r = z.getScannerDataByChain(t);
                    return -1 !== [n.Telos, n.Harmony, n.Astar, n.Okc, n.Evmos, n.Echelon, n.Thundercore, n.Meter, n.Ultron, n.Filecoin, n.Zksync].indexOf(t) ? `${r.url}/address/${a}` : t === n.Velas || t === n.Multiversx ? `${r.url}/tokens/${a}` : t === n.Aptos ? `${r.url}/account/${a}` : `${r.url}/token/${a}`
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "scannerTokenUrl",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , Cc = (()=>{
            class g {
                transform(t, a) {
                    const r = z.getScannerDataByChain(t);
                    return t === n.Aptos ? `${r.url}/txn/${a}` : t === n.Multiversx ? `${r.url}/transactions/${a}` : `${r.url}/tx/${a}`
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "scannerTransactionUrl",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )()
          , bc = (()=>{
            class g {
                transform(t, a) {
                    const r = z.getScannerDataByChain(t);
                    return t === n.Aptos ? `${r.url}/account/${a}` : `${r.url}/address/${a}`
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "scannerWalletUrl",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )();
        const ja = "https://www.dextools.io/resources/tokens/logos/";
        class lt {
            static filterPairsWithValidSymbol(u, t) {
                return t.filter(a=>!!(z.isChainSymbol(u, a.symbol) || z.isStableSymbol(u, a.symbol) || z.isChainSymbol(u, a.symbolRef) || z.isStableSymbol(u, a.symbolRef)) && a)
            }
            static isStableNativePair(u) {
                return "stable-native-pair" === u
            }
            static normalizeLogoUrl(u) {
                return u.includes("https://") || u.includes("http://") ? u : ja + u
            }
            static normalizeAptosTokenId(u) {
                return u.split(":", 1).pop() ?? ""
            }
            static get24hVariation(u, t) {
                return u && t ? 100 * (u / t - 1) : 0
            }
            static getPublicAddress(u, t) {
                return z.isEVMChain(t) ? u.slice(0, la) : u
            }
            static checkIsCurveAddress(u, t) {
                return z.isCurveAvailableOnChain(t) && te.isCurveAddress(u) && !U.LC.REGEX_SAFE_STRING.test(u)
            }
            static checkIsBalancerAddress(u, t) {
                return z.isBalancerAvailableOnChain(t) && te.isBalancerAddress(u) && !U.LC.REGEX_SAFE_STRING.test(u)
            }
            static checkIsEVMAddress(u, t) {
                return z.isEVMChain(t) && !this.checkIsCurveAddress(u, t) && !this.checkIsBalancerAddress(u, t)
            }
            static getEVMPairAddressAndFragmentByURL(u, t) {
                let a = u.slice(0, 47).toLowerCase();
                return this.checkIsCurveAddress(a, t) ? {
                    pair: a,
                    fragment: u.slice(48) || null
                } : (a = u.slice(0, 128).toLowerCase(),
                this.checkIsBalancerAddress(a, t) ? {
                    pair: a,
                    fragment: u.slice(129) || null
                } : {
                    pair: u.slice(0, la),
                    fragment: u.slice(la + 1) || null
                })
            }
        }
        const Sc = /^[\d\s./:<>A-Za-z\-_]*$/;
        let Mc = (()=>{
            class g {
                transform(t, a) {
                    return t ? lt.getPublicAddress(t, a) : ""
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275pipe = J.Yjl({
                name: "publicAddress",
                type: g,
                pure: !0,
                standalone: !0
            }),
            g
        }
        )();
        var it = m(15861)
          , Qe = m(61135);
        const Pa = ["1", "15", "1440"]
          , Pt = 1.23;
        let wo = (()=>{
            class g {
                static processCandles(t, a, r, i) {
                    const f = t
                      , C = a || f[0].time;
                    let O = r || f[f.length - 1].time;
                    return O = Math.min(O, f[f.length - 1].time),
                    g.sliceArray(f, U.k3.roundToMinuteRange(C, i), U.k3.roundToMinuteRange(O, i, !0))
                }
                static sliceArray(t, a, r) {
                    const i = U.gS.binarySearch(t, a, "time")
                      , f = a === r ? i : U.gS.binarySearch(t, r, "time");
                    return 0 === i && 0 === f && t[0].time > r ? [] : i === f ? [t[i]] : t.slice(i, f + 1)
                }
                static normalizeCandles(t) {
                    if (t.length <= 1)
                        return t;
                    const a = t.slice(1);
                    for (const [r,i] of a.entries())
                        i.open = t[r].close;
                    return t
                }
                static normalizeExtremes(t, a="upper-extremes-only") {
                    if (t.length <= 1)
                        return t;
                    for (const [r,i] of [...t].entries()) {
                        const f = t[0 === r ? r + 4 : r - 1]
                          , C = t[r + 4];
                        f && C && ("lower-extremes-only" !== a && i.close > f.high * Pt && i.close > C.high * Pt && C.close < f.high * Pt && (0 === r && (i.open = C.open),
                        i.close = i.open,
                        i.low = Math.min(i.low, i.close),
                        t[r + 1].open = i.close),
                        "upper-extremes-only" !== a && i.close < f.low / Pt && i.close < C.low / Pt && C.close > f.low / Pt && (i.close = i.open,
                        i.high = Math.max(i.high, i.close),
                        t[r + 1].open = i.close),
                        i.low < i.open / Pt && i.low < i.close / Pt ? i.low = Math.min(i.close / Pt, i.open / Pt) : i.low > i.close && (i.low = Math.min(i.low, Math.min(i.close, i.open))),
                        i.high > i.open * Pt && i.high > i.close * Pt ? i.high = Math.max(i.close * Pt, i.open * Pt) : i.high < i.close && (i.high = Math.max(i.high, Math.max(i.close, i.open))))
                    }
                    return t
                }
                static mergeCandles(t, a) {
                    if (0 === t.length || 0 === a.length)
                        return !t.length && a.length && U.gS.concatLargeArray(t, a, "time"),
                        {
                            affectedCandles: a,
                            allCandles: t
                        };
                    const r = a
                      , f = t[t.length - 1].time
                      , C = a[0].time
                      , O = a[a.length - 1].time;
                    if (O >= f || C <= f && !(O < t[0].time)) {
                        const W = []
                          , ae = U.gS.binarySearch(t, C, "time")
                          , q = U.gS.binarySearch(t, O, "time")
                          , Se = t.splice(ae, q - ae + 1)
                          , Re = g.overwriteCandles(Se, a);
                        return 0 === Se.length || 0 === Re.length || Re.length && Re[Re.length - 1].time > Se[Se.length - 1].time ? (U.gS.concatLargeArray(W, Se, "time"),
                        U.gS.concatLargeArray(W, Re, "time")) : (U.gS.concatLargeArray(W, Re, "time"),
                        U.gS.concatLargeArray(W, Se, "time")),
                        U.gS.concatLargeArray(t, W, "time"),
                        {
                            affectedCandles: W,
                            allCandles: t
                        }
                    }
                    return U.gS.concatLargeArray(t, r, "time"),
                    {
                        affectedCandles: r,
                        allCandles: t
                    }
                }
                static overwriteCandles(t, a) {
                    const r = a.slice(0);
                    return t.forEach(i=>{
                        const f = U.gS.binarySearch(r, i.time, "time")
                          , C = r[f];
                        C && C.time === i.time && (i.volume = C.volume,
                        i.high = C.high,
                        i.low = C.low,
                        i.close = C.close,
                        r.splice(f, 1))
                    }
                    ),
                    r
                }
                static getDefaultDaysAgo(t) {
                    return +t <= 5 ? 1 : +t <= 15 ? 2 : +t <= 30 ? 3 : 5
                }
                static fillGapsMissingCandles(t, a) {
                    if (!t || !t.length)
                        return [];
                    const r = [];
                    let i = 0;
                    for (; i < t.length - 1; i++) {
                        r.push(t[i]);
                        let f = t[i].time + +a * U.VK;
                        for (; f < t[i + 1].time; )
                            r.push({
                                time: f,
                                open: t[i].close,
                                high: t[i].close,
                                low: t[i].close,
                                close: t[i].close,
                                volume: 0
                            }),
                            f += +a * U.VK
                    }
                    return r.push(t[i]),
                    r
                }
            }
            return g.supportedResolutions = ["1", "5", "15", "30", "60", "120", "240", "720", "1440", "4320", "10080", "43200"],
            g.supportedTokenRefs = ["usd", "eth"],
            g
        }
        )();
        const Pc = L.toLowerCase();
        class xc {
            constructor(u, t, a) {
                this._candles = new Map,
                this._oldestTsInChart = new Map,
                this._oldestTsRequestedToApi = new Map,
                this.chain = u,
                this.id = t,
                this.symbol = a,
                this._currentResolution = "30",
                this._chartTokenRef = Pc,
                Pa.forEach(r=>this._candles.set(r, {
                    usd: [],
                    eth: []
                })),
                this.maxMinPrices = {
                    eth: {
                        max: null,
                        min: null
                    },
                    usd: {
                        max: null,
                        min: null
                    }
                },
                this.maxMinPrices$ = new Qe.X(this.maxMinPrices)
            }
            get resolution() {
                return this._currentResolution
            }
            setResolution(u) {
                u !== this._currentResolution && (this._currentResolution = u)
            }
            get chartTokenRef() {
                return this._chartTokenRef
            }
            setChartTokenRef(u) {
                this._chartTokenRef = u,
                this._recalculateStats(),
                this.maxMinPrices$.next(this.maxMinPrices)
            }
            get historyVersion() {
                return this._historyVersion
            }
            setHistoryVersion(u) {
                this._historyVersion = u
            }
            get oldestTsInApi() {
                return this._oldestTsInApi
            }
            setOldestTsInApi(u) {
                this._oldestTsInApi = null != u ? +u : void 0
            }
            getOldestTsRequestedToApi(u) {
                return this._oldestTsRequestedToApi.get(`${this.chartTokenRef}-${u}`)
            }
            setOldestTsRequestedToApi(u, t) {
                this._oldestTsRequestedToApi.set(`${this.chartTokenRef}-${u}`, t)
            }
            getOldestTsInChart(u) {
                return this._oldestTsInChart.get(`${this.chartTokenRef}-${u}`)
            }
            setOldestTsInChart(u, t) {
                this._oldestTsInChart.set(`${this.chartTokenRef}-${u}`, t)
            }
            setAllCandles(u, t, a) {
                this._candles.get(t)[a] = u
            }
            updateWithLiveSwaps(u, t, a=null) {
                var r = this;
                return (0,
                it.Z)(function*() {
                    if (!u.length)
                        return;
                    const i = r.getImmediateSupportedResolution(r._currentResolution)
                      , f = r._candles.get(i)[r._chartTokenRef]
                      , C = JSON.parse(JSON.stringify(u));
                    C.forEach(q=>q.timestamp = U.k3.roundToMinuteRange(1e3 * q.timestamp, i));
                    const O = C[C.length - 1].timestamp
                      , $ = C.filter(q=>q.timestamp === O);
                    if (f.length && f[f.length - 1].time > O)
                        return;
                    const W = z.isStableSymbol(r.chain, r.symbol)
                      , ae = $.reduce((q,Se)=>{
                        const Re = "usd" === r._chartTokenRef ? Se.price : Se.priceETH;
                        q[0].volume += Re * (W && "usd" === r._chartTokenRef ? Se.amountETH : Se.amountToken);
                        const Ye = q[0]
                          , dt = Re;
                        return Ye.high = Math.max(Ye.high || dt, dt),
                        Ye.low = Math.min(Ye.low || dt, dt),
                        Ye.close = dt,
                        Ye.open = Ye.open || dt,
                        q
                    }
                    , [{
                        time: O,
                        close: 0,
                        open: 0,
                        high: 0,
                        low: 0,
                        volume: 0
                    }]);
                    if (f.length && f[f.length - 1].time === O) {
                        const q = f[f.length - 1]
                          , Se = ae[0];
                        return q && Se && (q.high = Math.max(q.high, Se.high),
                        q.low = Math.min(q.low, Se.low),
                        q.close = Se.close,
                        q.volume += Se.volume),
                        r._recalculateStats(),
                        [{
                            ...q
                        }]
                    }
                    return f.length && f[f.length - 1].time < O ? yield r.addLiveCandles(ae, i, t, a) : void 0
                })()
            }
            addLiveCandles(u, t="1", a, r=null) {
                var i = this;
                return (0,
                it.Z)(function*() {
                    if (!u || !u.length)
                        return [];
                    const C = i._candles.get(t)[i.chartTokenRef].length - 1
                      , O = {
                        version: i._historyVersion,
                        symbol: i._chartTokenRef,
                        candles: u,
                        oldestTs: -1
                    };
                    yield i.addCandles(O, t, a, r);
                    const $ = JSON.parse(JSON.stringify(i._candles.get(t)[i.chartTokenRef].slice(C)));
                    return i.fillGapsMissingCandles($, t, r)
                })()
            }
            addCandles(u, t="1", a, r=null) {
                var i = this;
                return (0,
                it.Z)(function*() {
                    if (!u || !u.candles || !u.candles.length)
                        return;
                    const f = u.candles.filter(ae=>!(0 === ae.high || 0 === ae.open || 0 === ae.close))
                      , C = i._candles.get(t)[i._chartTokenRef]
                      , O = C.length
                      , $ = U.gS.binarySearch(C, f[0].time, "time");
                    let W;
                    if (null != r) {
                        const {affectedCandles: ae, allCandles: q} = yield r("mergeCandles", i, C, f);
                        W = ae,
                        i.setAllCandles(q, t, i._chartTokenRef)
                    } else
                        W = wo.mergeCandles(C, f).affectedCandles;
                    if (W.length > 0) {
                        const ae = U.gS.binarySearch(C, W[0].time, "time");
                        if (C.length && ae > 0 && O && (C[ae].open = C[ae - 1].close),
                        $ >= 0 && C.length) {
                            const q = Math.max(0, $ - 4)
                              , Se = Math.min(4, $);
                            W = C.slice(q, q + Se).concat(W)
                        }
                        if (null != r) {
                            W = yield r("normalizeCandles", i, W),
                            a && (W = yield r("normalizeExtremes", i, W));
                            const {affectedCandles: q, allCandles: Se} = yield r("mergeCandles", i, C, [...W]);
                            W = q,
                            i.setAllCandles(Se, t, i._chartTokenRef)
                        } else
                            W = wo.normalizeCandles(W),
                            a && (W = wo.normalizeExtremes(W));
                        i._recalculateStats(W)
                    }
                })()
            }
            getCandles(u, t, a=this._currentResolution, r=null) {
                var i = this;
                return (0,
                it.Z)(function*() {
                    i.setResolution(a);
                    const f = i._candles.get(a)[i._chartTokenRef];
                    if (0 === f.length)
                        return [];
                    const C = f[f.length - 1].time
                      , O = f[0].time;
                    u = u || O,
                    t = t || C;
                    const $ = U.k3.roundToMinuteRange(Math.min(C, u), a)
                      , W = U.k3.roundToMinuteRange(t, a, !0);
                    if (W < O)
                        return [];
                    const ae = i._candles.get(a)[i._chartTokenRef];
                    let q;
                    return q = null != r ? yield r("processCandles", i, ae, $, W, a) : wo.processCandles(ae, $, W, a),
                    JSON.parse(JSON.stringify(q))
                })()
            }
            fillGapsMissingCandles(u, t, a=null) {
                var r = this;
                return (0,
                it.Z)(function*() {
                    return null != a ? yield a("fillGapsMissingCandles", r, u, t) : wo.fillGapsMissingCandles(u, t)
                })()
            }
            normalizeCandles(u, t=null) {
                var a = this;
                return (0,
                it.Z)(function*() {
                    let r;
                    return r = null != t ? yield t("normalizeCandles", a, u) : wo.normalizeCandles(u),
                    r
                })()
            }
            sliceCandlesArray(u, t, a, r=null) {
                var i = this;
                return (0,
                it.Z)(function*() {
                    return null != r ? yield r("sliceArray", i, u, t, a) : wo.sliceArray(u, t, a)
                })()
            }
            _recalculateStats(u=this._candles.get(this.getImmediateSupportedResolution(this._currentResolution))[this._chartTokenRef]) {
                if (!u.length)
                    return;
                const t = u
                  , a = this.maxMinPrices[this._chartTokenRef];
                a.max = a.max || t[0].high,
                a.min = a.min || t[0].low,
                t.forEach(r=>{
                    a.max = r.high > a.max ? r.high : a.max,
                    a.min = r.low < a.min ? r.low : a.min
                }
                ),
                this.maxMinPrices$.next(this.maxMinPrices)
            }
            getOldestCandle(u="1") {
                return this._candles.get(u)[this._chartTokenRef].length > 0 ? this._candles.get(u)[this._chartTokenRef][0] : void 0
            }
            getFirstCandleStartingFrom(u, t=this._currentResolution) {
                const a = this._candles.get(t)[this._chartTokenRef];
                return a[U.gS.binarySearch(a, u, "time")]
            }
            getLastCandle() {
                const u = this._candles.get("1")[this._chartTokenRef];
                return u.length > 0 ? u[u.length - 1] : void 0
            }
            getImmediateSupportedResolution(u) {
                return [...Pa].reverse().find(t=>+t <= +u)
            }
        }
        class yc {
            constructor(u, t, a, r, i="15") {
                this._priceVariationResolutionMap = new Map,
                this._volumeVariationResolutionMap = new Map,
                this.variationsUpdated$ = new Qe.X(null),
                this._candlesVariation = u,
                this._candlesVariation.candles = [...this._candlesVariation.candles.sort((f,C)=>f.time - C.time)],
                this._variationTypeIntervalList = [...t],
                this._chain = a,
                this._symbol = r,
                this._resolution = i,
                this._updateVariations()
            }
            addSwaps(u) {
                const t = JSON.parse(JSON.stringify(u));
                t.forEach(C=>C.timestamp = U.k3.roundToMinuteRange(1e3 * C.timestamp, this._resolution));
                const a = t[t.length - 1].timestamp
                  , r = t.filter(C=>C.timestamp === a);
                if (this._candlesVariation.candles.length && this._candlesVariation.candles[this._candlesVariation.candles.length - 1].time > a)
                    return;
                const i = z.isStableSymbol(this._chain, this._symbol)
                  , f = r.reduce((C,O)=>{
                    const $ = "usd" === this._candlesVariation.symbol ? O.price : O.priceETH;
                    C[0].volume += $ * (i && "usd" === this._candlesVariation.symbol ? O.amountETH : O.amountToken);
                    const W = C[0]
                      , ae = $;
                    return W.high = Math.max(W.high || ae, ae),
                    W.low = Math.min(W.low || ae, ae),
                    W.close = ae,
                    W.open = W.open || ae,
                    C
                }
                , [{
                    time: a,
                    close: 0,
                    open: 0,
                    high: 0,
                    low: 0,
                    volume: 0
                }]);
                if (this._candlesVariation.candles.length && this._candlesVariation.candles[this._candlesVariation.candles.length - 1].time === a) {
                    const C = this._candlesVariation.candles[this._candlesVariation.candles.length - 1]
                      , O = f[0];
                    return C && O && (C.high = Math.max(C.high, O.high),
                    C.low = Math.min(C.low, O.low),
                    C.close = O.close,
                    C.volume += O.volume),
                    this._candlesVariation.candles[this._candlesVariation.candles.length - 1] = C,
                    this._updateVariations()
                }
                return this._candlesVariation.candles.length && this._candlesVariation.candles[this._candlesVariation.candles.length - 1].time < a ? (f.forEach(C=>{
                    this._candlesVariation.candles.push(C)
                }
                ),
                this._updateVariations()) : void 0
            }
            _updateVariations() {
                const u = Date.now();
                this._variationTypeIntervalList.forEach(t=>{
                    this._calculateVariation(u - +t.interval * U.VK, t.types, t.interval),
                    this.variationsUpdated$.next()
                }
                )
            }
            _calculateVariation(u, t, a) {
                if (this._candlesVariation.candles && this._candlesVariation.candles.length) {
                    const r = [...this._candlesVariation.candles]
                      , i = r[r.length - 1]
                      , f = r[0]
                      , C = U.gS.binarySearch(r, u, "time");
                    t.forEach(O=>{
                        switch (O) {
                        case "price":
                            ("10080" === a && f.time <= u || "1440" === a) && this._priceVariationResolutionMap.set(a, -1 === C ? 0 : U.lM.calculateVariationPrice(r[C].close, i.close));
                            break;
                        case "volume":
                            let $ = 0;
                            this._candlesVariation.candles.slice(C).forEach(W=>{
                                $ += W.volume
                            }
                            ),
                            this._volumeVariationResolutionMap.set(a, -1 === C ? 0 : $)
                        }
                    }
                    )
                }
                return 0
            }
            get priceVariation24h() {
                return this._priceVariationResolutionMap.get("1440") ?? 0
            }
            get priceVariation7Days() {
                return this._priceVariationResolutionMap.get("10080") ?? 0
            }
            get volumeVariation24h() {
                return this._volumeVariationResolutionMap.get("1440") ?? 0
            }
            get volumeVariation7days() {
                return this._volumeVariationResolutionMap.get("10080") ?? 0
            }
        }
        const er = "latestResolution";
        let Ac = (()=>{
            class g {
                get sendWorkerMessageFn() {
                    return this._worker ? this.sendWorkerMessage.bind(this) : null
                }
                constructor() {
                    this._workerResolves = new Map,
                    this._workerPending = new Map,
                    this._workerPendingId = 0,
                    this._cachedPairIds = [],
                    this._cachedCharts = new Map;
                    try {
                        this.updateResolution(U._Z.getString(er) || "15"),
                        this._worker = new Worker(m.tu(new URL(m.p + m.u(2208),m.b)),{
                            type: void 0
                        }),
                        this._setWorkerMessageHandler()
                    } catch (t) {
                        console.warn("Candles: could not create worker. Error: ", t),
                        this._worker = null
                    }
                }
                get latestResolution() {
                    return this._latestResolution
                }
                updateResolution(t) {
                    const a = t && t + "" != "null" ? t : "15";
                    U._Z.setString(er, a),
                    this._latestResolution = a
                }
                getCandlesData(t, a, r) {
                    this._currentChartId !== a && this._cachedCharts.clear(),
                    this._currentChartId = a;
                    let i = this._cachedCharts.get(a);
                    if (null == i) {
                        if (i = new xc(t,a,r),
                        this._cachedPairIds.length >= 10) {
                            const f = this._cachedPairIds.pop();
                            this._cachedCharts.delete(f)
                        }
                        this._cachedPairIds.unshift(a),
                        this._cachedCharts.set(a, i)
                    } else
                        this._cachedPairIds.splice(this._cachedPairIds.indexOf(a), 1),
                        this._cachedPairIds.unshift(a);
                    return i
                }
                clearCachedChartById(t) {
                    const a = this._cachedPairIds.filter(r=>r == t);
                    this._cachedCharts.delete(a[0])
                }
                clearAll() {
                    this._cachedCharts.clear(),
                    this._cachedPairIds.length = 0
                }
                getCandles(t, a, r, i) {
                    var f = this;
                    return (0,
                    it.Z)(function*() {
                        return t.getCandles(a, r, i, f.sendWorkerMessageFn)
                    })()
                }
                updateWithLiveSwaps(t, a, r=!0) {
                    var i = this;
                    return (0,
                    it.Z)(function*() {
                        return t.updateWithLiveSwaps(a, r, i.sendWorkerMessageFn)
                    })()
                }
                addCandles(t, a, r, i=!0) {
                    var f = this;
                    return (0,
                    it.Z)(function*() {
                        return t.addCandles(a, r, i, f.sendWorkerMessageFn)
                    })()
                }
                getCandlesWithoutGaps(t, a, r, i, f, C=0) {
                    var O = this;
                    return (0,
                    it.Z)(function*() {
                        const $ = Math.max(r, C)
                          , W = yield O._getMinimumNumberOfCandles(t, a, $, i, f);
                        return 1 === W.length && W[0].time === C && W.pop(),
                        yield t.normalizeCandles(W, O.sendWorkerMessageFn)
                    })()
                }
                sendWorkerMessage(t, a, ...r) {
                    var i = this;
                    return (0,
                    it.Z)(function*() {
                        const C = `${a.id}-${i._workerPendingId}`;
                        if (i._worker) {
                            if (i._workerPending.has(C))
                                return i._workerPending.get(C);
                            i._worker.postMessage({
                                type: t,
                                data: {
                                    id: C,
                                    candlesArray: [],
                                    args: r
                                }
                            }),
                            i._workerPendingId++;
                            const O = new Promise($=>{
                                i._workerResolves.set(C, $)
                            }
                            ).then($=>(i._workerResolves.delete(C),
                            $));
                            return i._workerPending.set(C, O),
                            O
                        }
                    })()
                }
                _setWorkerMessageHandler() {
                    this._worker.addEventListener("message", t=>{
                        const {data: a} = t.data
                          , {id: r, result: i} = a;
                        this._workerResolves.has(r) && this._workerResolves.get(r)(i),
                        this._workerResolves.delete(r)
                    }
                    )
                }
                _getMinimumNumberOfCandles(t, a, r, i, f) {
                    var C = this;
                    return (0,
                    it.Z)(function*() {
                        const O = yield C.getCandles(t, a, r, i)
                          , $ = yield t.fillGapsMissingCandles(O, i, C.sendWorkerMessageFn);
                        return f - $.length > 0 ? a === t.oldestTsInApi ? $ : C._getMinimumNumberOfCandles(t, t.oldestTsInApi, r, i, f) : $
                    })()
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var _e = m(54004);
        let An = (()=>{
            class g {
                constructor() {
                    this._exchange = p,
                    this._chain = null,
                    this.exchange$ = new Qe.X(this._exchange),
                    this.chain$ = new Qe.X(this._chain)
                }
                get exchange() {
                    return this._exchange
                }
                set exchange(t) {
                    if (this._exchange !== t && (this._exchange = t,
                    this.exchange$.next(t)),
                    null != this.chain) {
                        const r = !!te.getExchangesFromChain(this.chain).find(i=>i.name.toLowerCase() === t.toLowerCase());
                        this.exchange !== p && !r && console.warn(`Current exchange ${this.exchange} does not exist in chain ${this.chain}`)
                    }
                }
                get exchangeApi() {
                    return te.getExchangeApiFromExchange(this.exchange, this.chain)
                }
                get chain() {
                    return this._chain
                }
                set chain(t) {
                    this._chain !== t && (this._chain = t,
                    this.chain$.next(t),
                    (te.chainExchangeList[t ?? n.Ethereum] ?? []).length > 0 && (te.getExchangesFromChain(t ?? n.Ethereum).find(i=>i.name.toLowerCase() === this.exchange.toLowerCase()) || (this.exchange = te.getDefaultExchange(t ?? n.Ethereum))))
                }
                get isBsc() {
                    return this.chain === n.Binance
                }
                get isEthereum() {
                    return this.chain === n.Ethereum
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        class kc {
            get apiExchange() {
                return this._apiExchange
            }
            get apiUrl() {
                return this._apiUrl
            }
            get chain() {
                return this._chain
            }
            constructor(u, t, a, r) {
                this._injector = u,
                this._chain = t,
                this._apiUrl = a,
                this._apiExchange = r,
                this.isThirdPartyApi = !1,
                this._appVersion = this._injector.get(Te.qA).appVersion,
                this._apiService = this._injector.get(Te.sM),
                this._exchangeService = this._injector.get(An)
            }
            getSwaps(u, t, a=!1) {
                return this._getCall(`/${this.apiExchange}/1/pairexplorer?v=${this._appVersion}&pair=${u}&ts=${t}${a ? "&h=1" : ""}`)
            }
            getCandlesVersion(u) {
                return this._getCall(`/${this.apiExchange}/1/history-candle-status?pair=${u}`).pipe((0,
                _e.U)(t=>null != t ? +t : 0))
            }
            getOnTheFlyCandles(u, t, a, r) {
                let i = `&timezone=${r}`
                  , f = "latest=1m";
                return "15" === a ? f = `latest=${a}m` : "1440" === a && (f = "latest=1d"),
                "latest=1m" === f && (i = ""),
                this._getCall(`/${this.apiExchange}/history/candles/v2?${f}&pair=${u}&sym=${t}${i}`).pipe((0,
                _e.U)(C=>C.data))
            }
            getCandles(u, t, a, r, i, f, C) {
                let O = `&ts=${r + 60 * (C || 0) * 6e4 * -1}`
                  , W = null != C ? `&timezone=${C}` : ""
                  , ae = "";
                return "15" === a ? ae = `&res=${a}m` : "1440" === a && (ae = "&res=1d"),
                "" === ae && "day" === i && (W = "",
                O = `&ts=${r}`),
                this._getCall(`/${this.apiExchange}/history/candles/v2?sym=${t}&span=${i}&pair=${u}${O}${null != f ? `&v=${f}` : ""}${ae}${W}&cache=true`).pipe((0,
                _e.U)(q=>q.data))
            }
            getTransactionStatus(u) {
                return this._getCall(`/${this.apiExchange}/1/pairexplorer-status?pair=${u}`)
            }
            getPools(u, t, a="x") {
                return this._getCall(`/${this.apiExchange}/pools ${a}?timestampToShow=${u}&range=${t}`)
            }
            getTokenWallet(u) {
                return this._getCall(`/wallet/balance?address=${u}`)
            }
            getTxWallet(u) {
                return this._getCall(`/wallet/transactions?address=${u}`)
            }
            getPairSummary(u) {
                return this._getCall(`/pair/summary?address=${u}`)
            }
            getPairsStats() {
                return this._getCall("/stats/volume/").pipe((0,
                _e.U)(u=>u?.result))
            }
            getTokensData(u) {
                let t = "";
                return u && u.length > 0 && u.forEach((a,r)=>{
                    0 === r && (t = "?"),
                    t += a.key + "=" + a + "&",
                    r === u.length - 1 && t.slice(t.lastIndexOf("&"), t.length)
                }
                ),
                this._getCall(`/token-finder ${t}`)
            }
            getPairsByToken(u) {
                return this._getCall(`/pair/alike?token=${u}`).pipe((0,
                _e.U)(t=>Array.isArray(t) ? t : []))
            }
            getWalletTransactions(u) {
                return this._getCall(`/user-data/swaps?pair=${u}`).pipe((0,
                _e.U)(t=>t?.data))
            }
            getBigSwaps(u=1e4, t, a) {
                return this._getCall(`/${this.apiExchange}/big-swaps/v2?amount=${u}${t ? `&timestamp=${t}` : ""}${a ? `&timestampOlder=${a}` : ""}`)
            }
            _getCall(u, t) {
                return this._apiService.get(this.apiUrl, u, t)
            }
        }
        const Tc = /(\s|\.|-)/g;
        function se(g, u) {
            return class extends kc {
                constructor(a) {
                    super(a, g, u, "generic")
                }
            }
        }
        class Ht {
            constructor(u) {
                this._injector = u,
                this._chainsApiAdapters = new Map([[n.Ethereum, se(n.Ethereum, "api_ethereum_url")], [n.Binance, se(n.Binance, "api_bnb_url")], [n.Polygon, se(n.Polygon, "api_polygon_url")], [n.Fantom, se(n.Fantom, "api_fantom_url")], [n.Cronos, se(n.Cronos, "api_cronos_url")], [n.Avalanche, se(n.Avalanche, "api_avalanche_url")], [n.Velas, se(n.Velas, "api_velas_url")], [n.Oasis, se(n.Oasis, "api_oasis_url")], [n.Metis, se(n.Metis, "api_metis_url")], [n.Kucoin, se(n.Kucoin, "api_kucoin_url")], [n.Optimism, se(n.Optimism, "api_optimism_url")], [n.Arbitrum, se(n.Arbitrum, "api_arbitrum_url")], [n.Celo, se(n.Celo, "api_celo_url")], [n.Telos, se(n.Telos, "api_telos_url")], [n.Aurora, se(n.Aurora, "api_aurora_url")], [n.Moonbeam, se(n.Moonbeam, "api_moonbeam_url")], [n.Moonriver, se(n.Moonriver, "api_moonriver_url")], [n.Harmony, se(n.Harmony, "api_harmony_url")], [n.Astar, se(n.Astar, "api_astar_url")], [n.Fuse, se(n.Fuse, "api_fuse_url")], [n.Iotex, se(n.Iotex, "api_iotex_url")], [n.Okc, se(n.Okc, "api_okc_url")], [n.Heco, se(n.Heco, "api_heco_url")], [n.Milkomeda, se(n.Milkomeda, "api_milkomeda_url")], [n.Dfk, se(n.Dfk, "api_dfk_url")], [n.Solana, se(n.Solana, "api_solana_url")], [n.Evmos, se(n.Evmos, "api_evmos_url")], [n.Doge, se(n.Doge, "api_dogechain_url")], [n.Canto, se(n.Canto, "api_canto_url")], [n.Etc, se(n.Etc, "api_etc_url")], [n.Gnosis, se(n.Gnosis, "api_gnosis_url")], [n.Bitgert, se(n.Bitgert, "api_bitgert_url")], [n.Arbitrumnova, se(n.Arbitrumnova, "api_arbitrumnova_url")], [n.Redlight, se(n.Redlight, "api_redlight_url")], [n.Kardiachain, se(n.Kardiachain, "api_kardia_url")], [n.Smartbch, se(n.Smartbch, "api_smartbch_url")], [n.Conflux, se(n.Conflux, "api_conflux_url")], [n.Tomb, se(n.Tomb, "api_tomb_url")], [n.Boba, se(n.Boba, "api_boba_url")], [n.Elastos, se(n.Elastos, "api_elastos_url")], [n.Shiden, se(n.Shiden, "api_shiden_url")], [n.Fusion, se(n.Fusion, "api_fusion_url")], [n.Wan, se(n.Wan, "api_wan_url")], [n.Rsk, se(n.Rsk, "api_rsk_url")], [n.Nova, se(n.Nova, "api_nova_url")], [n.Hoo, se(n.Hoo, "api_hoo_url")], [n.Cube, se(n.Cube, "api_cube_url")], [n.Ronin, se(n.Ronin, "api_ronin_url")], [n.Syscoin, se(n.Syscoin, "api_syscoin_url")], [n.Tomo, se(n.Tomo, "api_tomo_url")], [n.Kava, se(n.Kava, "api_kava_url")], [n.Thundercore, se(n.Thundercore, "api_thundercore_url")], [n.Meter, se(n.Meter, "api_meter_url")], [n.Echelon, se(n.Echelon, "api_echelon_url")], [n.Shib, se(n.Shib, "api_shib_url")], [n.Ethw, se(n.Ethw, "api_ethw_url")], [n.Kek, se(n.Kek, "api_kek_url")], [n.Ethf, se(n.Ethf, "api_ethf_url")], [n.Sx, se(n.Sx, "api_sx_url")], [n.Muu, se(n.Muu, "api_muu_url")], [n.Alvey, se(n.Alvey, "api_alvey_url")], [n.Aptos, se(n.Aptos, "api_aptos_url")], [n.Multiversx, se(n.Multiversx, "api_multiversx_url")], [n.Flare, se(n.Flare, "api_flare_url")], [n.Pom, se(n.Pom, "api_pom_url")], [n.Ultron, se(n.Ultron, "api_ultron_url")], [n.Energi, se(n.Energi, "api_energi_url")], [n.Exosama, se(n.Exosama, "api_exosama_url")], [n.CoreDao, se(n.CoreDao, "api_coredao_url")], [n.EthereumGoerli, se(n.EthereumGoerli, "api_ethergoerli_url")], [n.Filecoin, se(n.Filecoin, "api_filecoin_url")], [n.Zksync, se(n.Zksync, "api_zksync_url")], [n.Polygonzkevm, se(n.Polygonzkevm, "api_polygonzkevm_url")], [n.Pulse, se(n.Pulse, "api_pulse_url")], [n.Klaytn, se(n.Klaytn, "api_klaytn_url")]]),
                this._supportedApis = new Map([]),
                this._apiAdapters = new Map;
                for (const [t,a] of this._chainsApiAdapters.entries())
                    this._supportedApis.set(`${t.toLowerCase()}-generic`, a)
            }
            getAdapter(u, t) {
                const a = t ? `-${t.toLowerCase().replace(Tc, "")}` : "";
                let r = `${u.toLowerCase()}${a}`;
                if (t ? this._supportedApis.has(r) || (r = `${u.toLowerCase()}-generic`) : r = `${r.toLowerCase()}-generic`,
                this._apiAdapters.has(r))
                    return this._apiAdapters.get(r);
                const i = this._supportedApis.get(r);
                let f;
                return f = this._isGenericChainAdapter(i) ? new i(this._injector) : new i(this._injector,a.replace("-", "")),
                this._apiAdapters.set(r, f),
                f
            }
            getAdapterForDefaultExchangeLegacy() {
                return this.getAdapter(n.Ethereum)
            }
            _isGenericChainAdapter(u) {
                return [...this._chainsApiAdapters.values()].includes(u)
            }
        }
        Ht.\u0275fac = function(u) {
            return new (u || Ht)(J.LFG(J.zs3))
        }
        ,
        Ht.\u0275prov = J.Yz7({
            token: Ht,
            factory: Ht.\u0275fac,
            providedIn: "root"
        }),
        (0,
        Lt.__decorate)([(0,
        U.HP)({
            resolver: (...g)=>`${g[0]}(${g[1]})`.toLowerCase(),
            clearSignal: te.exchangesChanged$
        })], Ht.prototype, "getAdapter", null);
        var Oa = m(80529);
        let Ec = (()=>{
            class g {
                constructor(t) {
                    this._apiService = t
                }
                getExchangeList(t) {
                    null != t.chain && (t.chain = z.getLegacyChain(t.chain));
                    const a = new Oa.LE({
                        fromObject: {
                            ...t
                        }
                    });
                    return this._apiService.get("shared_url", "/analytics/exchanges", a).pipe((0,
                    _e.U)(r=>{
                        let i = r?.data ?? [];
                        return i = i.filter(f=>{
                            const C = z.replaceLegacyChain(f._id.chain);
                            return !!Zt.includes(C) && (f._id.chain = C,
                            !0)
                        }
                        ),
                        {
                            exchangeList: i,
                            count: r?.data?.length ?? 0
                        }
                    }
                    ))
                }
                formatExchangeList(t) {
                    const a = [];
                    if (t && t.length > 0)
                        for (const r of t) {
                            const i = {
                                exchangeName: te.getExchangeNameFromExchangeApi(r._id.exchange, r._id.chain),
                                exchangeLogo: te.getExchangeLogoUrl(r._id.exchange, r._id.chain),
                                exchangeVersion: te.getExchangeVersion(r._id.exchange, r._id.chain),
                                exchangeSlug: r._id.exchange,
                                chainLogo: z.getChainData(r._id.chain).logoUrl,
                                volume: r?.volume ?? 0,
                                pairs: r?.pairs ?? 0,
                                swaps: r?.swaps ?? 0,
                                chain: z.replaceLegacyChain(r._id.chain)
                            };
                            a.push(i)
                        }
                    return a
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var mt = m(39300)
          , kn = m(71884)
          , tr = m(82722)
          , Tn = m(70262)
          , Xe = m(39646)
          , Je = m(18505)
          , At = m(95698);
        const ia = ["is_open_source", "is_honeypot", "buy_tax", "sell_tax", "is_proxy", "is_mintable", "can_take_back_ownership", "owner_change_balance", "hidden_owner", "selfdestruct", "external_call", "cannot_buy", "cannot_sell_all", "slippage_modifiable", "transfer_pausable", "is_blacklisted", "is_whitelisted", "is_anti_whale", "anti_whale_modifiable", "trading_cooldown", "personal_slippage_modifiable", "is_true_token", "is_airdrop_scam", "trust_list", "owner_address", "owner_balance", "owner_percent", "creator_address", "creator_balance", "creator_percent", "lp_holder_count", "other_potential_risks", "note"]
          , xa = /yes/i
          , nr = /no/i;
        let Vt = (()=>{
            class g {
                constructor(t) {
                    this._apiService = t
                }
                fetchExchanges(t) {
                    const a = {
                        allowUnknowns: !1
                    };
                    t && (a.chain = z.getLegacyChain(t));
                    const r = new Oa.LE({
                        fromObject: {
                            ...a
                        }
                    });
                    return this._apiService.get("shared_url", "/exchanges", r).pipe((0,
                    _e.U)(i=>{
                        const f = {};
                        return i.filter(C=>(C.data.forEach(O=>O.limitBotSupported = !1),
                        Zt.includes(z.replaceLegacyChain(C.chain)))).forEach(C=>{
                            f[z.replaceLegacyChain(C.chain)] = [...C.data]
                        }
                        ),
                        f
                    }
                    ), (0,
                    Tn.K)(()=>(0,
                    Xe.of)({})))
                }
                getTrendingList(t, a=null) {
                    const r = a ? `?chain=${z.getLegacyChain(a)}` : "";
                    return this._apiService.get("shared_url", `/analytics/pairs/${t}${r}`).pipe((0,
                    _e.U)(i=>(i?.data ?? []).map(C=>C._id.chain.match(`${da.join("|")}`) ? (C._id.chain = z.replaceLegacyChain(C._id.chain),
                    {
                        ...C
                    }) : C)))
                }
                getSocialUpdatedTrendingList(t=null) {
                    const a = t ? `?chain=${z.getLegacyChain(t)}` : "";
                    return this._apiService.get("shared_url", `/analytics/tokens/social-network-updates ${a}`).pipe((0,
                    _e.U)(r=>(r?.data ?? []).filter(f=>Zt.includes(z.replaceLegacyChain(f.chain))).map(f=>f.chain.match(`${da.join("|")}`) ? (f.chain = z.replaceLegacyChain(f.chain),
                    {
                        ...f
                    }) : f)))
                }
                getHotPairs(t, a=null, r=null) {
                    if (a) {
                        const i = `chain=${z.getLegacyChain(a)}`;
                        return this._apiService.get("shared_url", `/hotpairs/hot ${t}?${i}${r ? `&exchanges=true&filter=${r}` : ""}`).pipe((0,
                        _e.U)(C=>this._extractChainHotPairs(C.data, a, r)))
                    }
                    return this._apiService.get("shared_url", `/hotpairs/hot ${t}`).pipe((0,
                    _e.U)(i=>{
                        let f = [];
                        return z.allChains.forEach(({chain: C})=>{
                            const O = this._extractChainHotPairs(i.data, C).slice(0, 3);
                            f = [...f, ...O]
                        }
                        ),
                        f
                    }
                    ))
                }
                getAllPairData(t, a, r=!1, i=!0) {
                    const f = z.getLegacyChain(a);
                    return this._apiService.get("shared_url", `/data/pair?address=${t}&chain=${f}&audit=${r}&locks=${i}`).pipe((0,
                    _e.U)(ae=>null != ae?.data ? {
                        ...ae.data[0],
                        price5m: this._setMaxPoolDataValue(ae.data[0].price5m, ae.data[0], []),
                        price1h: this._setMaxPoolDataValue(ae.data[0].price1h, ae.data[0], ["price5m"]),
                        price6h: this._setMaxPoolDataValue(ae.data[0].price6h, ae.data[0], ["price1h", "price5m"]),
                        price24h: this._setMaxPoolDataValue(ae.data[0].price24h, ae.data[0], ["price6h", "price1h", "price5m"]),
                        token: {
                            ...ae.data[0].token,
                            audit: {
                                ...ae.data[0].token.audit,
                                external: ae.data[0].token.audit.external ? this._mapAudits(ae.data[0].token.audit) : {}
                            }
                        }
                    } : ae))
                }
                _setMaxPoolDataValue(t, a, r) {
                    for (const i of r)
                        a[i] && (t?.volume ?? 0) < (a[i]?.volume ?? 0) && (t = a[i]);
                    return t
                }
                _mapAudits(t) {
                    const a = {};
                    for (const [r,i] of Object.entries(t.external)) {
                        const f = Object.entries(i).filter(([C])=>ia.includes(C)).map(([C,O])=>({
                            key: C,
                            name: C,
                            tooltip: C,
                            value: this._getAuditValue(C, O),
                            color: this._selectAuditColor(C, O, t.is_contract_renounced),
                            icon: this._selectAuditIcon(C, O, t.is_contract_renounced)
                        }));
                        this._addMissingTaxKeys(f),
                        f.sort((C,O)=>ia.indexOf(C.key) - ia.indexOf(O.key)),
                        f.length > 0 && (a[r] = {
                            data: f,
                            image: `assets/img/${r}.png`,
                            provider: r,
                            holdersCount: i.holder_count ?? 0,
                            holders: i.holders ? this._mapHolders(i.holders) : []
                        })
                    }
                    return a
                }
                _addMissingTaxKeys(t) {
                    const a = ["buy_tax", "sell_tax"];
                    for (const r of a)
                        t.some(({key: i})=>i === r) || t.push({
                            key: r,
                            name: r,
                            tooltip: r,
                            value: e,
                            color: "unknown",
                            icon: "unknown"
                        })
                }
                _mapHolders(t) {
                    return t.map(a=>({
                        address: a.address,
                        supplyPercent: Number((100 * a.percent).toFixed(2)),
                        amount: Number(a.balance.toFixed(2))
                    }))
                }
                _selectAuditColor(t, a, r) {
                    switch (t) {
                    case "is_proxy":
                    case "can_take_back_ownership":
                    case "hidden_owner":
                    case "selfdestruct":
                    case "external_call":
                    case "cannot_buy":
                    case "cannot_sell_all":
                    case "is_honeypot":
                    case "is_anti_whale":
                    case "trading_cooldown":
                    case "is_airdrop_scam":
                        return this._getValue(a, !1);
                    case "is_mintable":
                    case "owner_change_balance":
                    case "slippage_modifiable":
                    case "transfer_pausable":
                    case "anti_whale_modifiable":
                    case "is_blacklisted":
                    case "is_whitelisted":
                    case "personal_slippage_modifiable":
                        return this._getValueByOwnership(a, !1, r);
                    case "is_open_source":
                    case "is_true_token":
                    case "trust_list":
                        return this._getValue(a, !0);
                    case "buy_tax":
                    case "sell_tax":
                        return this._getTaxValue(a);
                    default:
                        return "unknown"
                    }
                }
                _selectAuditIcon(t, a, r) {
                    switch (t) {
                    case "is_proxy":
                    case "can_take_back_ownership":
                    case "hidden_owner":
                    case "selfdestruct":
                    case "external_call":
                    case "cannot_buy":
                    case "cannot_sell_all":
                    case "is_honeypot":
                    case "is_anti_whale":
                    case "trading_cooldown":
                    case "is_airdrop_scam":
                        return this._getValue(a, !1);
                    case "is_mintable":
                    case "owner_change_balance":
                    case "slippage_modifiable":
                    case "transfer_pausable":
                    case "anti_whale_modifiable":
                    case "is_blacklisted":
                    case "is_whitelisted":
                    case "personal_slippage_modifiable":
                        return this._getValueByOwnership(a, !1, r);
                    case "note":
                    case "other_potential_risks":
                        return "negative";
                    case "is_open_source":
                        return 1 == a || xa.test(a) ? "safe" : "unsafe";
                    case "is_true_token":
                    case "trust_list":
                        return this._getValue(a, !0);
                    case "buy_tax":
                    case "sell_tax":
                        return this._getTaxValue(a);
                    default:
                        return
                    }
                }
                _getAuditValue(t, a) {
                    return "" !== a ? ["sell_tax", "buy_tax", "owner_percent", "creator_percent"].includes(t) ? "" + 100 * a : ia.slice(ia.indexOf("owner_address")).includes(t) || xa.test(a) || nr.test(a) ? `${a}` : 1 == a ? "Yes" : "No" : e
                }
                _isMatch(t, a=!1) {
                    return (a ? 1 == t : 0 == t) || (a ? xa : nr).test(t)
                }
                _getValue(t, a=!1) {
                    return this._isMatch(t, a) ? "positive" : "negative"
                }
                _getTaxValue(t) {
                    return "number" != typeof t ? "unknown" : 100 * t <= 1 ? "positive" : "negative"
                }
                _getValueByOwnership(t, a=!1, r=!1) {
                    return r ? "info" : this._getValue(t, a)
                }
                searchPairs(t, a=[], r=null) {
                    return this._searchPairs(t, a, r)
                }
                searchPairsByChains(t, a=[], r=null) {
                    return this._searchPairsByChains(t, a, r)
                }
                searchByTokenFiltered(t, a=null) {
                    return this._searchPairs(t, a ? [a] : [])
                }
                searchByToken(t, a) {
                    return this._searchPairs(t, [], a)
                }
                getGlobalStats(t) {
                    const a = t ? `/data/chain/stats/current?chain=${z.getLegacyChain(t)}` : "/data/chain/stats/current";
                    return this._apiService.get("shared_url", a)
                }
                _searchPairs(t, a=[], r=null) {
                    const O = `${r ? `&chains=${z.getLegacyChain(r)}` : ""}${a.length ? `&exchanges=${a.join(",")}` : ""}&query=${t}`.replace(/^&/, "");
                    return this._apiService.get("shared_url", `/search/pair?${O}`)
                }
                _searchPairsByChains(t, a=[], r=null) {
                    let i = []
                      , f = "";
                    r && (i = r.map(ae=>z.getLegacyChain(ae)),
                    f = i.join());
                    const W = `${"" !== f ? `&chains=${f}` : ""}${a.length ? `&exchanges=${a.join(",")}` : ""}&query=${t}`.replace(/^&/, "");
                    return this._apiService.get("shared_url", `/search/pair?${W}`)
                }
                getFavoritesList(t="lite") {
                    return this._apiService.get("shared_url", `${o}favs/lists/v2?mode=${t}`).pipe((0,
                    _e.U)(a=>a.data.map(r=>(r.favs = r.favs.map(i=>(i.id.chain = z.replaceLegacyChain(i.id.chain),
                    i)),
                    r))), (0,
                    Tn.K)(a=>(console.error(a),
                    (0,
                    Xe.of)({
                        error: !0,
                        message: "Error to get favorite lists"
                    }))))
                }
                createFavoritesList(t) {
                    return this._apiService.post("shared_url", `${o}favs/lists`, t)
                }
                deleteFavoritesList(t) {
                    return this._apiService.delete("shared_url", `${o}favs/lists`, {
                        id: t
                    })
                }
                editFavoritesListName(t, a, r) {
                    return this._apiService.post("shared_url", `${o}favs/lists`, {
                        name: t,
                        id: a,
                        main: r
                    })
                }
                sortFavoritesList(t, a) {
                    return this._apiService.post("shared_url", `${o}favs/lists`, {
                        sort: t,
                        id: a
                    })
                }
                addItemsToFavoritesList(t) {
                    return this._apiService.post("shared_url", `${o}favs/to/list`, t)
                }
                removeItemsFromFavoritesList(t) {
                    return this._apiService.delete("shared_url", `${o}favs/from/list`, t)
                }
                getLogos(t) {
                    const a = `/data/token?tokens=${t.filter(r=>r).join(",")}&returnFields=id,logo`;
                    return this._apiService.get("shared_url", a)
                }
                _extractChainHotPairs(t, a, r=null) {
                    let i = [];
                    return this._isExchangeHotPairsData(t, r) ? t.forEach(f=>{
                        Object.keys(f.data).forEach(C=>{
                            i = f.data[C] ? [...f.data[C]] : []
                        }
                        )
                    }
                    ) : i = [...t.find(C=>z.replaceLegacyChain(C.chain) === a)?.data ?? []],
                    i.map(f=>({
                        ...f,
                        chain: z.replaceLegacyChain(a),
                        exchange: f.id?.exchange || f.exchange,
                        id: f.id?.pair || f.id
                    }))
                }
                _isExchangeHotPairsData(t, a) {
                    return !!a && Array.isArray(t) && null != t[0] && t[0].data?.hasOwnProperty(a)
                }
                getTokenList(t, a, r) {
                    const i = `page=${t}&limit=${a}${r ? `&chain=${z.getLegacyChain(r)}` : ""}`;
                    return this._apiService.get("shared_url", `/analytics/tokens?${i}`).pipe((0,
                    _e.U)(f=>null != f?.data ? f.data.map(C=>(C._id.chain = z.replaceLegacyChain(C._id.chain),
                    C)) : null))
                }
                getTokenData(t, a) {
                    const i = `token=${z.getLegacyChain(t)}:${a}`;
                    return this._apiService.get("shared_url", `/data/token/detail?${i}`).pipe((0,
                    _e.U)(f=>null != f?.data ? (f.data.chain = z.replaceLegacyChain(t),
                    f.data) : null))
                }
                getTokenPairs(t, a, r, i) {
                    const C = `token=${z.getLegacyChain(t)}:${a}&page=${r}&limit=${i}`;
                    return this._apiService.get("shared_url", `/data/token/pairs?${C}`).pipe((0,
                    _e.U)(O=>null != O?.data ? O.data : null))
                }
                getDextBurn() {
                    return this._apiService.get("shared_url", "/api/dextools/burn").pipe((0,
                    _e.U)(t=>t.data))
                }
                getEventsData(t) {
                    const a = U.k3.formatDate(t.initDate, "YYYY-MM-DD")
                      , r = U.k3.formatDate(t.endDate, "YYYY-MM-DD");
                    return this._apiService.get("shared_url", `/calendar?init=${a}&end=${r}`).pipe((0,
                    _e.U)(f=>null != f?.data ? f.data : null))
                }
                getRecentEventsData(t) {
                    return this._apiService.get("shared_url", `/calendar/recent?amount=${t}`).pipe((0,
                    _e.U)(r=>null != r?.data ? r.data : null))
                }
                searchTokens(t, a=null) {
                    return this._searchTokens(t, a)
                }
                searchTokensByChains(t, a=null) {
                    return this._searchTokensByChains(t, a)
                }
                _searchTokens(t, a=null) {
                    const f = `${a ? `&chains=${z.getLegacyChain(a)}` : ""}&query=${t}`.replace(/^&/, "");
                    return this._apiService.get("shared_url", `/search/token?${f}`)
                }
                _searchTokensByChains(t, a=null) {
                    const r = a?.map(O=>z.getLegacyChain(O)).join(",") ?? ""
                      , C = `${"" === r ? "" : `&chains=${r}`}&query=${t}`.replace(/^&/, "");
                    return this._apiService.get("shared_url", `/search/token?${C}`)
                }
                getSwaps(t, a, r, i=!1) {
                    const f = `chain=${z.getLegacyChain(t)}`;
                    return this._apiService.get("shared_url", `/data/swaps?${f}&pair=${a}${r ? `&ts=${r}` : ""}${i ? "&filter=true" : ""}`).pipe((0,
                    _e.U)(ae=>ae?.data ?? null))
                }
                getMempoolTimeSeries(t, a, r, i) {
                    let f = `${z.getLegacyChain(t)}?filterField=pair&filterValue=${a}`;
                    return r && i && (f = `${z.getLegacyChain(t)}?filterField=pair&filterValue=${a}&page=${r}&size=${i}`),
                    this._apiService.get("shared_url", `/timeseries/mempool/${f}`).pipe((0,
                    _e.U)(C=>C && C.data ? C.data.map(O=>(O.id.chain = z.replaceLegacyChain(O.id.chain),
                    O)) : null), (0,
                    Tn.K)(()=>(0,
                    Xe.of)(null)))
                }
                getAlertsFromUser() {
                    return this._apiService.get("shared_url", `${o}alerts/summary`).pipe((0,
                    _e.U)(t=>null != t?.data ? t.data.map(a=>({
                        ...a,
                        chain: z.replaceLegacyChain(a.chain)
                    })) : []))
                }
                getAlertsByPair(t, a, r) {
                    const i = `chain=${z.getLegacyChain(a)}`;
                    return this._apiService.get("shared_url", `${o}alerts/pair?${i}&address=${t}`).pipe((0,
                    _e.U)(C=>{
                        const O = [];
                        if (C.data.length > 0) {
                            const $ = C.data[0]
                              , W = z.replaceLegacyChain($.chain)
                              , ae = new Date;
                            for (const q of $.alerts)
                                O.push({
                                    _id: q._id,
                                    createdAt: new Date(q.createdAt),
                                    matchedAt: q.matchedAt ? new Date(q.matchedAt) : void 0,
                                    price: q.price,
                                    state: q.state,
                                    chain: W,
                                    pair: $.pair,
                                    symbol: `${$.symbol}`.trim(),
                                    expiredAt: "expired" === q.state ? ae : void 0,
                                    matchedAtBrowser: void 0,
                                    wallet: r,
                                    exchange: "unknown",
                                    type: "unknown"
                                })
                        }
                        return O
                    }
                    ))
                }
                savePriceAlert(t) {
                    const a = {
                        chain: z.getLegacyChain(t.chain),
                        address: t.pair,
                        price: t.price,
                        symbol: t.symbol
                    };
                    return this._apiService.post("shared_url", `${o}alerts`, {
                        ...a,
                        ...null == t._id ? {} : {
                            _id: t._id
                        }
                    }).pipe((0,
                    _e.U)(i=>({
                        ...i.data,
                        chain: z.replaceLegacyChain(i.data.chain)
                    })))
                }
                deletePriceAlert(t) {
                    return this._apiService.delete("shared_url", `${o}alerts?_id=${t}`)
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const En = "favsList"
          , ya = "favsSorting"
          , Xn = "allFavsSaved"
          , wa = "saved";
        let Lc = (()=>{
            class g {
                _legacyLocalStorageFavsKey(t=this._exchangeService.chain ?? n.Ethereum) {
                    switch (t) {
                    case n.Ethereum:
                        return "favsSaved";
                    case n.Binance:
                        return "favsSavedCake";
                    case n.Polygon:
                        return "favsSavedPolygon";
                    case n.Fantom:
                        return "favsSavedFantom";
                    case n.Cronos:
                        return "favsSavedCronos";
                    case n.Avalanche:
                        return "favsSavedAvalanche";
                    case n.Oasis:
                        return "favsSavedOasis";
                    case n.Velas:
                        return "favsSavedVelas";
                    case n.Metis:
                        return "favsSavedMetis";
                    case n.Kucoin:
                        return "favsSavedKucoin";
                    case n.Optimism:
                        return "favsSavedOptimism";
                    case n.Arbitrum:
                        return "favsSavedArbitrum";
                    case n.Celo:
                        return "favsSavedCelo";
                    case n.Telos:
                        return "favsSavedTelos";
                    case n.Aurora:
                        return "favsSavedAurora";
                    case n.Moonbeam:
                        return "favsSavedMoonbeam";
                    case n.Moonriver:
                        return "favsSavedMoonriver";
                    case n.Harmony:
                        return "favsSavedHarmony";
                    case n.Astar:
                        return "favsSavedAstar";
                    case n.Fuse:
                        return "favsSavedFuse";
                    case n.Iotex:
                        return "favsSavedIotex";
                    case n.Okc:
                        return "favsSavedOec";
                    case n.Heco:
                        return "favsSavedHeco";
                    case n.Milkomeda:
                        return "favsSavedMilkomeda";
                    case n.Dfk:
                        return "favsSavedDfk";
                    case n.Solana:
                        return "favsSavedSolana";
                    case n.Evmos:
                        return "favsSavedEvmos";
                    case n.Doge:
                        return "favsSavedDoge";
                    case n.Canto:
                        return "favsSavedCanto";
                    case n.Etc:
                        return "favsSavedEtc";
                    case n.Gnosis:
                        return "favsSavedGnosis";
                    case n.Bitgert:
                        return "favsSavedBitgert";
                    case n.Arbitrumnova:
                        return "favsSavedArbitrumnova";
                    case n.Redlight:
                        return "favsSavedRedlight";
                    case n.Kardiachain:
                        return "favsSavedKardiachain";
                    case n.Smartbch:
                        return "favsSavedSmartbch";
                    case n.Conflux:
                        return "favsSavedSmartConflux";
                    case n.Tomb:
                        return "favsSavedSmartTomb";
                    case n.Boba:
                        return "favsSavedSmartBoba";
                    case n.Elastos:
                        return "favsSavedSmartElastos";
                    case n.Shiden:
                        return "favsSavedSmartShiden";
                    case n.Fusion:
                        return "favsSavedSmartFusion";
                    case n.Wan:
                        return "favsSavedSmartWan";
                    case n.Rsk:
                        return "favsSavedSmartRsk";
                    case n.Nova:
                        return "favsSavedSmartNova";
                    case n.Hoo:
                        return "favsSavedSmartHoo";
                    case n.Cube:
                        return "favsSavedCube";
                    case n.Syscoin:
                        return "favsSavedSyscoin";
                    case n.Ronin:
                        return "favsSavedRonin";
                    case n.Tomo:
                        return "favsSavedTomo";
                    case n.Kava:
                        return "favsSavedKava";
                    case n.Thundercore:
                        return "favsSavedThundercore";
                    case n.Meter:
                        return "favsSavedMeter";
                    case n.Echelon:
                        return "favsSavedEchelon";
                    case n.Shib:
                        return "favsSavedShib";
                    case n.Ethw:
                        return "favsSavedEthw";
                    case n.Kek:
                        return "favsSavedKek";
                    case n.Ethf:
                        return "favsSavedEthf";
                    case n.Sx:
                        return "favsSavedSx";
                    case n.Muu:
                        return "favsSavedMuu";
                    case n.Alvey:
                        return "favsSavedAlv";
                    case n.Aptos:
                        return "favsSavedAptos";
                    default:
                        return
                    }
                }
                constructor(t, a, r) {
                    this._sharedApiService = t,
                    this._authService = a,
                    this._exchangeService = r,
                    this._favorites$ = new Qe.X(null),
                    this._toggleFavsManagementPanelChange$ = new wn.x,
                    this.toggleFavsManagementPanelChange$ = this._toggleFavsManagementPanelChange$.asObservable(),
                    this.favorites$ = this._favorites$.asObservable().pipe((0,
                    mt.h)(i=>null != i), (0,
                    kn.x)((i,f)=>!!this.loggedUser && JSON.stringify(i) === JSON.stringify(f))),
                    this._allFavs$ = new Qe.X(null),
                    this.allFavs$ = this._allFavs$.asObservable().pipe((0,
                    mt.h)(i=>null != i), (0,
                    kn.x)((i,f)=>!!this.loggedUser && JSON.stringify(i) === JSON.stringify(f))),
                    this._favoritesLists$ = new Qe.X(null),
                    this.favoritesList$ = this._favoritesLists$.asObservable().pipe((0,
                    mt.h)(i=>null != i)),
                    this._favoriteOrder$ = new Qe.X(null),
                    this.favoritesOrder$ = this._favoriteOrder$.asObservable().pipe((0,
                    mt.h)(i=>null != i), (0,
                    kn.x)()),
                    this._user$ = new wn.x,
                    this.loggedUser = !1,
                    this.favsSortingOptions = [{
                        value: tt.Update,
                        label: "Last added",
                        id: "1"
                    }, {
                        value: tt.Updated,
                        label: "Last added",
                        id: "2"
                    }, {
                        value: tt.Price,
                        label: "Price",
                        id: "3"
                    }, {
                        value: tt.Name,
                        label: "Name",
                        id: "4"
                    }, {
                        value: tt.Change,
                        label: "24h % Change",
                        id: "5"
                    }, {
                        value: tt.Win24,
                        label: "24h % Change",
                        id: "6"
                    }, {
                        value: tt.ChangeReverse,
                        label: "24h % Change Loss",
                        id: "7"
                    }, {
                        value: tt.Loss24,
                        label: "24h % Change Loss",
                        id: "8"
                    }]
                }
                initialize() {
                    this._authService.currentUser$.pipe((0,
                    kn.x)((t,a)=>t?.id === a?.id)).subscribe(t=>{
                        if (this.loggedUser = !(null == t || t.id === Te.A7) || !!this._authService.deviceId,
                        this._user$.next(),
                        this._checkOldStoredFavs() || this._manageOldStoredFavs(),
                        this.loggedUser)
                            this._checkFavoritesLists().pipe((0,
                            tr.R)(this._user$)).subscribe();
                        else {
                            this.getStoredFavs(!0);
                            const a = U._Z.getString(ya) ?? tt.Update;
                            this._favoriteOrder$.next(a)
                        }
                    }
                    )
                }
                getFavsList(t, a=!1) {
                    return this._getFavoritesListsCall(t, a)
                }
                addFav(t, a) {
                    return this.loggedUser ? this._addFavoritesToListCall(t, a).pipe((0,
                    Tn.K)(()=>(0,
                    Xe.of)(!1))) : (0,
                    Xe.of)(!0).pipe((0,
                    Je.b)(()=>{
                        this._storeNewFav(t)
                    }
                    ))
                }
                deleteFav(t, a) {
                    return this.loggedUser ? this._deleteFavoritesCall(t, a).pipe((0,
                    Tn.K)(()=>(0,
                    Xe.of)(!1))) : (0,
                    Xe.of)(!0).pipe((0,
                    Je.b)(()=>{
                        this._deleteStoredFav(t)
                    }
                    ))
                }
                getStoredFavs(t) {
                    let a = U._Z.get(Xn) ?? [];
                    return a = a.map(r=>({
                        ...r,
                        logo: r.logo && lt.normalizeLogoUrl(r.logo),
                        chain: z.replaceLegacyChain(r.chain)
                    })),
                    t ? (this._favorites$.next(a),
                    this._allFavs$.next(a),
                    []) : a
                }
                getInmediateListFavs() {
                    return this._favorites$.value ?? []
                }
                getInmediateAllFavs() {
                    return this._allFavs$.value ?? []
                }
                get inmediateFavoriteList() {
                    return this._favoritesLists$.value ?? []
                }
                findFavInCurrentList(t) {
                    return this.getInmediateListFavs().find(a=>a.pair === t) ?? null
                }
                findFavInAnyList(t) {
                    return this.getInmediateAllFavs().find(a=>a.pair === t) ?? null
                }
                findFavInAList(t, a) {
                    return this.getInmediateAllFavs().find(r=>r.pair === t && r.listId === a) ?? null
                }
                filterFavsInAllList(t) {
                    return this.getInmediateAllFavs().filter(a=>a.pair === t) ?? null
                }
                findListIdInList(t, a) {
                    return t.find(r=>r.name === a)?.id ?? ""
                }
                addSymbolVsAndChain(t, a, r, i, f, C) {
                    const O = this.findFavInCurrentList(t.pair);
                    O && (O.isStableNativePair = a,
                    O.name = a ? i : r,
                    O.symbolRef = a ? r : i,
                    O.chain = f,
                    this.updateStoredFav(O))
                }
                updateStoredFav(t) {
                    const a = this.getStoredFavs(!1).map(r=>(r.pair === t.pair && (r = t),
                    r));
                    U._Z.set(Xn, a)
                }
                setFavoritesOrder(t, a) {
                    this.loggedUser && (t = this._transformSortFilterToBackFilter(t),
                    this._sharedApiService.sortFavoritesList(t, a).subscribe()),
                    this._favoriteOrder$.next(t)
                }
                get onChangeFavorites$() {
                    return this.favorites$
                }
                sendAddedFav(t, a, r) {
                    const i = [...this.getInmediateListFavs()];
                    i.push({
                        ...t,
                        listId: a
                    }),
                    this._favorites$.next([...i]);
                    let f = this._favoritesLists$.value;
                    f = f.map(O=>(O.id === a && (O.favCount += 1),
                    O)),
                    this._favoritesLists$.next([...f]);
                    const C = [...this.getInmediateAllFavs()];
                    C.push({
                        pair: t.pair,
                        chain: t.chain,
                        list: t.list ?? r,
                        listId: a ?? ""
                    }),
                    this._allFavs$.next([...C])
                }
                sendDeletedFav(t, a) {
                    let r = [...this.getInmediateListFavs()];
                    r = r.filter(C=>C.pair !== t.pair),
                    this._favorites$.next([...r]);
                    let i = this._favoritesLists$.value;
                    i = i.map(C=>(C.id === a && (C.favCount -= 1),
                    C)),
                    this._favoritesLists$.next([...i]);
                    let f = [...this.getInmediateAllFavs()];
                    f = f.filter(C=>C.listId !== a || C.pair !== t.pair),
                    this._allFavs$.next([...f])
                }
                isListNameDuplicated(t) {
                    return this._favoritesLists$.value.some(a=>a.name === t)
                }
                createList(t, a=[]) {
                    return this._postNewFavsList(t, a).pipe((0,
                    _e.U)(r=>{
                        const i = this._favoritesLists$.value;
                        i.push(...this._transformFavsCallToFavsList([r])),
                        this._favoritesLists$.next(i)
                    }
                    ))
                }
                editListName(t, a, r) {
                    return this._editFavoritesListName(t, a, r).pipe((0,
                    _e.U)(()=>{
                        let i = this._favoritesLists$.value;
                        i = i.map(f=>(r && f.main && f.id !== a && (f.main = !1),
                        f.id === a && (f.name = t,
                        f.main = r),
                        f)),
                        this._favoritesLists$.next(i)
                    }
                    ))
                }
                deleteList(t) {
                    return "" !== t ? this._deleteFavsList(t).pipe((0,
                    Je.b)(()=>{
                        let a = [...this._favoritesLists$.value];
                        a = a.filter(r=>{
                            if (r.id !== t)
                                return !0;
                            const i = U._Z.getString(En);
                            return i && i === r.id ? U._Z.setString(En, a[0]?.id ?? yo) : this._deleteStorageListKey(r.id),
                            !1
                        }
                        ),
                        this._favoritesLists$.next(a)
                    }
                    )) : (0,
                    Xe.of)(!0).pipe((0,
                    _e.U)(()=>{
                        console.error("Favorites: cannot delete list, invalid id.")
                    }
                    ))
                }
                getStorageListName() {
                    return U._Z.getString(En) ?? "main-list"
                }
                setStorageListName(t) {
                    U._Z.setString(En, t)
                }
                _checkFavoritesLists() {
                    return this._sharedApiService.getFavoritesList().pipe((0,
                    _e.U)(t=>{
                        if (this._favoriteListCallIsError(t))
                            console.error(t.message);
                        else {
                            if (t && t.length > 0)
                                return this._updateFavoriteLists(t),
                                t;
                            if (t && 0 === t.length)
                                return this._checkSendStoredFavs(),
                                t
                        }
                        return []
                    }
                    ))
                }
                _favoriteListCallIsError(t) {
                    return void 0 !== t?.error
                }
                _updateFavoriteLists(t) {
                    this._favoritesLists$.next(this._transformFavsCallToFavsList(t)),
                    this._allFavs$.next(this._transformAllFavsCallToLocalStorageFav(t))
                }
                updateFavoriteListsLiteCall() {
                    return this._sharedApiService.getFavoritesList().pipe((0,
                    _e.U)(t=>this._favoriteListCallIsError(t) ? (console.error("Error to get favoriteList"),
                    []) : (this._updateFavoriteLists(t ?? []),
                    t)))
                }
                _getFavoritesListsCall(t, a=!1) {
                    return this._sharedApiService.getFavoritesList("explorer").pipe((0,
                    _e.U)(r=>this._favoriteListCallIsError(r) ? (console.error(r.message),
                    []) : (a && this._favoritesLists$.next(this._transformFavsCallToFavsList([...r ?? []])),
                    this._allFavs$.next(this._transformAllFavsCallToLocalStorageFav([...r ?? []])),
                    this._transformFavsCallToLocalStorageFav([...r], t))), (0,
                    Je.b)(r=>{
                        this._favorites$.next([...r ?? []])
                    }
                    ))
                }
                _addFavoritesListCall(t, a, r=!1) {
                    const i = [...t].map(C=>this._transformLocalStorageFavToSendFavs(C));
                    return this._sharedApiService.createFavoritesList({
                        name: a,
                        favs: i,
                        main: r
                    }).pipe((0,
                    _e.U)(C=>C.data))
                }
                _editFavoritesListName(t, a, r) {
                    return this._sharedApiService.editFavoritesListName(t, a, r)
                }
                _addFavoritesToListCall(t, a) {
                    const i = {
                        favs: [this._transformLocalStorageFavToSendFavs(t)],
                        id: a ?? null
                    };
                    return this._sharedApiService.addItemsToFavoritesList(i)
                }
                _deleteFavoritesCall(t, a) {
                    const i = {
                        favs: [this._transformLocalStorageFavToSendFavs(t)],
                        id: a
                    };
                    return this._sharedApiService.removeItemsFromFavoritesList(i)
                }
                _deleteStorageListKey(t) {
                    U._Z.getString(En) === t && U._Z.delete(En)
                }
                _manageOldStoredFavs() {
                    const t = [];
                    for (const a of Zt)
                        this._legacyLocalStorageFavsKey(a) && U._Z.getMap(this._legacyLocalStorageFavsKey(a)).forEach((r,i)=>{
                            t.push({
                                pair: i,
                                name: r.name,
                                exchange: r.exchange,
                                chain: a,
                                symbol: r.symbol,
                                symbolRef: r.symbolRef,
                                isStableNativePair: r.isStableNativePair,
                                updatedAt: r?.updatedAt ?? 0,
                                createdAt: r?.createdAt ?? 0,
                                logo: r.logo,
                                price: r.price,
                                price24h: r.price24h,
                                position: r.position
                            })
                        }
                        );
                    U._Z.set(Xn, t)
                }
                _checkOldStoredFavs() {
                    return U._Z.get(Xn)
                }
                _storeNewFav(t) {
                    const a = [...this.getInmediateListFavs()];
                    a.push(t),
                    U._Z.set(Xn, [...a]),
                    this._favorites$.next([...a ?? []]),
                    this._allFavs$.next([...a ?? []])
                }
                _deleteStoredFav(t) {
                    const a = [...this.getInmediateListFavs()];
                    for (const [r,i] of a.entries())
                        i.pair === t.pair && a.splice(r, 1);
                    U._Z.set(Xn, [...a]),
                    this._favorites$.next([...a]),
                    this._allFavs$.next([...a])
                }
                _checkSendStoredFavs() {
                    const t = U._Z.get(Xn)
                      , a = t && t.length > 0 ? wa : yo;
                    this._addFavoritesListCall(t, a, !0).pipe((0,
                    At.q)(1), (0,
                    Je.b)(()=>{
                        U._Z.setString(En, a)
                    }
                    )).subscribe(()=>{
                        this._checkFavoritesLists().pipe((0,
                        At.q)(1)).subscribe()
                    }
                    )
                }
                _postNewFavsList(t, a) {
                    return this._addFavoritesListCall(a, t)
                }
                _deleteFavsList(t) {
                    return this._sharedApiService.deleteFavoritesList(t)
                }
                formatListName(t) {
                    return t.name === wa || t.name === yo ? `${t.name.replace("-", " ").toLowerCase().split(" ").map(a=>a.charAt(0).toUpperCase() + a.slice(1)).join(" ")} (${t.favCount})` : `${t.name} (${t.favCount})`
                }
                reverseFormatListName(t) {
                    return t === wa || t === yo ? `${t.replace(" ", "-").toLowerCase()}` : `${t.replace(/[$.{}]/, "")}`
                }
                transformFavoriteWithPricesToLocalStorageFav(t) {
                    return {
                        pair: t.pair,
                        symbol: t.symbol,
                        name: t.name,
                        isStableNativePair: t.isStableNativePair ?? !1,
                        exchange: t.exchange ?? Q,
                        updatedAt: t?.updatedAt ?? 0,
                        createdAt: t?.createdAt ?? 0,
                        logo: t.logo,
                        symbolRef: t.symbolRef ?? "",
                        price: t.price,
                        price24h: t.price24h,
                        chain: t.chain ?? n.Ethereum,
                        position: t.position,
                        listId: t?.listId ?? ""
                    }
                }
                _transformLocalStorageFavToSendFavs(t) {
                    return {
                        id: {
                            chain: z.getLegacyChain(t.chain ?? n.Ethereum),
                            pair: t.pair
                        }
                    }
                }
                _transformFavsCallToFavsList(t) {
                    return t.map(a=>({
                        name: a.id.name,
                        favCount: a.favs.length,
                        sort: a.sort,
                        id: a._id,
                        main: a.main ?? !1
                    }))
                }
                _transformFavsCallToLocalStorageFav(t, a) {
                    (!a || a === yo) && (a = t.find(f=>f.main)?._id ?? "",
                    U._Z.setString(En, a),
                    this._favoritesLists$.next(this._favoritesLists$.value));
                    const r = t.find(f=>f._id === a)
                      , i = r?.sort ?? U._Z.getString(ya) ?? tt.Update;
                    return this._favoriteOrder$.next(i),
                    (r?.favs ?? []).map((f,C)=>{
                        const O = lt.isStableNativePair(f?.pair?.type ?? "")
                          , $ = O ? f?.token?.symbol : f?.pair?.symbol ?? "";
                        return {
                            symbol: $ ?? "",
                            name: $ ?? "",
                            price: f?.price ?? 0,
                            exchange: f?.pair?.id.exchange ?? "",
                            chain: f.id.chain ?? n.Ethereum,
                            symbolRef: (O ? f?.pair?.symbol : f?.pair?.symbolRef ?? "") ?? "",
                            updatedAt: f?.updatedAt ?? 0,
                            createdAt: f?.createdAt ?? 0,
                            isStableNativePair: O,
                            logo: f?.token?.logo && lt.normalizeLogoUrl(f?.token?.logo),
                            pair: f?.pair.id.pair ?? "",
                            list: r?.id.name ?? yo,
                            position: C,
                            listId: r?._id ?? ""
                        }
                    }
                    )
                }
                _transformAllFavsCallToLocalStorageFav(t) {
                    const a = [];
                    for (const r of t)
                        for (const i of r.favs)
                            a.push({
                                pair: i.id.pair,
                                chain: i.id.chain,
                                list: r.id.name,
                                listId: r._id
                            });
                    return a
                }
                _transformSortFilterToBackFilter(t) {
                    switch (t) {
                    case tt.Update:
                        return tt.Updated;
                    case tt.Change:
                        return tt.Win24;
                    case tt.ChangeReverse:
                        return tt.Loss24;
                    default:
                        return t
                    }
                }
                countAllStoredFavs() {
                    return this.getInmediateListFavs().length
                }
                countListStoredFavs(t) {
                    return this.getInmediateListFavs().filter(a=>a.list?.includes(t)).length
                }
                clearFavs() {
                    U._Z.delete(Xn)
                }
                toggleManageFavPanel(t=!1) {
                    this._toggleFavsManagementPanelChange$.next(t)
                }
                get favoritesCountPerChain() {
                    const t = new Map;
                    for (const a of this.getInmediateAllFavs())
                        t.set(a.chain ?? null, (t.get(a.chain ?? null) ?? 0) + 1);
                    return [...t.entries()].sort((a,r)=>r[1] - a[1])
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Vt),J.LFG(Te.$h),J.LFG(An))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )()
          , Dc = (()=>{
            class g {
                constructor(t, a) {
                    this._exchangeService = t,
                    this._sharedApiService = a,
                    this._globalStats$ = new Qe.X(null),
                    t.chain$.subscribe(()=>{
                        this._globalStats$.next(null),
                        clearInterval(this._interval)
                    }
                    )
                }
                get globalStats$() {
                    return null === this._globalStats$.value && (this._manageGlobalStats(this._exchangeService.chain),
                    this._interval = setInterval(()=>{
                        this._globalStats$.observed ? this._manageGlobalStats(this._exchangeService.chain) : (this._globalStats$.next(null),
                        clearInterval(this._interval))
                    }
                    , 9e5)),
                    this._globalStats$.asObservable().pipe((0,
                    mt.h)(t=>null !== t), (0,
                    kn.x)((t,a)=>JSON.stringify(a) === JSON.stringify(t)))
                }
                _manageGlobalStats(t) {
                    this._sharedApiService.getGlobalStats(t).pipe((0,
                    _e.U)(a=>(Array.isArray(a.data) ? a.data[0] : a.data) ?? null), (0,
                    Je.b)(a=>{
                        this._globalStats$.next(a)
                    }
                    )).subscribe()
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(An),J.LFG(Vt))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )()
          , Uc = (()=>{
            class g {
                constructor(t, a, r) {
                    this._sharedApiService = t,
                    this._exchangeService = a,
                    this._authenticationService = r,
                    this.currentChain = null,
                    this._hotPairsAllChains$ = new Qe.X([]),
                    this._hotPairsByChain$ = new Qe.X([]),
                    this._userData = null,
                    this._exchangeService.chain$.pipe((0,
                    mt.h)(i=>this.currentChain !== i)).subscribe(i=>{
                        this.currentChain = i,
                        this.clearHotPairsByChain()
                    }
                    ),
                    this._authenticationService.currentUser$.pipe((0,
                    mt.h)(i=>JSON.stringify(i) !== JSON.stringify(this._userData))).subscribe(i=>{
                        this._userData = i
                    }
                    )
                }
                get hotPairsAllChains$() {
                    return 0 === this._hotPairsAllChains$.value.length && (this._intervalAllChains || (this._fetchHotPairs(),
                    this._intervalAllChains = setInterval(()=>{
                        this._hotPairsAllChains$.observed ? this._fetchHotPairs() : this.clearHotPairsAllChains()
                    }
                    , this.getRefreshTime(!0)))),
                    this._hotPairsAllChains$.asObservable().pipe((0,
                    mt.h)(t=>t.length > 0), (0,
                    kn.x)((t,a)=>JSON.stringify(a) === JSON.stringify(t)))
                }
                get hotPairsByChain$() {
                    return 0 === this._hotPairsByChain$.value.length && (this._intervalByChain || (this._fetchHotPairs(this.currentChain),
                    this._intervalByChain = setInterval(()=>{
                        this._hotPairsByChain$.observed ? this._fetchHotPairs(this.currentChain) : this.clearHotPairsByChain()
                    }
                    , this.getRefreshTime()))),
                    this._hotPairsByChain$.asObservable().pipe((0,
                    mt.h)(t=>t.length > 0), (0,
                    kn.x)((t,a)=>JSON.stringify(a) === JSON.stringify(t)))
                }
                get callPlan() {
                    let t = "";
                    return this._userData && this._userData.plan && (this._userData.plan === Te.uU.P20 ? t = "z" : this._userData.plan === Te.uU.P100 && (t = "p")),
                    t
                }
                get maxHotPairs() {
                    let t = 10;
                    return this._userData && this._userData.plan && (this._userData.plan === Te.uU.P20 ? t = 12 : this._userData.plan === Te.uU.P100 && (t = 15)),
                    t
                }
                getRefreshTime(t=!1) {
                    let a = 60100;
                    return this._userData && this._userData.plan && (this._userData.plan === Te.uU.P20 ? a = 30100 : this._userData.plan === Te.uU.P100 && (a = 5100)),
                    t && (a = 90100),
                    a
                }
                formatHotPairs(t, a, r=!1, i, f=!1) {
                    if (t && t.length > 0) {
                        const C = U.k3.getCurrentDateSeconds() - 3600
                          , O = i && Object.keys(i).length > 0 || 0
                          , $ = []
                          , W = {};
                        for (let ae = 1; ae <= t.length; ae++) {
                            const q = t[ae - 1]
                              , Se = this._selectToken(f ? q.chain : a, q)
                              , Re = "token0" === Se ? "token1" : "token0";
                            let Ye = null;
                            const dt = te.getGenericExchangeApi(q.exchange);
                            W[dt] = (W[dt] || 0) + 1;
                            const to = W[dt];
                            if (!r && O > 0)
                                if (i[q._id]) {
                                    const tn = i[q._id].exchangePosition || i[q._id].position;
                                    Ye = tn < to ? {
                                        arrow: "angle-double-down",
                                        color: "sell-color"
                                    } : tn > to ? {
                                        arrow: "angle-double-up",
                                        color: "buy-color"
                                    } : i[q._id].move
                                } else
                                    Ye = {
                                        arrow: "plus",
                                        color: "text-warning"
                                    };
                            i[q._id] = {
                                ...i[q._id],
                                position: ae,
                                exchangePosition: to,
                                id: q.id,
                                _id: q._id,
                                symbol: Se ? q[Se].symbol : "",
                                symbol_vs: Re && q[Re] ? q[Re].symbol : "",
                                realName: Se ? q[Se].name : "",
                                contract: Se ? q[Se].id : "",
                                move: Ye,
                                exchange: dt,
                                chain: f ? q.chain : a,
                                new: +q.createdAtTimestamp >= +C,
                                logo: q.token?.logo && lt.normalizeLogoUrl(q.token.logo)
                            },
                            $.push(i[q._id])
                        }
                        return $
                    }
                    return []
                }
                filterHotPairs(t, a, r=!1) {
                    return a = r ? a - 1 : a,
                    t.map((f,C)=>(C >= a && (f.contract = "0x0",
                    f.realName = "???",
                    f.symbol = "???",
                    f.symbol_vs = "???"),
                    f)).slice(0, 15)
                }
                fetchHotPairsWithExchange(t, a) {
                    return this._sharedApiService.getHotPairs(this.callPlan, t, a)
                }
                _fetchHotPairs(t=null) {
                    this._sharedApiService.getHotPairs(this.callPlan, t).pipe((0,
                    Je.b)(a=>{
                        t ? this._hotPairsByChain$.next(a) : this._hotPairsAllChains$.next(a)
                    }
                    )).subscribe()
                }
                _selectToken(t, a) {
                    return lt.isStableNativePair(a.type) ? z.isStableSymbol(t, a.token1.symbol) ? "token0" : "token1" : null != a.tokenIndex ? "token" + a.tokenIndex : a.token0 ? z.isChainSymbol(t, a.token0.symbol) && !z.isStableSymbol(t, a.token1.symbol) || pt.includes(a.token0.symbol) ? "token1" : "token0" : null
                }
                clearHotPairsAllChains() {
                    this._hotPairsAllChains$.next([]),
                    clearInterval(this._intervalAllChains),
                    this._intervalAllChains = null
                }
                clearHotPairsByChain() {
                    this._hotPairsByChain$.next([]),
                    clearInterval(this._intervalByChain),
                    this._intervalByChain = null
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Vt),J.LFG(An),J.LFG(Te.$h))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var or = m(4707)
          , Ln = m(32076);
        let Aa = (()=>{
            class g {
                get isLibLoaded$() {
                    return this._isLibLoaded$.asObservable().pipe((0,
                    At.q)(1))
                }
                constructor() {
                    this._isLibLoaded$ = new or.t(1),
                    (0,
                    Ln.D)(this._loadViem()).pipe((0,
                    At.q)(1)).subscribe(()=>{
                        this._isLibLoaded$.next(!0)
                    }
                    )
                }
                _loadViem() {
                    var t = this;
                    return (0,
                    it.Z)(function*() {
                        t._libViemUtils = yield Promise.all([m.e(8592), m.e(3773)]).then(m.bind(m, 13773))
                    })()
                }
                isAddress(t="") {
                    return this._libViemUtils.isAddress(t.toLowerCase())
                }
                toChecksumAddress(t) {
                    return this._libViemUtils.getAddress(t)
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const ar = 51
          , rr = "24h"
          , ka = "advancedFilters";
        let Rc = (()=>{
            class g {
                set customAdvancedFilters(t) {
                    this._customAdvancedFilters = [...t],
                    this._customAdvancedFiltersChange$.next(t)
                }
                get customAdvancedFilters() {
                    return this._customAdvancedFilters
                }
                set selectedAdvancedFilter(t) {
                    this._selectedAdvancedFilter = t
                }
                get selectedAdvancedFilter() {
                    return this._selectedAdvancedFilter
                }
                constructor(t, a) {
                    this._apiService = t,
                    this._web3UtilsService = a,
                    this._customAdvancedFilters = [],
                    this._customAdvancedFiltersChange$ = new wn.x,
                    this.customAdvancedFiltersChange$ = this._customAdvancedFiltersChange$.asObservable(),
                    this._selectedAdvancedFilter = null
                }
                getPairList(t, a=Bo.pairList) {
                    null != t.chain && (t.chain = z.getLegacyChain(t.chain));
                    const r = new Oa.LE({
                        fromObject: {
                            ...t
                        }
                    });
                    return this._apiService.get("shared_url", a === Bo.pairList ? `/analytics/${a}` : `/analytics/pairs/${a}`, r).pipe((0,
                    _e.U)(f=>({
                        pairDataList: (f?.data ?? []).filter(O=>Zt.includes(z.replaceLegacyChain(O._id.chain))).map(O=>(O._id.chain = z.replaceLegacyChain(O._id.chain),
                        {
                            ...O
                        })),
                        count: f?.data?.length ?? 0
                    })))
                }
                formatData(t, a) {
                    const r = [];
                    for (const i of t)
                        if (i?.pair?.symbol) {
                            const f = lt.isStableNativePair(i.pair.type)
                              , C = z.isEVMChain(i._id.chain) ? this._web3UtilsService.toChecksumAddress(i._id.token) : i._id.token
                              , O = i.priceDiff ? i.priceDiff : this.getPriceVariation(i.price, i[`price ${a}`])
                              , $ = z.getChainData(i._id.chain);
                            r.push({
                                id: i._id.pair,
                                checksum: C,
                                idToken: i._id.token,
                                symbol: f ? i.pair.symbolRef : i.pair.symbol,
                                symbol_vs: f ? i.pair.symbol : i.pair.symbolRef,
                                realName: i?.pair?.name ?? "",
                                exchange: i._id.exchange,
                                chainLogo: $?.logoUrl ?? "",
                                chain: i._id.chain,
                                txCount: i.token?.metrics.txCount ?? 0,
                                holders: i.token?.metrics.holders ?? 0,
                                totalMarketCap: i.token?.metrics.fdv ?? 0,
                                liquidity: i.pair?.metrics?.liquidity ?? 0,
                                price: i.price,
                                price24h: i.price24h,
                                price6h: i.price6h ?? 0,
                                price1h: i.price1h ?? 0,
                                price5m: i.price5m ?? 0,
                                volume: i.volume ? i.volume : i[`volume ${a}`] ?? 0,
                                swaps: i.swaps ? i.swaps : i[`swaps ${a}`] ?? 0,
                                volume24h: i.volume24h,
                                volume6h: i.volume6h,
                                volume1h: i.volume1h,
                                volume5m: i.volume5m,
                                swaps24h: i.swaps24h,
                                swaps6h: i.swaps6h ?? 0,
                                swaps1h: i.swaps1h ?? 0,
                                swaps5m: i.swaps5m ?? 0,
                                priceVariation: O,
                                priceVariationFormatted: this._formatPriceVariation(O),
                                dextScore: i.pair.dextScore ? i.pair.dextScore.total : 0,
                                audit: i.token?.audit && $?.contractAuditSupported ? i.token.audit : void 0,
                                logo: i.token?.logo && lt.normalizeLogoUrl(i.token.logo),
                                creationTime: i.pair?.creationTime ? new Date(i.pair?.creationTime).getTime() : 0
                            })
                        } else
                            console.log("Missing pair info:", i._id.pair);
                    return r
                }
                getPriceVariation(t, a) {
                    if (t && a) {
                        const r = t > a ? (t - a) / a * 100 : (a - t) / a * 100;
                        return t > a ? Math.abs(r) : -Math.abs(r)
                    }
                    return 0
                }
                _formatPriceVariation(t) {
                    const a = Math.abs(t).toFixed(2);
                    return U.C6.formatNumber(+a, 2)
                }
                getCustomAdvancedFilters() {
                    return this._apiService.get("shared_url", "/analytics/pairs/filters").pipe((0,
                    _e.U)(t=>{
                        for (const a of t.data)
                            "all" !== a.chain && (a.chain = z.replaceLegacyChain(a.chain)),
                            a.filter = JSON.parse(a.filter),
                            a.filter.chain = "all" === a.chain ? void 0 : z.replaceLegacyChain(a.chain),
                            a.filter.default = a.default;
                        return t.data
                    }
                    ))
                }
                saveAdvancedFilters(t) {
                    const a = this._setSaveValues(t);
                    return this._apiService.post("shared_url", "/analytics/pairs/filters", {
                        ...a,
                        filter: JSON.stringify(a.filter)
                    })
                }
                updateAdvancedFilter(t) {
                    const a = this._setSaveValues(t);
                    return this._apiService.put("shared_url", `/analytics/pairs/filters?id=${a._id}`, {
                        ...a,
                        filter: JSON.stringify(a.filter)
                    })
                }
                _setSaveValues(t) {
                    const a = {
                        name: t.name.slice(0, 25),
                        chain: z.getLegacyChain(t.chain),
                        default: t.default ?? !1,
                        filter: {}
                    };
                    t._id && (a._id = t._id),
                    t.filter = t.filter,
                    (t.filter?.creationGreaterTimeRange || t.filter?.creationLowerTimeRange) && !t.default && (t.filter.creationTimeSince = Date.now());
                    for (const r of Object.keys(t.filter))
                        ["default", "chain"].includes(r) || (a.filter[r] = t.filter[r]);
                    return a.filter.limit = ar,
                    a.filter.interval = rr,
                    a
                }
                deleteAdvancedFilters(t) {
                    return this._apiService.delete("shared_url", `/analytics/pairs/filters?id=${t}`)
                }
                saveOrUpdateStoredAdvancedFilter(t) {
                    U._R.set(ka, t)
                }
                removeStoredAdvancedFilter() {
                    U._R.delete(ka)
                }
                get storedAdvancedFilter() {
                    return U._R.get(ka)
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM),J.LFG(Aa))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const ir = "previousSearches";
        let Nc = (()=>{
            class g {
                constructor(t, a, r) {
                    this._exchangeApiService = t,
                    this._sharedApiService = a,
                    this._web3UtilsService = r,
                    this._previousSearches = []
                }
                searchPairs(t, a=[], r=null) {
                    return this._sharedApiService.searchPairs(t, a, r).pipe((0,
                    Je.b)(i=>{
                        i.info.chainsTotal.forEach(f=>{
                            f._id = z.replaceLegacyChain(f._id)
                        }
                        ),
                        i.results.forEach(f=>{
                            f.id.chain = z.replaceLegacyChain(f.id.chain)
                        }
                        )
                    }
                    ))
                }
                searchPairsByChain(t, a=[], r=null) {
                    return this._sharedApiService.searchPairsByChains(t, a, r).pipe((0,
                    Je.b)(i=>{
                        i.info.chainsTotal.forEach(f=>{
                            f._id = z.replaceLegacyChain(f._id)
                        }
                        ),
                        i.results.forEach(f=>{
                            f.id.chain = z.replaceLegacyChain(f.id.chain)
                        }
                        )
                    }
                    ))
                }
                searchPairsByToken(t, a) {
                    return this._exchangeApiService.getAdapter(a).getPairsByToken(t)
                }
                searchHighestLiquidityPairByToken(t, a) {
                    return this.searchPairsByToken(t, a).pipe((0,
                    _e.U)(r=>r ? [...r].sort((C,O)=>(O?.liquidity ?? 0) - (C?.liquidity ?? 0))[0] : null), (0,
                    Tn.K)(()=>(0,
                    Xe.of)(null)))
                }
                formatPairItemsWithAllData(t, a) {
                    return (t = t.filter(r=>z.isValidChain(r.chain))).map(r=>{
                        let i = {
                            id: r.id.token,
                            name: r.name,
                            symbol: r.symbol
                        }
                          , f = {
                            id: r.id.tokenRef,
                            name: r.nameRef,
                            symbol: r.symbolRef
                        };
                        const C = a ?? z.replaceLegacyChain(r.chain)
                          , O = z.isEVMChain(C) ? this._web3UtilsService.toChecksumAddress(i.id) : i.id;
                        lt.isStableNativePair(r.type) && (f = {
                            id: r.id.token,
                            name: r.name,
                            symbol: r.symbol
                        },
                        i = {
                            id: r.id.tokenRef,
                            name: r.nameRef,
                            symbol: r.symbolRef
                        }),
                        null == r.token.info && console.warn("Search: pair without token info:", r.id.pair);
                        let $ = 0;
                        return r && r.price && null != r.price24h && ($ = r.price && r.price24h ? +(100 * (r.price / r.price24h - 1)).toFixed(2) : 0),
                        {
                            id: r.id.pair,
                            name: i.symbol + " - " + i.name + " - " + r.id.pair + " - " + i.id,
                            checksum: O,
                            idToken: i.id,
                            symbol: i.symbol,
                            symbol_vs: f.symbol,
                            realName: i.name ?? "",
                            logo: null != r.token.logo && "" !== r.token.logo ? lt.normalizeLogoUrl(r.token.logo) : null,
                            volumeUSD: 0,
                            exchange: r.id.exchange,
                            chain: C,
                            txCount: r.token.metrics.txCount,
                            holders: r.token.metrics.holders,
                            type: ra.PAIR,
                            exchangeSpecificVersion: te.isExchangeSpecificVersion(r.id.exchange, C),
                            exchangeVersion: te.getExchangeVersion(r.id.exchange, C),
                            fee: r.fee ? r.fee : 0,
                            dextScore: r.dextScore ? {
                                ...r.dextScore,
                                total: r.dextScore.total
                            } : 0,
                            creationTime: r.creationTime ? r.creationTime : null,
                            liquidity: r.metrics?.liquidity ? r.metrics.liquidity : null,
                            price: r.price ? r.price : null,
                            price24h: r.price && r.price24h ? r.price24h : null,
                            variation24h: r.price && r.price24h ? $ : null,
                            volume: r.volume ? r.volume : null
                        }
                    }
                    )
                }
                formatPairsToken(t, a) {
                    return t.map(r=>{
                        const i = lt.isStableNativePair(r.type) ? "tokenRef" : "token"
                          , f = lt.isStableNativePair(r.type) ? "token" : "tokenRef"
                          , C = a ?? z.replaceLegacyChain(r.chain);
                        return {
                            id: r.address,
                            name: r[i].symbol + " - " + r[i].name + " - " + r.address + " - " + r[i].id,
                            checksum: z.isEVMChain(C) ? this._web3UtilsService.toChecksumAddress(r[i].id) : r[i].id,
                            idToken: r[i].id,
                            symbol: r[i].symbol,
                            symbol_vs: r[f].symbol,
                            realName: r[i].name ?? "",
                            volumeUSD: +r.volumeUSD,
                            volume24h: r.volume24h,
                            exchange: r.exchange,
                            chain: C,
                            txCount: r.custom?.info?.txCount ? r.custom.info.txCount : r.txCount,
                            holders: r.custom?.info?.holders ? r.custom.info.holders : r.holders || r.holdersCount,
                            logo: null != r.custom?.info?.logo ? `${ja}${r.custom.info.logo}` : void 0,
                            exchangeSpecificVersion: te.isExchangeSpecificVersion(r.exchange, C),
                            exchangeVersion: te.getExchangeVersion(r.exchange, C),
                            fee: r.fee ? r.fee : 0,
                            liquidity: r?.liquidity ?? 0,
                            price: r?.price ?? 0,
                            price24h: r?.price24h ?? 0,
                            priceVariation24h: r?.price && r?.price24h ? this._calculatePriceVariation(r) : 0,
                            lineChartColor: this.getCandleColor(r),
                            candles: [...r.candles]
                        }
                    }
                    )
                }
                _calculatePriceVariation(t) {
                    const a = t.price > t.price24h ? (t.price - t.price24h) / t.price24h * 100 : (t.price24h - t.price) / t.price24h * 100;
                    return t.price > t.price24h ? Math.abs(a) : -Math.abs(a)
                }
                getCandleColor(t) {
                    return t.price && t.price24h ? t.price > t.price24h ? "#17c671" : "#ea3943" : "#818ea3"
                }
                setPreviousSearches(t) {
                    this._previousSearches = this.getPreviousSearches(),
                    this._previousSearches.some(a=>a.address === t.address) || (5 === this._previousSearches.length && this._previousSearches.shift(),
                    this._previousSearches.push(t),
                    U._Z.setString(ir, JSON.stringify(this._previousSearches)))
                }
                getPreviousSearches(t="all") {
                    return this._previousSearches = JSON.parse(U._Z.getString(ir)) ?? [],
                    "tokens" === t && this._previousSearches.length > 0 ? this._previousSearches.filter(a=>!this.isSearchData(a)) : "pairs" === t && this._previousSearches.length > 0 ? this._previousSearches.filter(a=>this.isSearchData(a)) : this._previousSearches
                }
                isSearchData(t) {
                    return null != t.symbol_vs
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Ht),J.LFG(Vt),J.LFG(Aa))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        let $c = (()=>{
            class g {
                get localStoragePositionsKey() {
                    return this._exchangeService.isBsc ? "positionsSavedCake" : "positionsSaved"
                }
                constructor(t, a, r, i) {
                    this._apiService = t,
                    this._authService = a,
                    this._exchangeService = r,
                    this._exchangeApiService = i,
                    this._positionsKey = "",
                    this._positions$ = new Qe.X(null),
                    this._authService.currentUser$.pipe((0,
                    Je.b)(f=>{
                        this._positionsKey = f ? this.localStoragePositionsKey : "myPositions"
                    }
                    )).subscribe()
                }
                get positions$() {
                    return null === this._positions$.value && (this._manageUserPositions(),
                    this._interval = setInterval(()=>{
                        this._positions$.observed ? this._manageUserPositions() : (this._positions$.next(null),
                        clearInterval(this._interval))
                    }
                    , 15e3)),
                    this._positions$.asObservable().pipe((0,
                    mt.h)(t=>null !== t))
                }
                _getPositions(t=this._positionsKey) {
                    return JSON.parse(U._Z.getString(t)) || {}
                }
                _savePosition(t) {
                    const a = Object.assign({}, this._getPositions(this._positionsKey), t);
                    U._Z.set(this._positionsKey, a)
                }
                getPositionsCall() {
                    const t = this._exchangeApiService.getAdapter(this._exchangeService.chain ?? n.Ethereum);
                    return this._apiService.get(t.apiUrl, `${R}positions`).pipe((0,
                    _e.U)(a=>a.data ?? []))
                }
                addEditPositionsCall(t) {
                    const a = this._exchangeApiService.getAdapter(this._exchangeService.chain ?? n.Ethereum);
                    return this._apiService.post(a.apiUrl, `${R}positions`, t).pipe((0,
                    _e.U)(r=>r.data ?? []))
                }
                deletePositionsCall(t) {
                    const a = this._exchangeApiService.getAdapter(this._exchangeService.chain ?? n.Ethereum);
                    return this._apiService.delete(a.apiUrl, `${R}positions?_id=${t}`)
                }
                _manageUserPositions() {
                    const t = this._authService.getCurrentUserValue();
                    null != t && [Te.uU.P100, Te.uU.P20].includes(t.plan) && this.getPositionsCall().pipe((0,
                    Je.b)(r=>{
                        const i = {};
                        if (r.length > 0)
                            for (const f of r) {
                                i[f.pair] || (i[f.pair] = []);
                                const C = {
                                    amount: f.amount.toString(),
                                    price_usd: f.priceUsd.toString(),
                                    price_eth: f.priceEth.toString(),
                                    _id: f._id
                                };
                                i[f.pair].push(C)
                            }
                        this.saveAndEmitPositions(i)
                    }
                    )).subscribe()
                }
                saveAndEmitPositions(t) {
                    this._savePosition(t),
                    this._positions$.next(t)
                }
                positionsToNumber(t) {
                    return {
                        amount: "number" == typeof t.amount ? +t.amount.toFixed(25) : t.amount,
                        priceUsd: "number" == typeof t.amount ? +t.priceUsd.toFixed(25) : t.priceUsd,
                        priceEth: "number" == typeof t.amount ? +t.priceEth.toFixed(25) : t.priceEth,
                        pair: t.pair
                    }
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM),J.LFG(Te.$h),J.LFG(An),J.LFG(Ht))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var Ta = m(62843)
          , Ea = m(60515);
        class Zc {
            constructor(u, t, a, r, i=!0) {
                this.chain = u,
                this.name = t,
                this.receiveLatestPricesOnly = i,
                this.trackedPairs = new Set([...r]) || new Set,
                this._latestPricesSubject$ = a,
                this._trackedPairs$ = new Qe.X(new Set([...this.trackedPairs]))
            }
            get trackedPairs$() {
                return this._trackedPairs$.asObservable()
            }
            get pricesUpdates$() {
                return this._latestPricesSubject$.asObservable()
            }
            track(u) {
                u.forEach(t=>this.trackedPairs.add(z.getPairAddressFormatByChain(t, this.chain))),
                this._trackedPairs$.next(new Set([...this.trackedPairs]))
            }
            resetTrack(u=[]) {
                this.trackedPairs.clear(),
                u.forEach(t=>this.trackedPairs.add(z.getPairAddressFormatByChain(t, this.chain))),
                this._trackedPairs$.next(new Set([...this.trackedPairs]))
            }
            unTrack(u) {
                this.trackedPairs.delete(z.getPairAddressFormatByChain(u, this.chain)),
                this._trackedPairs$.next(new Set([...this.trackedPairs]))
            }
            unTrackAll() {
                this._trackedPairs$.next(new Set)
            }
        }
        var Hc = m(39841);
        let ha = (()=>{
            class g {
                constructor(t, a) {
                    this._injector = t,
                    this.environment = a,
                    this._isReconnectedInForeground$ = new wn.x,
                    this._appStatusService = this._injector.get(Te.lB)
                }
                initialize() {
                    this._webSocket = new Te.VU(this._injector,this.environment.ws_url);
                    const t = this._appStatusService.isAppOnlineAndVisible$()
                      , a = this.isConnected$().pipe((0,
                    mt.h)(r=>!!r));
                    (0,
                    Hc.a)([t, a]).subscribe(()=>{
                        this._webSocket.lastDisconnectionTs && (this._isReconnectedInForeground$.next(),
                        this._webSocket.lastDisconnectionTs = null)
                    }
                    )
                }
                listenWebSocket(t, a, r=null) {
                    return a.chain && (a.chain = z.getLegacyChain(a.chain)),
                    this._getWebsocket().subscribe(t, a, r)
                }
                isConnected$() {
                    return this._getWebsocket().isConnected$.asObservable()
                }
                errors$() {
                    return this._getWebsocket().errors$.asObservable()
                }
                _getWebsocket() {
                    return this._webSocket
                }
                closeConnection() {
                    this._getWebsocket().closeConnection()
                }
                get isReconnectedInForeground$() {
                    return this._isReconnectedInForeground$.asObservable()
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(J.zs3),J.LFG(Te.qA))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )()
          , cr = (()=>{
            class g {
                constructor(t) {
                    this._webSocketService = t,
                    this.historyLoaded$ = new Qe.X(!1),
                    this.isHistoryLoadedOnce = !1,
                    this._latestPairsPricesMap = new Map,
                    this._pairPriceTrackerMap = new Map,
                    this._pairPriceTrackerPairs = new Map,
                    this._trackerPriceMap$ = new Map,
                    this._trackedPairsPerChain = new Map,
                    this._wsSubscriptions = new Map,
                    Zt.forEach(a=>{
                        this._pairPriceTrackerMap.set(a, new Map),
                        this._pairPriceTrackerPairs.set(a, new Map),
                        this._trackerPriceMap$.set(a, new Map),
                        this._trackedPairsPerChain.set(a, new Set),
                        this._latestPairsPricesMap.set(a, new Map)
                    }
                    )
                }
                startTracking(t, a, r=new Set, i=!0) {
                    const f = `${t}${a = a.toLowerCase()}`;
                    let C = this._pairPriceTrackerMap.get(t).get(f);
                    if (C)
                        return this._updateTrackerPairs(t, a, r),
                        C;
                    const O = this._filterPricesByPairs(t, r)
                      , $ = new Qe.X(O);
                    return C = new Zc(t,a,$,r,i),
                    this._pairPriceTrackerMap.get(t).set(f, C),
                    this._pairPriceTrackerPairs.get(t).set(f, r),
                    this._trackerPriceMap$.get(t).set(f, $),
                    this._listenTrackerNewPairs(t, C),
                    this._emitPrices(t, [...this._latestPairsPricesMap.get(t).values()], [C]),
                    this._trackPairs(t, r),
                    C
                }
                getPairPrice(t, a) {
                    return this._latestPairsPricesMap.get(t).get(a)
                }
                updatePairPrice(t, a) {
                    this._updatePairsPrices(t, [a])
                }
                getPairsTracker(t, a) {
                    return this._pairPriceTrackerMap.get(t)?.get(a)
                }
                _updateTrackerPairs(t, a, r) {
                    const i = `${t}${a}`
                      , f = this._pairPriceTrackerPairs.get(t).get(i)
                      , C = [...r.values()].filter($=>!f.has($))
                      , O = [...f].filter($=>!r.has($));
                    (C.length || O.length) && (this._pairPriceTrackerPairs.get(t).set(i, r),
                    this._trackPairs(t, new Set(C)),
                    this._emitPrices(t, null, [this._pairPriceTrackerMap.get(t).get(i)]))
                }
                _handlePricesCallOutput(t, a) {
                    0 !== a.prices.length && this._updatePairsPrices(t, a.prices)
                }
                _updatePairsPrices(t, a) {
                    const r = new Map(a.map(C=>[C.id, C]))
                      , f = [...this._latestPairsPricesMap.get(t)].concat([...r]).reduce((C,O)=>(C.set(O[0], {
                        ...C.get(O[0]) || {},
                        ...O[1]
                    }),
                    C), new Map);
                    this._latestPairsPricesMap.set(t, f),
                    !1 === this.historyLoaded$.value && this.historyLoaded$.next(!0),
                    this._emitPrices(t, a, [...this._pairPriceTrackerMap.get(t).values()])
                }
                _emitPrices(t, a=null, r) {
                    r.filter(i=>i.chain === t).forEach(i=>{
                        const f = this._pairPriceTrackerPairs.get(t).get(`${i.chain}${i.name}`);
                        let C = a;
                        if (i.receiveLatestPricesOnly && (C = [...this._latestPairsPricesMap.get(t).values()]),
                        C && C.length && (C = C.filter(O=>f.has(O.id)),
                        C && C.length)) {
                            const O = this._trackerPriceMap$.get(t).get(`${i.chain}${i.name}`);
                            O && O.next(C)
                        }
                    }
                    )
                }
                _trackPairs(t, a) {
                    const r = this._getAllTrackedPairsInChain(t);
                    if (this._trackedPairsPerChain.set(t, r),
                    a.size > 0) {
                        const i = this._listenWebSocketPrices(t, a).subscribe();
                        this._removeChainWsSubscription(t),
                        this._wsSubscriptions.set(t, i)
                    } else
                        0 === r.size && this._removeChainWsSubscription(t)
                }
                _getAllTrackedPairsInChain(t) {
                    return new Set([...this._pairPriceTrackerPairs.get(t).values()].reduce((a,r)=>(a.push(...r.values()),
                    a), []))
                }
                _removeChainWsSubscription(t) {
                    this._wsSubscriptions.has(t) && (this._wsSubscriptions.get(t).unsubscribe(),
                    this._wsSubscriptions.delete(t))
                }
                _filterPricesByPairs(t, a) {
                    return 0 === a.size || 0 === this._latestPairsPricesMap.get(t).size ? [] : [...this._latestPairsPricesMap.get(t).values()].filter(r=>a.has(r.id))
                }
                _listenTrackerNewPairs(t, a) {
                    a.trackedPairs$.pipe((0,
                    Je.b)(r=>{
                        this._updateTrackerPairs(t, a.name, r)
                    }
                    )).subscribe()
                }
                _listenWebSocketPrices(t, a) {
                    return this._webSocketService.listenWebSocket(z.getChainPrefix(t) + ":prices", {
                        chain: t,
                        pairs: [...a.keys()]
                    }, (r,i)=>({
                        pairs: [...new Set(r.pairs.concat(i.pairs))]
                    })).pipe((0,
                    Je.b)(r=>{
                        this._handlePricesCallOutput(t, {
                            prices: r.length ? r : [r]
                        })
                    }
                    ), (0,
                    Tn.K)(r=>(console.error("Prices: could not connect to real-time data source", r),
                    (0,
                    Xe.of)([]))))
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(ha))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const La = "recipients"
          , Ot = "newPriceAlerts"
          , eo = "issuedPriceAlerts"
          , Zo = "checkedAlerts"
          , Ia = 7 * U.HR
          , Yc = 200;
        let zc = (()=>{
            class g {
                constructor(t, a, r, i, f, C, O) {
                    this._apiService = t,
                    this._authenticationService = a,
                    this._exchangeService = r,
                    this._exchangeApiService = i,
                    this._sharedApiService = f,
                    this._priceTrackService = C,
                    this._webSocketService = O,
                    this._supportedChains = U.lM.convertEnumToArray(n),
                    this._pairPriceTracker = {},
                    this._trackerName = Ot,
                    this._alertStatus = {},
                    this._alertsCounters = {},
                    this._userData = null,
                    this._uncheckedPairAlertsMap = new Map,
                    this._unsubscribePriceAlerts$ = new wn.x,
                    this._alertsMapUpdated$ = new Qe.X(null),
                    this._priceAlertsIssued$ = new Qe.X([]),
                    this._authenticationService.currentUser$.subscribe($=>{
                        this._userData = $
                    }
                    ),
                    this._issuedPriceAlertsMap = U._Z.getMap(eo),
                    this._subscribeToPriceAlerts(this._supportedChains)
                }
                get priceAlertsIssued$() {
                    return this._priceAlertsIssued$.asObservable().pipe((0,
                    mt.h)(t=>t.length > 0))
                }
                getAlertsCounterByChain(t) {
                    return this._alertsCounters[t] ?? 0
                }
                _setAlertsCounterByChain(t, a) {
                    this._alertsCounters[t] = a
                }
                _addAlert(t) {
                    const a = this._getAlertsFromStorage()
                      , r = a.get(t.pair) || [];
                    r.push(t),
                    a.set(t.pair, r),
                    U._Z.mergeToMap(Ot, a),
                    this._userData || this._pairPriceTracker[t.chain].track(new Set([t.pair]))
                }
                _updateAlert(t, a) {
                    const r = this._getAlertsFromStorage()
                      , i = r.get(t.pair)
                      , C = i[this._findAlertIndex(t, i)];
                    C.createdAt = a.createdAt,
                    C.price = a.price,
                    C.state = a.state,
                    C.alertType = a.alertType,
                    C.matchedAt = a.matchedAt,
                    C.matchedAtBrowser = a.matchedAtBrowser,
                    U._Z.setMap(Ot, r),
                    this._removeFromIssued(t)
                }
                _removeAlert(t) {
                    const a = this._getAlertsFromStorage()
                      , r = a.get(t.pair)
                      , i = this._findAlertIndex(t, r);
                    r.splice(i, 1),
                    0 === r.length ? (this._userData || this._pairPriceTracker[t.chain].unTrack(t.pair),
                    U._Z.removeFromMap(Ot, t.pair)) : U._Z.setMap(Ot, a),
                    this._removeFromIssued(t)
                }
                isExpired(t) {
                    return null != t.expiredAt
                }
                postAlertNotification(t, a=null) {
                    if (!this._userData) {
                        const r = {
                            ...t,
                            _id: t._id || `${t.pair}${t.price}`,
                            createdAt: new Date,
                            wallet: Te.A7
                        };
                        return a ? this._updateAlert(a, r) : this._addAlert(r),
                        (0,
                        Xe.of)(r)
                    }
                    return this._areAlertsSupportedInChain(t.chain) ? this._sharedApiService.savePriceAlert({
                        _id: t._id,
                        price: t.price,
                        pair: t.pair,
                        chain: t.chain,
                        symbol: t.symbol
                    }).pipe((0,
                    _e.U)(r=>({
                        ...r,
                        chain: t.chain
                    })), (0,
                    Je.b)(r=>{
                        a ? this._updateAlert(a, r) : this._addAlert(r)
                    }
                    ), (0,
                    Tn.K)(r=>r.error && r.error.error && "Max number of alerts" === r.error.error.desc ? (0,
                    Xe.of)("Max alerts reached") : (0,
                    Ta._)(r))) : Ea.E
                }
                deleteAlertNotification(t, a) {
                    return this._userData ? this._areAlertsSupportedInChain(a) ? this._sharedApiService.deletePriceAlert(t._id).pipe((0,
                    Je.b)(()=>this._removeAlert(t))) : Ea.E : (this._removeAlert(t),
                    (0,
                    Xe.of)(t))
                }
                getAlertRecipients() {
                    const t = this._exchangeApiService.getAdapterForDefaultExchangeLegacy();
                    return this._apiService.get(t.apiUrl, R + La).pipe((0,
                    _e.U)(a=>a.data))
                }
                postAlertRecipientTg(t) {
                    const a = this._exchangeApiService.getAdapterForDefaultExchangeLegacy();
                    return this._apiService.post(a.apiUrl, R + La + "/telegram", t)
                }
                postAlertRecipientEmail(t) {
                    const a = this._exchangeApiService.getAdapterForDefaultExchangeLegacy();
                    return this._apiService.post(a.apiUrl, R + La + "/email", t)
                }
                setAlertStatus(t) {
                    t.email && (this._alertStatus.email = t.email),
                    t.telegram && (this._alertStatus.telegram = t.telegram)
                }
                getAlertStatus() {
                    return this._alertStatus
                }
                refreshAlertsCountersForAllChains() {
                    if (null == this._userData) {
                        const t = this._getAlertsFromStorage();
                        let a = 0;
                        for (const r of t.values()) {
                            a += r.length;
                            for (const i of r)
                                !i.expiredAt && new Date(i.createdAt).getTime() < Date.now() - Ia && (i.expiredAt = new Date)
                        }
                        this._alertsCounters = {};
                        for (const r of U.lM.convertEnumToArray(n))
                            this._setAlertsCounterByChain(r, a),
                            this._alertsMapUpdated$.next(t);
                        return (0,
                        Xe.of)("counters refreshed")
                    }
                    return this._sharedApiService.getAlertsFromUser().pipe((0,
                    _e.U)(t=>{
                        this._alertsCounters = {};
                        for (const a of t)
                            this._setAlertsCounterByChain(a.chain, a.count);
                        return this._alertsMapUpdated$.next(this._constructPriceAlertsMap(t)),
                        "counters refreshed"
                    }
                    ))
                }
                getStoredPriceAlertsMapForAllChains() {
                    if (null == this._userData) {
                        const t = this._getAlertsFromStorage();
                        let a = 0;
                        for (const r of t.values()) {
                            a += r.length;
                            for (const i of r)
                                !i.expiredAt && new Date(i.createdAt).getTime() < Date.now() - Ia && (i.expiredAt = new Date)
                        }
                        this._alertsCounters = {};
                        for (const r of U.lM.convertEnumToArray(n))
                            this._setAlertsCounterByChain(r, a);
                        return (0,
                        Xe.of)(t)
                    }
                    return this._sharedApiService.getAlertsFromUser().pipe((0,
                    _e.U)(t=>{
                        const a = this._constructPriceAlertsMap(t);
                        return this._alertsMapUpdated$.next(a),
                        a
                    }
                    ))
                }
                _constructPriceAlertsMap(t) {
                    const a = new Map
                      , r = new Date;
                    this._alertsCounters = {};
                    for (const i of t) {
                        this._setAlertsCounterByChain(i.chain, i.count);
                        for (const f of i.pairs) {
                            let C = 0
                              , O = 0
                              , $ = 0;
                            for (let W = 0; W < f.count; W++) {
                                let q, Se, Re, ae = "pending";
                                $ < f.matched ? (ae = "matched",
                                Se = f.lastMatch ?? r,
                                Re = f.lastMatch ?? r,
                                $++) : O < f.expired ? (ae = "expired",
                                q = r,
                                O++) : C < f.active && (ae = "pending",
                                C++);
                                const Ye = a.get(f.pair) || [];
                                Ye.push({
                                    chain: i.chain,
                                    pair: f.pair,
                                    wallet: this._userData?.id,
                                    symbol: `${f.symbol}`.trim() ?? "",
                                    state: ae,
                                    matchedAt: Se,
                                    matchedAtBrowser: Re,
                                    expiredAt: q,
                                    _id: "none",
                                    alertType: void 0,
                                    exchange: "unknown",
                                    price: 0,
                                    type: "alert-from-api",
                                    createdAt: new Date(0)
                                }),
                                a.set(f.pair, Ye)
                            }
                        }
                    }
                    return a
                }
                getStoredPairPriceAlerts(t, a) {
                    if (this._areAlertsSupportedInChain(t)) {
                        if (this._userData)
                            return this._getAlertsByPair(t, a).pipe((0,
                            _e.U)(r=>{
                                const i = new Map;
                                if (!r || 0 === r.length)
                                    return i;
                                this._removeStoredAlertsForChain(t);
                                for (const O of r) {
                                    const $ = i.get(O.pair) || [];
                                    this._issuedPriceAlertsMap = U._Z.getMap(eo);
                                    const W = this._issuedPriceAlertsMap.get(O.pair)
                                      , ae = W && W.find(q=>q._id === O._id);
                                    if (null == ae) {
                                        const q = this._priceTrackService.getPairPrice(t, O.pair);
                                        O.alertType = q && q.usd > O.price ? 1 : 0
                                    } else
                                        O.matchedAtBrowser = ae.matchedAtBrowser,
                                        O.alertType = ae.alertType;
                                    $.push(O),
                                    i.set(O.pair, $)
                                }
                                this._updateUncheckedAlertsForChain(t, i, a);
                                const f = U._Z.mergeToMap(Ot, i)
                                  , C = new Map;
                                for (const O of f.values()) {
                                    const $ = O.filter((W,ae)=>W.chain === t);
                                    $.length > 0 && C.set($[0].pair, $)
                                }
                                return C
                            }
                            ));
                        {
                            const r = this._getAlertsFromStorage();
                            for (const i of r.values())
                                for (const f of i)
                                    !f.expiredAt && new Date(f.createdAt).getTime() < Date.now() - Ia && (f.expiredAt = new Date);
                            return (0,
                            Xe.of)(r)
                        }
                    }
                    return Ea.E
                }
                initializeAlerts() {
                    return this.getStoredPriceAlertsMapForAllChains().pipe((0,
                    mt.h)(t=>null != t), (0,
                    Je.b)(t=>{
                        if (!this._userData) {
                            let a = this._getAnyoneAlerts(U._Z.getMap(Ot));
                            U._Z.setMap(Ot, a),
                            a = this._getAnyoneAlerts(U._Z.getMap(eo)),
                            U._Z.setMap(eo, a)
                        }
                    }
                    ))
                }
                _getAnyoneAlerts(t) {
                    const a = new Map;
                    for (const r of t.values())
                        for (const i of r)
                            if (i.wallet === Te.A7) {
                                const f = a.get(i.pair) || [];
                                f.push(i),
                                a.set(i.pair, f)
                            }
                    return a
                }
                getUncheckedPriceAlerts(t, a) {
                    return this._uncheckedPairAlertsMap.get(t) || {
                        count: 0,
                        exchange: this._exchangeService.exchange,
                        chain: a
                    }
                }
                setCheckedPair(t, a) {
                    this._uncheckedPairAlertsMap = U._Z.addToMap(Zo, t, {
                        count: 0,
                        lastChecked: new Date,
                        exchange: this._exchangeService.exchange,
                        chain: a
                    })
                }
                addUncheckedPriceAlert(t) {
                    this._uncheckedPairAlertsMap = U._Z.getMap(Zo);
                    const a = this._uncheckedPairAlertsMap.get(t) || {
                        count: 0,
                        exchange: this._exchangeService.exchange
                    };
                    a.count++,
                    this._uncheckedPairAlertsMap = U._Z.addToMap(Zo, t, a)
                }
                getNotificationsForAlerts(t, a) {
                    return t.map(r=>{
                        const i = 0 === r.alertType ? "above" : "below"
                          , f = r.price.toLocaleString(U.ti, {
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 18
                        })
                          , C = z.getChainName(r.chain)
                          , O = z.getPairAddressFormatByChain(r.pair, r.chain);
                        return {
                            id: r._id,
                            title: `Price Alert (${C}) - DEXTools.io`,
                            body: `${r.symbol} went ${i}: $ ${f}`,
                            returnPath: `/${r.chain}/${a}/${O}`
                        }
                    }
                    )
                }
                stopAlerts() {
                    this._unsubscribePriceAlerts$.next(),
                    this._unsubscribePriceAlerts$.complete()
                }
                _subscribeToPriceAlerts(t) {
                    if (this._userData)
                        this._webSocketService.listenWebSocket("shared:user:alerts", {
                            auth: this._authenticationService.authToken
                        }).pipe((0,
                        tr.R)(this._unsubscribePriceAlerts$)).subscribe({
                            next: a=>{
                                const r = this._getAlertsFromStorage()
                                  , i = []
                                  , f = this._issuedPriceAlertsMap.get(a.pair.id) || [];
                                if (f.some(O=>O._id === a.alert.id))
                                    return;
                                let C = r.get(a.pair.id)?.find(O=>O._id === a.alert.id);
                                C || (C = {
                                    _id: a.alert.id,
                                    alertType: a.price.old > a.price.actual ? 1 : 0,
                                    chain: a.pair.chain,
                                    exchange: a.pair.exchange,
                                    pair: a.pair.id,
                                    price: a.price.actual,
                                    symbol: a.pair.token.symbol,
                                    wallet: this._userData?.id,
                                    type: "missing-type",
                                    createdAt: new Date(0),
                                    state: "matched",
                                    matchedAt: new Date,
                                    matchedAtBrowser: new Date
                                }),
                                C.state = "matched",
                                C.matchedAt = new Date,
                                C.matchedAtBrowser = new Date,
                                i.push(C),
                                f.push(C),
                                this._issuedPriceAlertsMap.set(C.pair, f),
                                i.length > 0 && (U._Z.setMap(Ot, r),
                                this._issuedPriceAlertsMap = U._Z.setMap(eo, this._issuedPriceAlertsMap),
                                this._priceAlertsIssued$.next(i))
                            }
                            ,
                            error: a=>{
                                console.error("PriceAlerts: could not connect to real-time data source", a)
                            }
                        });
                    else {
                        const a = this._getAlertsFromStorage();
                        for (const r of t) {
                            const i = new Set;
                            [...a.keys()].forEach(f=>{
                                a.get(f) && a.get(f)[0].chain === r && i.add(f)
                            }
                            ),
                            this._pairPriceTracker[r] = this._priceTrackService.startTracking(r, this._trackerName, i, !1),
                            this._pairPriceTracker[r].pricesUpdates$.pipe((0,
                            Je.b)(()=>{
                                U._Z.setDate("lastAlertCheck")
                            }
                            ), (0,
                            mt.h)(f=>f.length > 0)).subscribe(f=>{
                                const C = this._getAlertsFromStorage()
                                  , O = [];
                                C.forEach(($,W)=>{
                                    const ae = f.filter(q=>q.id === W);
                                    0 !== ae.length && (ae.sort((q,Se)=>Se.ts - q.ts),
                                    $.filter(q=>this._isReady(q)).forEach(q=>{
                                        const Se = this._issuedPriceAlertsMap.get(q.pair) || [];
                                        if (!Se.some(Re=>Re._id === q._id))
                                            for (const Re of ae)
                                                if (Re.ts > new Date(q.createdAt).getTime() / 1e3 && (0 === q.alertType && (Re.max || Re.usd) >= q.price || 1 === q.alertType && (Re.min || Re.usd) <= q.price)) {
                                                    O.push(q),
                                                    q.matchedAtBrowser = new Date,
                                                    q.state = "matched",
                                                    Se.push(q),
                                                    this._issuedPriceAlertsMap.set(q.pair, Se);
                                                    break
                                                }
                                    }
                                    ))
                                }
                                ),
                                O.length > 0 && (U._Z.setMap(Ot, C),
                                this._issuedPriceAlertsMap = U._Z.setMap(eo, this._issuedPriceAlertsMap),
                                this._priceAlertsIssued$.next(O))
                            }
                            )
                        }
                    }
                }
                _getAlertsByPair(t, a) {
                    return this._sharedApiService.getAlertsByPair(a, t, this._userData?.id)
                }
                _isReady(t) {
                    return !this.isExpired(t) && !t.matchedAt && !t.matchedAtBrowser
                }
                _getAlertsFromStorage() {
                    return U._Z.getMap(Ot)
                }
                _findAlertIndex(t, a) {
                    return a.findIndex(r=>r._id === t._id || r.price === t.price && r.pair === t.pair)
                }
                _removeFromIssued(t) {
                    const a = U._Z.getMap(eo)
                      , r = a.get(t.pair);
                    if (r && r.length > 0) {
                        const i = r.map(f=>f._id).indexOf(t._id);
                        i >= 0 && (r.splice(i, 1),
                        a.set(t.pair, r),
                        this._issuedPriceAlertsMap = U._Z.setMap(eo, a))
                    }
                }
                _areAlertsSupportedInChain(t) {
                    return this._supportedChains.includes(t)
                }
                _removeStoredAlertsForChain(t) {
                    const a = U._Z.getMap(Ot)
                      , r = new Map;
                    U._Z.delete(Ot),
                    a.forEach(i=>{
                        const f = i.filter((C,O)=>C.chain !== t);
                        f.length > 0 && r.set(f[0].pair, f)
                    }
                    ),
                    U._Z.setMap(Ot, r)
                }
                updateUncheckedAlertsForAllChains(t) {
                    this._uncheckedPairAlertsMap = U._Z.getMap(Zo);
                    for (const [a,r] of t.entries())
                        this._updateUncheckedAlerts(a, r)
                }
                _updateUncheckedAlertsForChain(t, a, r) {
                    this._uncheckedPairAlertsMap = U._Z.getMap(Zo);
                    for (const [i,f] of a.entries()) {
                        const C = f.filter(O=>O.matchedAtBrowser || O.matchedAt);
                        i === r || 0 === C.length ? this._markAllAlertsFromPairAsChecked(i, t) : this._updateUncheckedAlerts(i, f, t)
                    }
                    U._Z.setMap(Zo, this._uncheckedPairAlertsMap)
                }
                _markAllAlertsFromPairAsChecked(t, a) {
                    this._uncheckedPairAlertsMap.set(t, {
                        count: 0,
                        lastChecked: new Date,
                        exchange: this._exchangeService.exchange,
                        chain: a
                    })
                }
                _updateUncheckedAlerts(t, a, r=null) {
                    const i = a.filter(C=>C.matchedAtBrowser || C.matchedAt)
                      , f = this._uncheckedPairAlertsMap.get(t);
                    if (f && f.lastChecked) {
                        const C = new Date(f.lastChecked)
                          , O = a.filter($=>new Date($.matchedAt ?? 0) > C || new Date($.matchedAtBrowser ?? 0) > C);
                        this._uncheckedPairAlertsMap.set(t, {
                            count: O.length,
                            lastChecked: f.lastChecked,
                            exchange: this._exchangeService.exchange,
                            chain: r ?? a[0].chain
                        })
                    } else
                        this._uncheckedPairAlertsMap.set(t, {
                            count: i.length,
                            exchange: this._exchangeService.exchange,
                            chain: r ?? a[0].chain
                        })
                }
                get alertsMapUpdated$() {
                    return this._alertsMapUpdated$.asObservable()
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM),J.LFG(Te.$h),J.LFG(An),J.LFG(Ht),J.LFG(Vt),J.LFG(cr),J.LFG(ha))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var Gc = m(75625);
        let Kc = (()=>{
            class g {
                constructor(t, a, r) {
                    this._apiService = t,
                    this._sharedApiService = a,
                    this._environment = r
                }
                getDextTotalBurn() {
                    return this._sharedApiService.getDextBurn().pipe((0,
                    Gc.X)({
                        count: 5,
                        delay: 5e3
                    }), (0,
                    Tn.K)(()=>(0,
                    Xe.of)({
                        resume: {
                            social: 0,
                            aggregator: 0,
                            news: 0,
                            subs: 0
                        },
                        detail: []
                    })), (0,
                    _e.U)(t=>{
                        let a = 0;
                        const r = new Set(["social", "aggregator"]);
                        for (const [i,f] of Object.entries(t.resume))
                            r.has(i) && (a += f);
                        return a
                    }
                    ))
                }
                updatePairAndTokenData(t, a, r, i, f) {
                    return this._apiService.postUrl(this._environment.paths && this._environment.paths.token.update(t, a.toLowerCase(), r.toLowerCase(), i, f)).pipe((0,
                    _e.U)(C=>C.data))
                }
                updateAudit(t, a, r=!1) {
                    return this._apiService.postUrl(this._environment.paths && this._environment.paths.token.audit(t, a.toLowerCase(), r)).pipe((0,
                    _e.U)(i=>i.data))
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM),J.LFG(Vt),J.LFG(Te.qA))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var Jc = m(14818)
          , lr = m(83353);
        const ur = "tokensWithLogoList"
          , hr = "tokensWithoutLogoList"
          , Da = "tokensWithoutLogoListTimestamp";
        let jc = (()=>{
            class g {
                constructor(t, a) {
                    this._platform = t,
                    this._sharedApiService = a,
                    this._requestedLogos$ = new Qe.X(null),
                    this._tokensWithLogoList = {},
                    this._tokensWithLogoIdList = [],
                    this._tokensWithoutLogoList = {},
                    this._tokensWithoutLogoIdList = [],
                    this._maxItemsInList = 50,
                    this.fetchedLogos$ = new Qe.X({}),
                    this._maxItemsInList = this._platform.isBrowser ? 50 : 20
                }
                initialize() {
                    this._getInfoFromLocalStorage(),
                    this._requestedLogos$.pipe((0,
                    Jc.e)(250)).subscribe(t=>{
                        t = [...new Set(t)];
                        let a = -1
                          , r = -1;
                        t.forEach(i=>{
                            a = this._tokensWithLogoIdList.indexOf(i),
                            -1 === a && (r = this._tokensWithoutLogoIdList.indexOf(i))
                        }
                        ),
                        -1 === a && -1 === r && this._getLogos(t.filter(i=>i && -1 === this._tokensWithLogoIdList.indexOf(i) && -1 === this._tokensWithoutLogoIdList.indexOf(i)))
                    }
                    )
                }
                fetchLogo(t, a) {
                    const r = `${z.getLegacyChain(t)}:${a}`;
                    return this._requestedLogos$.next(r),
                    this.fetchedLogos$.pipe((0,
                    _e.U)(i=>i[r] ? lt.normalizeLogoUrl(i[r]) : ""))
                }
                _getLogos(t) {
                    0 !== t.length && this._sharedApiService.getLogos(t).pipe((0,
                    Je.b)(a=>{
                        a.data && (a.data.forEach(r=>{
                            this._populateTokensList(r, r.logo ? "withLogo" : "withoutLogo")
                        }
                        ),
                        this.fetchedLogos$.next({
                            ...this._tokensWithLogoList,
                            ...this._tokensWithoutLogoList
                        }))
                    }
                    )).subscribe()
                }
                _getInfoFromLocalStorage() {
                    this._tokensWithLogoList = this._areLogosExpired(U._Z.getString(Da)) ? {} : JSON.parse(U._Z.getString(ur) || "{}"),
                    this._tokensWithLogoIdList = Object.keys(this._tokensWithLogoList),
                    this._tokensWithoutLogoList = this._areLogosExpired(U._Z.getString(Da)) ? {} : JSON.parse(U._Z.getString(hr) || "{}"),
                    this._tokensWithoutLogoIdList = Object.keys(this._tokensWithoutLogoList),
                    this.fetchedLogos$.next({
                        ...this._tokensWithLogoList,
                        ...this._tokensWithoutLogoList
                    })
                }
                _populateTokensList(t, a) {
                    "withLogo" === a ? (this._tokensWithLogoList = {
                        ...this._formatLogoResponse(t),
                        ...this._tokensWithLogoList
                    },
                    this._tokensWithLogoList = this._getNFirstLogos({
                        ...this._tokensWithLogoList
                    }),
                    this._tokensWithLogoIdList = Object.keys(this._tokensWithLogoList),
                    U._Z.setString(ur, JSON.stringify(this._tokensWithLogoList)),
                    U._Z.setString("tokensWithLogoListTimestamp", JSON.stringify(new Date))) : (this._tokensWithoutLogoList = {
                        ...this._formatLogoResponse(t),
                        ...this._tokensWithoutLogoList
                    },
                    this._tokensWithoutLogoList = this._getNFirstLogos({
                        ...this._tokensWithoutLogoList
                    }),
                    this._tokensWithoutLogoIdList = Object.keys(this._tokensWithoutLogoList),
                    U._Z.setString(hr, JSON.stringify(this._tokensWithoutLogoList)),
                    U._Z.setString(Da, JSON.stringify(new Date)))
                }
                _formatLogoResponse(t) {
                    const a = {};
                    return a[`${t.id.chain}:${t.id.token}`] = t.logo ?? "",
                    a
                }
                _getNFirstLogos(t) {
                    return Object.keys(t).slice(0, this._maxItemsInList).reduce((a,r)=>(a[r] = t[r],
                    a), {})
                }
                _areLogosExpired(t) {
                    const a = 6 * U.rP
                      , r = t ? new Date(JSON.parse(t)).getTime() : null;
                    return !r || Date.now() - r > a
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(lr.t4),J.LFG(Vt))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )()
          , Xc = (()=>{
            class g {
                constructor(t) {
                    this._sharedApiService = t
                }
                getTrendingList(t, a=null) {
                    return this._sharedApiService.getTrendingList(t, a)
                }
                getSocialUpdatedTrendingList(t=null) {
                    return this._sharedApiService.getSocialUpdatedTrendingList(t)
                }
                formatTrendingList(t, a=!1, r) {
                    const i = r && Object.keys(r).length || 0;
                    return t.map((f,C)=>{
                        let O = null;
                        if (!a && i > 0)
                            if (r[f._id.pair]) {
                                const W = r[f._id.pair].position;
                                O = W < C ? {
                                    arrow: "angle-double-down",
                                    color: "sell-color"
                                } : W > C ? {
                                    arrow: "angle-double-up",
                                    color: "buy-color"
                                } : r[f._id.pair].move
                            } else
                                O = {
                                    arrow: "plus",
                                    color: "text-warning"
                                };
                        const $ = {
                            move: O,
                            pair: f._id.pair,
                            symbol: lt.isStableNativePair(f.pair.type) ? f.pair.symbolRef : f.pair.symbol,
                            symbolRef: lt.isStableNativePair(f.pair.type) ? f.pair.symbol : f.pair.symbolRef,
                            position: C,
                            price: f.price ?? 0,
                            priceInterval: f.priceInterval ?? 0,
                            chain: f._id.chain,
                            priceDiff: f.priceDiff ?? 0,
                            logo: f.token?.logo && lt.normalizeLogoUrl(f.token.logo),
                            name: f.pair.name
                        };
                        return r[f._id.pair] = $,
                        $
                    }
                    )
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Vt))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var el = m(49521)
          , gr = m(49808)
          , tl = m(4128);
        let nl = (()=>{
            class g {
                constructor(t, a, r, i) {
                    this._authenticationService = t,
                    this._environment = a,
                    this._platform = r,
                    this._settingsService = i,
                    this._isOpen = !1,
                    this._theme = "dark",
                    this._themeVariables = {
                        dark: {
                            "--w3m-accent-fill-color": "#0b1217",
                            "--w3m-accent-color": "#00b8d8",
                            "--w3m-background-color": "#00b8d8",
                            "--w3m-color-bg-1": "#0b1217"
                        },
                        light: {
                            "--w3m-accent-fill-color": "#f4f5f6",
                            "--w3m-accent-color": "#3d5170",
                            "--w3m-background-color": "#3d5170",
                            "--w3m-color-bg-1": "#f4f5f6"
                        }
                    },
                    this._connectedWallet = null,
                    this._connectedTo$ = new Qe.X(null),
                    this._onAccountChange$ = new Qe.X(null),
                    this._isInitialLoad = !0,
                    this._settingsService.onThemeChange$.subscribe(f=>{
                        this._theme = f === Te.Q2.Dark ? "dark" : "light",
                        this._modal?.setTheme({
                            themeMode: this._theme,
                            themeVariables: this._themeVariables[this._theme]
                        })
                    }
                    ),
                    this._connectedWallet = this._authenticationService.getCurrentUserValue()?.id ?? null
                }
                get connectedTo$() {
                    return this._connectedTo$.asObservable()
                }
                get onAccountChange$() {
                    return this._onAccountChange$.asObservable()
                }
                get isLoaded$() {
                    return this._modal || this._environment.static_generation ? (0,
                    Xe.of)(!0) : (0,
                    Ln.D)(this._load()).pipe((0,
                    At.q)(1), (0,
                    _e.U)(()=>!0))
                }
                open() {
                    var t = this;
                    return (0,
                    it.Z)(function*() {
                        t._modal && !t._isOpen && (yield t._modal.openModal())
                    })()
                }
                close() {
                    this._modal && this._isOpen && this._modal.closeModal()
                }
                disconnect() {
                    var t = this;
                    return (0,
                    it.Z)(function*() {
                        yield t._client?.disconnect(),
                        t._connectedWallet = null,
                        t._connectedTo$.next(null),
                        t._onAccountChange$.next(null)
                    })()
                }
                connectOtp() {
                    const t = this._authenticationService.getCurrentUserValue()?.id ?? null;
                    this._connectedTo$.next(t),
                    this._connectedWallet = t
                }
                verify() {
                    var t = this;
                    return (0,
                    it.Z)(function*() {
                        const {keccak256: a, toBytes: r, toHex: i} = yield Promise.all([m.e(8592), m.e(3773)]).then(m.bind(m, 13773))
                          , C = `Verify your account in Dextools.io\nVerification token: ${a(r(Date.now()))}`
                          , O = i(Buffer.from(C, "utf8"));
                        try {
                            const $ = yield(0,
                            el.l)({
                                message: {
                                    raw: O
                                }
                            })
                              , W = Te.Vd.encrypt({
                                wallet: t._connectedWallet,
                                message: C,
                                sig: $
                            }, t._connectedWallet);
                            return yield(0,
                            gr.n)(t._authenticationService.connectWallet({
                                signature: W,
                                wallet: t._connectedWallet
                            }))
                        } catch ($) {
                            console.error("Could not sign", $)
                        }
                        return !1
                    })()
                }
                _load() {
                    var t = this;
                    return (0,
                    it.Z)(function*() {
                        const a = {
                            wagmiCore: (0,
                            Ln.D)(m.e(9373).then(m.bind(m, 89373))),
                            wagmiCoinbaseWallet: (0,
                            Ln.D)(m.e(7375).then(m.bind(m, 47375))),
                            wagmiInfura: (0,
                            Ln.D)(m.e(2229).then(m.bind(m, 92229))),
                            web3modalHtml: (0,
                            Ln.D)(Promise.all([m.e(3172), m.e(8592), m.e(5205)]).then(m.bind(m, 15205))),
                            web3modalEthereum: (0,
                            Ln.D)(Promise.all([m.e(8592), m.e(5545)]).then(m.bind(m, 55545))),
                            viemChains: (0,
                            Ln.D)(Promise.resolve().then(m.bind(m, 70599)))
                        }
                          , r = yield(0,
                        gr.n)((0,
                        tl.D)(a))
                          , {configureChains: i, createConfig: f} = r.wagmiCore
                          , {CoinbaseWalletConnector: C} = r.wagmiCoinbaseWallet
                          , {infuraProvider: O} = r.wagmiInfura
                          , {Web3Modal: $} = r.web3modalHtml
                          , {EthereumClient: W, w3mConnectors: ae, w3mProvider: q} = r.web3modalEthereum
                          , {bsc: Se, mainnet: Re} = r.viemChains
                          , Ye = [Re, Se]
                          , dt = "0ba5e6cc9cb13f1b358b4c021cef4be8"
                          , {publicClient: to} = i(Ye, [O({
                            apiKey: Va.ETH
                        }), q({
                            projectId: dt
                        })])
                          , tn = f({
                            autoConnect: !0,
                            connectors: [...ae({
                                chains: Ye,
                                projectId: dt
                            }), ...t._isMobile() && [new C({
                                chains: Ye,
                                options: {
                                    appName: "Dextools.io"
                                }
                            })] || []],
                            publicClient: to
                        });
                        t._client = new W(tn,Ye),
                        t._modal = new $({
                            projectId: dt,
                            explorerRecommendedWalletIds: ["c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96", "f5b4eeb6015d66be3f5940a895cbaa49ef3439e518cd771270e6b553b48f31d2", "8a0ee50d1f22f6651afcae7eb4253e52a3310b90af5daef78a8c4929a9bb99d4"],
                            ...t._isMobile() && {
                                walletImages: {
                                    coinbaseWallet: "https://explorer-api.walletconnect.com/w3m/v1/getWalletImage/a5ebc364-8f91-4200-fcc6-be81310a0000?projectId=0ba5e6cc9cb13f1b358b4c021cef4be8"
                                }
                            },
                            privacyPolicyUrl: "https://dextools.io/app/en#privacy-policy",
                            termsOfServiceUrl: "https://dextools.io/app/en#general-statement"
                        },t._client),
                        t._modal.setTheme({
                            themeMode: t._theme,
                            themeVariables: t._themeVariables[t._theme]
                        }),
                        t._modal.subscribeModal(({open: Ct})=>{
                            t._isOpen = Ct
                        }
                        ),
                        t._client.watchAccount(({address: Ct, isConnected: nn, isConnecting: In, isReconnecting: pa, isDisconnected: zo})=>{
                            In || pa || (nn && (t._connectedTo$.next(Ct),
                            Ct && t._connectedWallet !== Ct && t._onAccountChange$.next(Ct),
                            t._connectedWallet = Ct),
                            zo && (t._connectedTo$.next(null),
                            t._onAccountChange$.next(null),
                            t._connectedWallet = null))
                        }
                        ),
                        t._client.watchNetwork(()=>{
                            if (t._isInitialLoad)
                                return void (t._isInitialLoad = !1);
                            const Ct = t._client?.getAccount().address ?? null;
                            t._connectedTo$.next(Ct),
                            t._connectedWallet !== Ct && t._onAccountChange$.next(t._connectedWallet),
                            t._connectedWallet = Ct
                        }
                        )
                    })()
                }
                _isMobile() {
                    return this._platform.ANDROID || this._platform.IOS
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.$h),J.LFG(Te.qA),J.LFG(lr.t4),J.LFG(Te.gb))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )()
          , ol = (()=>{
            class g {
                get isLibLoaded$() {
                    return this._isLibLoaded$.asObservable().pipe((0,
                    At.q)(1))
                }
                constructor() {
                    this._isLibLoaded$ = new or.t(1),
                    (0,
                    Ln.D)(this.loadSolanaWeb3()).subscribe(()=>{
                        this._isLibLoaded$.next(!0)
                    }
                    )
                }
                loadSolanaWeb3() {
                    var t = this;
                    return (0,
                    it.Z)(function*() {
                        const a = yield Promise.all([m.e(3172), m.e(8175), m.e(4238), m.e(8916)]).then(m.bind(m, 28916));
                        t._publicKeySolanaWeb3 = a.PublicKey
                    })()
                }
                isValidAddress(t) {
                    const a = t && t.trim().substr(0, 44);
                    let r = null;
                    try {
                        r = new this._publicKeySolanaWeb3(a)
                    } catch {
                        return !1
                    }
                    return !!r
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const rl = 60;
        let pr = (()=>{
            class g {
                constructor(t, a) {
                    this._webSocketService = t,
                    this._exchangeService = a,
                    this._coinPrice = new Qe.X(null),
                    this.coinPrice$ = this._coinPrice.asObservable().pipe((0,
                    mt.h)(r=>null != r), (0,
                    kn.x)()),
                    this._gasValue = new Qe.X(null),
                    this.gas$ = this._gasValue.asObservable().pipe((0,
                    mt.h)(r=>null != r), (0,
                    kn.x)((r,i)=>JSON.stringify(r) === JSON.stringify(i))),
                    this._wsPriceAndGasSubscription = null
                }
                initialize(t) {
                    this._listenPriceAndGasValues(t),
                    this._currentChain = t,
                    this._exchangeService.chain$.subscribe(a=>{
                        null !== a && this._currentChain !== a && (this._currentChain = a,
                        this._listenPriceAndGasValues(a))
                    }
                    )
                }
                getPriceETH() {
                    try {
                        return this._coinPrice.getValue() ?? 0
                    } catch {
                        return 0
                    }
                }
                _listenPriceAndGasValues(t) {
                    this._chainData = z.getChainData(t),
                    this._wsPriceAndGasSubscription && this._wsPriceAndGasSubscription.unsubscribe(),
                    this._wsPriceAndGasSubscription = this._webSocketService.listenWebSocket(`${this._chainData.chainPrefix}:common`, {
                        chain: t
                    }).subscribe({
                        next: a=>{
                            if (this.isFirstEmission(a))
                                return this._coinPrice.next(a.ethPrice.ethPriceUsd),
                                void this._gasValue.next(a.gasPrice);
                            this.isCoinPriceEmission(a) ? this._coinPrice.next(a.ethPriceUsd) : this._gasValue.next(a)
                        }
                        ,
                        error: a=>{
                            this._coinPrice.error(`CoinPrice: could not connect to real-time data source. ${a}`),
                            this._gasValue.error(`GasValue: could not connect to real-time data source. ${a}`)
                        }
                    })
                }
                isFirstEmission(t) {
                    return null != t.ethPrice
                }
                isCoinPriceEmission(t) {
                    return null != t.ethPriceUsd
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(ha),J.LFG(An))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        var Ho = m(63900)
          , mr = m(65535)
          , fr = m(95577)
          , sa = m(82805)
          , il = m(62557);
        const _r = "30"
          , Vo = "chartSavedState"
          , Wo = "chartSavedStateWidget"
          , Yo = "chartSavedStateBeta"
          , Ra = "latestResolution"
          , ga = "tradingview"
          , Na = "multiChartElementsSelected";
        let ul = (()=>{
            class g {
                constructor(t, a, r, i) {
                    if (this._apiService = t,
                    this._authenticationService = a,
                    this._exchangeApiService = r,
                    this._chartConfig = i,
                    this._supportedTimeZones = {
                        "Africa/Cairo": 2,
                        "Africa/Johannesburg": 2,
                        "Africa/Lagos": 1,
                        "Africa/Nairobi": 3,
                        "Africa/Tunis": 1,
                        "America/Argentina/Buenos_Aires": -3,
                        "America/Bogota": -5,
                        "America/Caracas": -4,
                        "America/Chicago": -5,
                        "America/El_Salvador": -6,
                        "America/Juneau": -8,
                        "America/Lima": -5,
                        "America/Los_Angeles": -7,
                        "America/Mexico_City": -5,
                        "America/New_York": -4,
                        "America/Phoenix": -7,
                        "America/Santiago": -3,
                        "America/Sao_Paulo": -3,
                        "America/Toronto": -4,
                        "America/Vancouver": -7,
                        "Asia/Almaty": 6,
                        "Asia/Ashkhabad": 5,
                        "Asia/Bahrain": 3,
                        "Asia/Bangkok": 7,
                        "Asia/Chongqing": 8,
                        "Asia/Colombo": 5.5,
                        "Asia/Dubai": 4,
                        "Asia/Ho_Chi_Minh": 7,
                        "Asia/Hong_Kong": 8,
                        "Asia/Jakarta": 7,
                        "Asia/Jerusalem": 3,
                        "Asia/Karachi": 5,
                        "Asia/Kathmandu": 5.75,
                        "Asia/Kolkata": 3.5,
                        "Asia/Kuwait": 3,
                        "Asia/Manila": 8,
                        "Asia/Muscat": 4,
                        "Asia/Nicosia": 3,
                        "Asia/Qatar": 3,
                        "Asia/Riyadh": 3,
                        "Asia/Seoul": 9,
                        "Asia/Shanghai": 8,
                        "Asia/Singapore": 8,
                        "Asia/Taipei": 8,
                        "Asia/Tehran": 4.5,
                        "Asia/Tokyo": 9,
                        "Asia/Yangon": 6.5,
                        "Atlantic/Reykjavik": 0,
                        "Australia/Adelaide": 9.5,
                        "Australia/Brisbane": 10,
                        "Australia/Perth": 8,
                        "Australia/Sydney": 10,
                        "Europe/Amsterdam": 2,
                        "Europe/Athens": 3,
                        "Europe/Belgrade": 2,
                        "Europe/Berlin": 2,
                        "Europe/Bratislava": 2,
                        "Europe/Brussels": 2,
                        "Europe/Bucharest": 3,
                        "Europe/Budapest": 2,
                        "Europe/Copenhagen": 2,
                        "Europe/Dublin": 1,
                        "Europe/Helsinki": 3,
                        "Europe/Istanbul": 3,
                        "Europe/Lisbon": 1,
                        "Europe/London": 1,
                        "Europe/Luxembourg": 2,
                        "Europe/Madrid": 2,
                        "Europe/Malta": 2,
                        "Europe/Moscow": 3,
                        "Europe/Oslo": 2,
                        "Europe/Paris": 2,
                        "Europe/Riga": 3,
                        "Europe/Rome": 2,
                        "Europe/Stockholm": 2,
                        "Europe/Tallinn": 3,
                        "Europe/Vilnius": 3,
                        "Europe/Warsaw": 2,
                        "Europe/Zurich": 2,
                        "Pacific/Auckland": 12,
                        "Pacific/Chatham": 12.75,
                        "Pacific/Fakaofo": 13,
                        "Pacific/Honolulu": -10,
                        "Pacific/Norfolk": 11,
                        "US/Mountain": -7
                    },
                    this._customBackgroundPlatformColor = void 0,
                    this._customBackgroundPaneColor = void 0,
                    null == this._chartConfig)
                        throw new Error("Chart: missing config")
                }
                setCustomBackgroundPlatformColor(t) {
                    this._customBackgroundPlatformColor = t
                }
                get customBackgroundPlatformColor() {
                    return this._customBackgroundPlatformColor
                }
                setCustomBackgroundPaneColor(t) {
                    this._customBackgroundPaneColor = t
                }
                get customBackgroundPaneColor() {
                    return this._customBackgroundPaneColor
                }
                getStorageUrl(t) {
                    const a = this._authenticationService.getCurrentUserValue();
                    return a && -1 !== [Te.uU.P100, Te.uU.P20].indexOf(a.plan) && t ? this._apiService.retrieveChartsPath("/tv") : ""
                }
                getThemeOverridesObject(t) {
                    let a = "Dark" === t ? this._chartConfig.backgroundDark : this._chartConfig.backgroundLight;
                    this.customBackgroundPlatformColor && (a = this.customBackgroundPlatformColor);
                    let r = {
                        paneProperties: {
                            background: a,
                            vertGridProperties: {
                                color: "#dee2e6"
                            },
                            horzGridProperties: {
                                color: "#dee2e6"
                            },
                            axisProperties: {
                                autoScale: !0
                            }
                        },
                        scalesProperties: {
                            textColor: "#5a6169",
                            lineColor: "#5a6169"
                        },
                        mainSeriesProperties: {
                            style: void 0,
                            minTick: "100000000,1,false",
                            priceAxisProperties: {
                                autoScale: !0
                            }
                        }
                    };
                    return "Dark" === t && (r = {
                        paneProperties: {
                            background: a,
                            vertGridProperties: {
                                color: "rgba(167,168,173,0.11)"
                            },
                            horzGridProperties: {
                                color: "rgba(167,168,173,0.11)"
                            },
                            axisProperties: {
                                autoScale: !0
                            }
                        },
                        scalesProperties: {
                            textColor: "#a7a8ad",
                            lineColor: "#a7a8ad"
                        },
                        mainSeriesProperties: {
                            style: void 0,
                            minTick: "100000000,1,false",
                            priceAxisProperties: {
                                autoScale: !0
                            }
                        }
                    }),
                    r
                }
                getChartOverrides(t) {
                    const a = {
                        "paneProperties.background": t.paneProperties.background,
                        "paneProperties.vertGridProperties.color": t.paneProperties.vertGridProperties.color,
                        "paneProperties.horzGridProperties.color": t.paneProperties.horzGridProperties.color,
                        "paneProperties.axisProperties.autoScale": t.paneProperties.axisProperties.autoScale,
                        "symbolWatermarkProperties.color": "rgba(0, 0, 0, 0.00)",
                        "symbolWatermarkProperties.visibility": !0,
                        "scalesProperties.textColor": t.scalesProperties.textColor,
                        "scalesProperties.lineColor": t.scalesProperties.lineColor,
                        "mainSeriesProperties.minTick": t.mainSeriesProperties.minTick,
                        "mainSeriesProperties.priceAxisProperties.autoScale": t.mainSeriesProperties.priceAxisProperties.autoScale
                    };
                    return t.mainSeriesProperties.style && (a["mainSeriesProperties.style"] = t.mainSeriesProperties.style),
                    a
                }
                getChartDisabledFeatures() {
                    return ["timeframes_toolbar", "show_interval_dialog_on_key_press", "symbol_search_hot_key", "display_market_status", "header_compare", "header_symbol_search", "header_fullscreen_button", "control_bar", "edit_buttons_in_legend", "border_around_the_chart", "border_around_the_chart", "remove_library_container_border"]
                }
                getChartDisabledFeaturesWidget() {
                    return ["timeframes_toolbar", "left_toolbar", "show_interval_dialog_on_key_press", "symbol_search_hot_key", "display_market_status", "header_compare", "header_symbol_search", "header_fullscreen_button", "control_bar", "edit_buttons_in_legend", "border_around_the_chart", "context_menus", "border_around_the_chart", "remove_library_container_border"]
                }
                calculateInitialResolution(t, a, r, i) {
                    let f = t ? _r : "15";
                    const C = i ? i.time : a
                      , O = (Date.now() - C) / U.HR;
                    return O < .3 ? f = "1" : O < .7 ? f = "5" : O < 1 ? f = "15" : r < 10 ? f = "120" : r < 40 && (f = "60"),
                    f
                }
                transformToNumericResolution(t) {
                    let a = t ? `${t}` : "15";
                    return "1D" === a || "D" === a ? a = "1440" : "3D" === a ? a = "4320" : "1W" === a ? a = "10080" : "1M" === a && (a = "43200"),
                    a
                }
                getResolvedChartData(t, a) {
                    const r = "DEXTools.io";
                    return {
                        name: t,
                        description: t,
                        full_name: `${t} - ${r}`,
                        pricescale: a,
                        minmov: 1,
                        minmove2: 0,
                        session: "24x7",
                        type: "crypto",
                        exchange: r,
                        timezone: this.getSupportedTimeZone(Intl.DateTimeFormat().resolvedOptions().timeZone),
                        has_empty_bars: !1,
                        has_daily: !0,
                        daily_multipliers: ["1"],
                        has_weekly_and_monthly: !1,
                        has_intraday: !0,
                        intraday_multipliers: Pa.filter(i=>"1440" !== i)
                    }
                }
                getSupportedTimeZone(t) {
                    if (null != this._supportedTimeZones[t])
                        return t;
                    const a = (new Date).getTimezoneOffset() / -60;
                    return Object.keys(this._supportedTimeZones).find(i=>this._supportedTimeZones[i] === a) || (console.warn("Cannot find supported Timezone - using UTC"),
                    "Etc/UTC")
                }
                storeChartSetting(t, a) {
                    let r = "";
                    switch (t) {
                    case Vo:
                        r = Vo;
                        break;
                    case Wo:
                        r = Wo;
                        break;
                    case Yo:
                        r = Yo;
                        break;
                    default:
                        r = `${ga}.${t}`
                    }
                    "string" == typeof a ? U._Z.setString(r, a) : U._Z.set(r, a)
                }
                getStoredChartSetting(t) {
                    const a = `${ga}.${t}`;
                    return "resizedHeight" === t ? U._Z.getString(a) : [Vo, Wo, Yo].includes(t) ? U._Z.get(t) : U._Z.get(a)
                }
                storeChartSettingById(t, a, r) {
                    const i = U._Z.get(Na);
                    if (i) {
                        const f = i.find(C=>C.id === t);
                        if (null != f) {
                            const C = f.chartData;
                            let O = "";
                            switch (a) {
                            case Vo:
                                O = Vo;
                                break;
                            case Wo:
                                O = Wo;
                                break;
                            case Yo:
                                O = Yo;
                                break;
                            case Ra:
                                O = Ra;
                                break;
                            default:
                                O = `${ga}.${a}`
                            }
                            i.some(null != C ? $=>$.id === t && ($.chartData[O] = r,
                            !0) : $=>$.id === t && ($.chartData = {
                                [O]: r
                            },
                            !0)),
                            U._Z.set(Na, i)
                        }
                    }
                }
                getStoredChartSettingById(t, a) {
                    const r = U._Z.get(Na);
                    if (r) {
                        const f = r.find(O=>O.id === t)?.chartData;
                        if (null == f)
                            return null;
                        const C = `${ga}.${a}`;
                        return [Vo, Wo, Yo, Ra].includes(a) ? f[a] : f[C]
                    }
                    return null
                }
                getCandles(t, a, r, i="1", f, C, O, $, W, ae, q=!0) {
                    const Se = this._exchangeApiService.getAdapter(t)
                      , Re = (new Date).getTimezoneOffset() / -60
                      , Ye = Math.round((C - f) / U.HR)
                      , dt = this.setSuitableTimeSpan(i, Ye)
                      , to = dt.suitableTimeSpan
                      , tn = dt.suitableTimeSpanMs;
                    let Ct = Math.floor(C / tn) * tn
                      , nn = Ct
                      , In = [];
                    for (; nn >= f - tn; )
                        null != W && nn >= W ? console.warn(`Candles: timestamp ${nn} already fetched. Oldest timestamp fetched: ${W}`) : null != ae && nn >= ae ? console.warn(`Candles: timestamp ${nn} already requested to API. Oldest timestamp requested: ${ae}`) : In.push({
                            startTs: nn
                        }),
                        Ct = nn,
                        nn = Ct - tn;
                    let pa = {
                        version: O,
                        symbol: r,
                        candles: [],
                        oldestTs: $
                    };
                    const zo = [];
                    let Ba, ma, Mr = (0,
                    Xe.of)({
                        version: O,
                        symbol: r,
                        candles: [],
                        oldestTs: $
                    }), vr = (0,
                    Xe.of)({
                        symbol: r,
                        candles: []
                    });
                    return q && (vr = Se.getOnTheFlyCandles(a, r, i, Re)),
                    null == O && (ma = In.splice(0, 1)[0],
                    Mr = Se.getCandlesVersion(a).pipe((0,
                    Ho.w)(kt=>Se.getCandles(a, r, i, ma.startTs, to, kt, Re).pipe((0,
                    mr.a)(on=>{
                        let no = 0;
                        return on.pipe((0,
                        fr.z)(Go=>no < 10 ? (no++,
                        (0,
                        sa.H)(100)) : (0,
                        Ta._)(Go)))
                    }
                    ), (0,
                    At.q)(1))))),
                    vr.pipe((0,
                    Ho.w)(kt=>(zo.push(...kt.candles),
                    zo.length > 0 && (Ba = zo[0].time),
                    Mr)), (0,
                    Je.b)(kt=>{
                        O = kt.version,
                        $ = kt.oldestTs ? +kt.oldestTs : void 0,
                        In = In.filter(on=>on.startTs + tn >= +kt.oldestTs)
                    }
                    ), (0,
                    Ho.w)(kt=>{
                        pa = kt;
                        const on = In.map((no,Go)=>(0,
                        sa.H)(100 * Go + 10).pipe((0,
                        Ho.w)($a=>Se.getCandles(a, r, i, no.startTs, to, O, Re).pipe((0,
                        mr.a)(Za=>{
                            let Pr = 0;
                            return Za.pipe((0,
                            fr.z)(Pl=>Pr < 10 ? (Pr++,
                            (0,
                            sa.H)(100)) : (0,
                            Ta._)(Pl)))
                        }
                        ), (0,
                        At.q)(1)))));
                        return on.length ? (0,
                        il.$)(...on) : (0,
                        Xe.of)([{
                            version: O,
                            symbol: r,
                            candles: [],
                            oldestTs: $ ?? -1
                        }])
                    }
                    ), (0,
                    _e.U)(kt=>{
                        const on = {
                            version: O,
                            symbol: r,
                            candles: [],
                            oldestTs: $ ?? -1
                        };
                        kt.unshift(pa);
                        for (const no of kt.reverse()) {
                            let Go = []
                              , $a = 0;
                            for (const Za of [...no.candles].reverse()) {
                                if (!(Ba && Za.time >= Ba)) {
                                    Go = no.candles.slice(0, no.candles.length - $a);
                                    break
                                }
                                $a++
                            }
                            on.candles.push(...Go)
                        }
                        return on.candles.push(...zo),
                        {
                            rawCandles: on,
                            requests: ma ? [ma, ...In] : In
                        }
                    }
                    ))
                }
                getMarks(t) {
                    const a = [];
                    return t.forEach(r=>{
                        a.push({
                            id: a.length,
                            time: r.timestamp,
                            color: {
                                color: "white",
                                background: r.type === et.SELL ? "#c4183c" : "#17c671"
                            },
                            text: r.type === et.SELL ? "Sell" : "Buy",
                            label: r.type === et.SELL ? "Sell" : "Buy",
                            labelFontColor: "white",
                            minSize: 20
                        })
                    }
                    ),
                    a
                }
                getTimescaleMarks(t, a, r) {
                    const i = []
                      , f = ee.test(a) ? "priceUSD" : "priceETH"
                      , C = `amount ${V}`;
                    return t.forEach(O=>{
                        const $ = U.C6.toReadableNumber(O[f], U.B3.EXPANDED)
                          , W = U.C6.toReadableNumber(O[C], U.B3.EXPANDED);
                        i.push({
                            id: i.length,
                            time: O.timestamp,
                            color: O.type === et.SELL ? "#c4183c" : "#17c671",
                            label: O.type === et.SELL ? "Sell" : "Buy",
                            tooltip: [O.type === et.SELL ? "Sell" : "Buy", `Price: ${$} ${a}`, `Amount: ${W} ${r}`]
                        })
                    }
                    ),
                    i
                }
                setSuitableTimeSpan(t, a) {
                    let r = {
                        suitableTimeSpan: "day",
                        suitableTimeSpanMs: U.HR
                    };
                    return +t >= 15 || a > 20 ? r = {
                        suitableTimeSpan: "month",
                        suitableTimeSpanMs: 30 * U.HR
                    } : a > 3 && (r = {
                        suitableTimeSpan: "week",
                        suitableTimeSpanMs: 7 * U.HR
                    }),
                    r
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Te.sM),J.LFG(Te.$h),J.LFG(Ht),J.LFG(qa, 8))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const hl = ":timeseries:mempool"
          , br = "mempool"
          , gl = 3 * U.VK;
        let ml = (()=>{
            class g {
                constructor(t, a) {
                    this._sharedApiService = t,
                    this._commonService = a
                }
                getMempoolTimeSeries(t, a, r, i) {
                    return this._sharedApiService.getMempoolTimeSeries(t, a, r, i)
                }
                processMempoolData(t, a) {
                    let r = this._removeSwapsFromMempoolTransactions(t, a);
                    return r = this._removeFailedMempoolTransactions(r),
                    this._removeDuplicatesFromMempoolTransactions(r)
                }
                formatMempoolTransaction(t, a, r, i) {
                    const f = new Date(t.time).getTime()
                      , C = this._getSwapType(t, a);
                    return 1e3 * r[0].timestamp > f ? this._fillAmountsWithCurrentPrice(f, C, a, t, i) : this._fillAmountsWithMempoolReserves(t, f, a, C, i)
                }
                _fillAmountsWithCurrentPrice(t, a, r, i, f) {
                    const C = r.priceETH;
                    let O, $;
                    i.AmountOutOrAmountIn > 0 ? O = i.AmountOutOrAmountIn : $ = Math.abs(i.AmountOutOrAmountIn);
                    const W = r.isStableNativePair ? r.id : r.id_vs
                      , ae = W === i.id.tokenIn ? r.pooledETH : r.pooledToken
                      , q = W === i.id.tokenOut ? r.pooledETH : r.pooledToken;
                    O ? $ = q * O / (ae + O) : O = ae * ($ ?? 0) / (q - ($ ?? 0));
                    const Se = r.id === i.id.tokenIn ? O : $ ?? 0;
                    let Re;
                    f && (Re = r.id === i.id.tokenIn ? $ : O ?? 0);
                    const Ye = this._getPriceUSD(C);
                    return {
                        ...i,
                        txDate: new Date(t),
                        type: a,
                        cellClass: `${a}-color`,
                        priceUSD: Ye,
                        priceETH: C,
                        amountToken: Se,
                        amountETH: C * Se,
                        txGas: this._getTransactionGas(i.gas, i.gasPrice),
                        amountUSD: Ye * Se,
                        amountRef: Re
                    }
                }
                _fillAmountsWithMempoolReserves(t, a, r, i, f) {
                    const C = Math.abs(this._getAmountToken(t.amount0, t.amount1, t.token0, r));
                    let O;
                    f && (O = Math.abs(this._getAmountRef(t.amount0, t.amount1, t.token0, r)));
                    const $ = this._getPriceETHWithMempoolReserves(r, t.price0, t.price1, t.token0);
                    return {
                        ...t,
                        txDate: new Date(a),
                        type: i,
                        cellClass: i === et.SELL ? "sell-color" : "buy-color",
                        priceUSD: this._getPriceUSD($),
                        priceETH: $,
                        amountToken: C,
                        amountETH: $ * C,
                        txGas: this._getTransactionGas(t.gas, t.gasPrice),
                        amountUSD: this._getPriceUSD($) * C,
                        amountRef: O
                    }
                }
                _getAmountToken(t, a, r, i) {
                    return i.id === r ? t : a
                }
                _getAmountRef(t, a, r, i) {
                    return i.id === r ? a : t
                }
                formatMempoolTransactionList(t, a, r, i) {
                    return t.map(f=>this.formatMempoolTransaction(f, a, r, i))
                }
                _removeSwapsFromMempoolTransactions(t, a) {
                    return t.filter(r=>!a.some(i=>i.id === r.id.hash))
                }
                _removeDuplicatesFromMempoolTransactions(t) {
                    return t.filter((a,r)=>t.findIndex(i=>i.id.hash === a.id.hash) === r)
                }
                _removeFailedMempoolTransactions(t) {
                    return t.filter(a=>new Date(a.txDate).getTime() >= Date.now() - gl)
                }
                _getSwapType(t, a) {
                    return a.id === t.id.tokenOut ? et.BUY : et.SELL
                }
                _getPriceETHWithMempoolReserves(t, a, r, i) {
                    return (i === t.id ? a : r) * ((i === t.id ? r : a) * t.priceETH)
                }
                _getPriceUSD(t) {
                    return this._commonService.getPriceETH() * t
                }
                _getTransactionGas(t, a) {
                    return t * a / 1e18
                }
                saveMempoolOptionsOnLocalStorage(t) {
                    U._Z.set(br, t)
                }
                get mempoolOptionsOnLocalStorage() {
                    return U._Z.get(br) ?? null
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Vt),J.LFG(pr))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        class fl {
            static parseDextScoreTotal(u) {
                return {
                    value: u,
                    color: this.setDextScoreColor(u)
                }
            }
            static setDextScoreColor(u, t="") {
                return u >= 81 ? "class" !== t ? "#00B8D8" : "text-info" : u >= 51 ? "class" !== t ? "#008A00" : "buy-color" : u >= 31 ? "class" !== t ? "#EAAC30" : "text-secondary" : "class" !== t ? "#CA024F" : "sell-color"
            }
        }
        class _l {
            static addToMetamask(u, t, a, r) {
                u ? window.ethereum ? window.ethereum.request({
                    method: "wallet_watchAsset",
                    params: {
                        type: "ERC20",
                        options: {
                            address: u,
                            symbol: t ?? "unknown",
                            decimals: a,
                            image: r ? lt.normalizeLogoUrl(r) : ""
                        }
                    }
                }).then() : console.error("Add to metamask: Metamask is not installed") : console.error("Add to metamask: cannot add to Metamask a token without address")
            }
            static getFirstValidCharacter(u, t) {
                const a = [...u][0]?.trim() ?? "?";
                return U.LC.hasEmojis(a) || "?" === a ? t?.trim()[0] ?? "?" : a
            }
        }
        const bl = 2 * U.HR;
        class Fa {
            static isFrontRunning(u, t) {
                const a = !(!u?.others?.botAddress || !t?.others?.botAddress || u.others.botAddress !== t.others.botAddress)
                  , r = u.maker === t.maker
                  , i = u.type !== t.type
                  , f = u.id !== t.id
                  , C = u.timestamp === t.timestamp
                  , O = u.amountToken === t.amountToken
                  , $ = Math.abs(u.timestamp - t.timestamp) < 30;
                return !u.chupacabring && f && i && (r && (C || O && $) || a && O && (C || $))
            }
            static removeDuplicateTransactions(u, t) {
                return u && 0 !== u.length ? u.filter(a=>!t.some((r,i)=>{
                    const f = Fa.isTransactionDuplicated(a, r);
                    return f && (t[i] = {
                        ...t[i],
                        ...a
                    }),
                    f
                }
                )) : []
            }
            static isTransactionDuplicated(u, t) {
                return u.id === t.id && u.logIndex === t.logIndex && u.blockNumber === t.blockNumber
            }
            static filterBuysSellsOnly(u) {
                return u.filter(t=>[et.BUY, et.SELL].includes(t.type))
            }
            static analyzeTransactions(u, t) {
                const a = new Map
                  , r = this._getMinMaxSwapsByChain(t);
                let i = 0;
                if (u.length > r.minSwaps && u.length < r.maxSwaps) {
                    const f = [...u].sort((W,ae)=>W.timestamp - ae.timestamp);
                    if (1e3 * (f[f.length - 1].timestamp - f[0].timestamp) > bl)
                        return null;
                    let O = 0;
                    for (const W of u) {
                        if (W.type === et.SELL && this._isValidSell(O, u, W)) {
                            const ae = a.get(W.maker);
                            ae ? ae.push(W.id) : a.set(W.maker, [W.id])
                        } else
                            i++;
                        O++
                    }
                    const $ = this._calculatePercent(u.length, i, a);
                    return {
                        percentSuccess: 95,
                        analysisResultPercent: $,
                        isOnlyBuySwaps: 100 === $
                    }
                }
                return null
            }
            static generateIndexedTimestamp({logIndex: u, timestamp: t}) {
                return Number.parseFloat(`${t}.${u?.toString().padStart(3, "0") ?? "000"}`)
            }
            static _calculatePercent(u, t, a) {
                return 100 * t / (u - t - [...a.values()].sort((f,C)=>C.length - f.length).slice(0, 2).flat().length + t)
            }
            static _isValidSell(u, t, a) {
                const r = t[u - 1]?.priceUSD ?? null
                  , i = t[u - 2]?.priceUSD ?? null;
                return !(u > 2 && a?.priceUSD) || t[u - 1].type === et.SELL || !!r && r > a.priceUSD && t[u - 1].type === et.SELL || !!i && i > a.priceUSD
            }
            static _getMinMaxSwapsByChain(u) {
                return u === n.Ethereum ? {
                    minSwaps: 100,
                    maxSwaps: 400
                } : {
                    minSwaps: 200,
                    maxSwaps: 500
                }
            }
        }
        const Ml = /^[\d\sA-Za-z\-]*$/;
        let Sr = (()=>{
            class g {
                constructor(t) {
                    this._sharedApiService = t,
                    this._resolved$ = new wn.x,
                    this.resolved$ = this._resolved$.asObservable(),
                    this._allChainExchangesFetched = !1,
                    this.resolve = (a,r)=>{
                        const i = (a.params.chain || a.params.chainOrExchange) ?? null;
                        if (i) {
                            if (te.isExchangeListExpired || (te.chainExchangeList[i] ?? []).length <= ca[i].exchanges.length)
                                return this._allChainExchangesFetched = !1,
                                this._fetchExchangesByChain(i).pipe((0,
                                Je.b)(()=>this._resolved$.next()), (0,
                                Je.b)(()=>{
                                    (0,
                                    sa.H)(1e3).pipe((0,
                                    At.q)(1), (0,
                                    Ho.w)(()=>this._fetchExchangesFromAllChains())).subscribe()
                                }
                                ))
                        } else if (te.isExchangeListExpired || !this._allChainExchangesFetched)
                            return this._fetchExchangesFromAllChains().pipe((0,
                            Je.b)(()=>this._resolved$.next()));
                        return (0,
                        Xe.of)(te.chainExchangeList).pipe((0,
                        Je.b)(()=>this._resolved$.next()))
                    }
                }
                initialResolution(t) {
                    return t ? this._fetchExchangesByChain(t).pipe((0,
                    Je.b)(()=>{
                        (0,
                        sa.H)(1e3).pipe((0,
                        At.q)(1), (0,
                        Ho.w)(()=>this._fetchExchangesFromAllChains())).subscribe()
                    }
                    )) : this._fetchExchangesFromAllChains()
                }
                _fetchExchangesFromAllChains() {
                    return this._sharedApiService.fetchExchanges().pipe((0,
                    _e.U)(t=>{
                        for (const a of Zt)
                            t[a] ? t = this._addChainToChainExchangesList(t, a) : t[a] = [...ca[a].exchanges];
                        return te.updateExchangesCheckDate(),
                        te.chainExchangeList = t,
                        this._allChainExchangesFetched = !0,
                        t
                    }
                    ), (0,
                    At.q)(1))
                }
                _fetchExchangesByChain(t) {
                    return this._sharedApiService.fetchExchanges(t).pipe((0,
                    At.q)(1), (0,
                    _e.U)(a=>{
                        for (const r of Zt)
                            r === t && a[r] ? a = this._addChainToChainExchangesList(a, r) : a[r] = [...ca[r].exchanges];
                        return te.updateExchangesCheckDate(),
                        te.chainExchangeList = a,
                        a
                    }
                    ))
                }
                _addChainToChainExchangesList(t, a) {
                    if (t[a] = t[a] ?? [...ca[a].exchanges],
                    [n.Binance, n.Okc, n.Multiversx].includes(a)) {
                        const r = t[a];
                        for (const i of r)
                            i.chainId = a;
                        t[a] = [...r]
                    }
                    return t
                }
            }
            return g.\u0275fac = function(t) {
                return new (t || g)(J.LFG(Vt))
            }
            ,
            g.\u0275prov = J.Yz7({
                token: g,
                factory: g.\u0275fac,
                providedIn: "root"
            }),
            g
        }
        )();
        const vl = g=>{
            const u = (0,
            J.f3M)(An);
            return (0,
            J.f3M)(Sr).resolved$.pipe((0,
            _e.U)(()=>{
                const a = (g.params.chain || g.params.chainOrExchange) ?? null;
                return u.chain !== a && (u.chain = a),
                u.chain
            }
            ), (0,
            At.q)(1))
        }
    }
    ,
    53763: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            wd: ()=>ve,
            A7: ()=>o,
            It: ()=>e,
            sM: ()=>me,
            lB: ()=>ee,
            Qe: ()=>B,
            $h: ()=>je,
            i5: ()=>Kt,
            n: ()=>Bn,
            Vd: ()=>$e,
            qA: ()=>p,
            g2: ()=>R,
            SQ: ()=>Ke,
            Vr: ()=>Jt,
            m: ()=>X,
            WU: ()=>Ee,
            GY: ()=>P,
            TF: ()=>an,
            GG: ()=>Tt,
            t4: ()=>ue,
            uU: ()=>T,
            jY: ()=>Sn,
            Zn: ()=>bn,
            zX: ()=>be,
            v2: ()=>bt,
            gb: ()=>ut,
            FF: ()=>at,
            _U: ()=>gn,
            Q2: ()=>Fe,
            VU: ()=>Cn,
            p2: ()=>$n,
            pP: ()=>Pn,
            bc: ()=>Mn,
            kG: ()=>vn,
            q3: ()=>jt,
            K5: ()=>Hn
        });
        const R = {
            USER_DATA: "dataUser",
            AUTH_TOKEN: "t",
            VERIFIED: "verified"
        }
          , o = "anyone"
          , e = {
            DEVICE_ID: "deviceId",
            PLATFORM: "platform"
        };
        var T = (()=>{
            return (A = T || (T = {})).P0 = "P0",
            A.P20 = "P20",
            A.P100 = "P100",
            T;
            var A
        }
        )();
        const ve = 3e5;
        var Y = m(52413)
          , H = m(94650)
          , xe = m(62510)
          , ne = m(80529)
          , re = m(62843)
          , Oe = m(70262);
        class p {
        }
        let me = (()=>{
            class A {
                constructor(c, b) {
                    this._environment = c,
                    this.http = b,
                    this.headers = {
                        "Content-Type": "application/json"
                    }
                }
                static _formatErrors(c) {
                    return (0,
                    re._)(()=>c)
                }
                get(c, b, k=new ne.LE, oe=new ne.WM(this.headers)) {
                    return this.http.get(`${this._getRequestUrl(c)}${b}`, {
                        headers: oe,
                        params: k
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                getUrl(c, b=new ne.LE, k=new ne.WM(this.headers)) {
                    return this.http.get(c, {
                        headers: k,
                        params: b
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                getImage(c) {
                    return this.http.get(c, {
                        responseType: "blob"
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                getFromJson(c) {
                    return this.http.get(c).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                put(c, b, k={}, oe=new ne.WM(this.headers)) {
                    return this.http.put(`${this._getRequestUrl(c)}${b}`, JSON.stringify(k), {
                        headers: oe
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                post(c, b, k={}, oe=new ne.WM(this.headers)) {
                    return this.http.post(`${this._getRequestUrl(c)}${b}`, JSON.stringify(k), {
                        headers: oe
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                postUrl(c, b={}, k=new ne.WM(this.headers)) {
                    return this.http.post(c, JSON.stringify(b), {
                        headers: k
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                postFormDataUrl(c, b, k=new ne.WM) {
                    return this.http.post(`${c}`, b, {
                        headers: k
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                postFormData(c, b, k, oe=new ne.WM) {
                    return this.http.post(`${this._getRequestUrl(c)}${b}`, k, {
                        headers: oe
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                delete(c, b, k={}, oe=new ne.WM(this.headers)) {
                    const Ae = {
                        headers: oe,
                        body: k
                    };
                    return this.http.delete(`${this._getRequestUrl(c)}${b}`, Ae).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                deleteUrl(c, b={}, k=new ne.WM(this.headers)) {
                    return this.http.delete(c, {
                        headers: k,
                        body: {
                            data: b
                        }
                    }).pipe((0,
                    Oe.K)(A._formatErrors))
                }
                retrieveChartsPath(c) {
                    return `${this._environment.back_url}${c}`
                }
                _getRequestUrl(c) {
                    if ("meta_url" === c)
                        return this._environment.meta_url;
                    if ("back_url" === c)
                        return this._environment.back_url;
                    if (c.startsWith("api_"))
                        return this._environment.apiUrls[c];
                    if ("shared_url" === c)
                        return this._environment.shared_url;
                    if ("cf_proxy_url" === c)
                        return this._environment.cf_proxy_url;
                    throw new Error(`Invalid url key. The key ${c} is not part of the configured urls.`)
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(p),H.LFG(ne.eN))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        var Le = m(61135)
          , ze = m(54968)
          , nt = m(39841)
          , N = m(71884)
          , F = m(39300)
          , L = m(54004);
        let ee = (()=>{
            class A {
                constructor() {
                    this._appIsVisible$ = new Le.X(!document.hidden),
                    this._appIsOnline$ = new Le.X(navigator.onLine),
                    this._initialize()
                }
                _initialize() {
                    (0,
                    ze.R)(window, "online").subscribe(()=>{
                        this._appIsOnline$.next(!0)
                    }
                    ),
                    (0,
                    ze.R)(window, "offline").subscribe(()=>{
                        this._appIsOnline$.next(!1)
                    }
                    ),
                    (0,
                    ze.R)(document, "visibilitychange").subscribe(()=>{
                        this._appIsVisible$.next(!document.hidden)
                    }
                    )
                }
                isAppOnlineAndVisible$() {
                    return (0,
                    nt.a)([this._appIsOnline$, this._appIsVisible$]).pipe((0,
                    N.x)((c,b)=>c[0] === b[0] && c[1] === b[1]), (0,
                    F.h)(([c,b])=>c && b), (0,
                    L.U)(([c,b])=>c && b))
                }
                get appIsVisible() {
                    return this._appIsVisible$.value
                }
                get appIsOnline() {
                    return this._appIsOnline$.value
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        var x = m(15861)
          , V = m(77579)
          , de = m(4707)
          , fe = m(18505)
          , Pe = m(39646)
          , ge = m(97272)
          , Ie = m(17445)
          , st = m(82722)
          , j = m(63900)
          , pe = m(49808)
          , ue = (()=>{
            return (A = ue || (ue = {})).Android = "android",
            A.Ios = "ios",
            ue;
            var A
        }
        )()
          , D = m(95698)
          , Z = m(60515)
          , ye = m(58319)
          , we = m.n(ye)
          , Ge = m(34384)
          , Ce = m.n(Ge)
          , De = m(32076)
          , ot = m(4128);
        const Ze = ["#63b598", "#ce7d78", "#ea9e70", "#a48a9e", "#c6e1e8", "#648177", "#0d5ac1", "#f205e6", "#1c0365", "#14a9ad", "#4ca2f9", "#a4e43f", "#d298e2", "#6119d0", "#d2737d", "#c0a43c", "#f2510e", "#651be6", "#79806e", "#61da5e", "#cd2f00", "#9348af", "#01ac53", "#c5a4fb", "#996635", "#b11573", "#4bb473", "#75d89e", "#2f3f94", "#2f7b99", "#da967d", "#34891f", "#b0d87b", "#ca4751", "#7e50a8", "#c4d647", "#e0eeb8", "#11dec1", "#289812", "#566ca0", "#ffdbe1", "#2f1179", "#935b6d", "#916988", "#513d98", "#aead3a", "#9e6d71", "#4b5bdc", "#0cd36d"];
        class $e {
            static get aesLib() {
                return $e._aesLib
            }
            static get cryptoJsAESLib() {
                return $e._cryptoJsAESLib
            }
            static get cryptoJsSHA256Lib() {
                return $e._cryptoJsSHA256Lib
            }
            static loadCryptoLibs() {
                return (0,
                x.Z)(function*() {
                    const w = {
                        aesJs: (0,
                        De.D)(m.e(1522).then(m.bind(m, 41522))),
                        cryptoJsAES: (0,
                        De.D)(m.e(7466).then(m.t.bind(m, 77466, 23))),
                        cryptoJsSHA256: (0,
                        De.D)(m.e(1817).then(m.t.bind(m, 31817, 23))).pipe((0,
                        L.U)(c=>c.default))
                    };
                    return (0,
                    pe.n)((0,
                    ot.D)(w).pipe((0,
                    fe.b)(c=>{
                        $e._aesLib = c.aesJs,
                        $e._cryptoJsAESLib = c.cryptoJsAES,
                        $e._cryptoJsSHA256Lib = c.cryptoJsSHA256
                    }
                    )))
                })()
            }
            static encrypt(w, c) {
                return we().stringify(Ce().parse($e.cryptoJsAESLib.encrypt(JSON.stringify(w), c).toString()))
            }
            static hash(w) {
                const c = $e.cryptoJsSHA256Lib(w || $e._createSeed());
                return we().stringify(c)
            }
            static _createSeed() {
                return Ze[Math.floor(Math.random() * Ze.length)]
            }
            static decipherWithAESFromHex(w) {
                const b = this._convertHexToBytes(w)
                  , oe = new $e.aesLib.CTR(new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),1).decrypt(b);
                return this._getUtf8FromBytes(oe)
            }
            static _convertHexToBytes(w) {
                const c = [];
                for (let b = 0; b < w.length; b += 2)
                    c.push(Number.parseInt(w.substr(b, 2), 16));
                return new Uint8Array(c)
            }
            static _getUtf8FromBytes(w) {
                const c = [];
                let b = 0;
                for (; b < w.length; ) {
                    const k = w[b];
                    k < 128 ? (c.push(String.fromCharCode(k)),
                    b++) : k > 191 && k < 224 ? (c.push(String.fromCharCode((31 & k) << 6 | 63 & w[b + 1])),
                    b += 2) : (c.push(String.fromCharCode((15 & k) << 12 | (63 & w[b + 1]) << 6 | 63 & w[b + 2])),
                    b += 3)
                }
                return c.join("")
            }
        }
        let je = (()=>{
            class A {
                constructor(c, b) {
                    this._apiService = c,
                    this._environment = b,
                    this._deviceIdDisconnected$ = new Le.X(null),
                    this._authToken = null,
                    this._deviceId = null,
                    this._platform = null
                }
                initialize(c=!0) {
                    const b = c ? this.decryptDataUser() : null;
                    this._currentUserSubject = new Le.X(b),
                    this._isVerified$ = new Le.X(this._isVerified()),
                    this.currentUser$ = this._currentUserSubject.asObservable().pipe((0,
                    N.x)((k,oe)=>JSON.stringify(k) === JSON.stringify(oe)))
                }
                get isVerified$() {
                    return this._isVerified$.asObservable()
                }
                _generateAnyonePassword() {
                    return $e.hash()
                }
                getCurrentUserValue() {
                    return this._currentUserSubject.value
                }
                setCurrentUserValue(c) {
                    null == c && this._isVerified$.next(!1),
                    this._currentUserSubject.next(c)
                }
                decryptDataUser() {
                    const c = JSON.parse(Y._Z.getString(R.USER_DATA));
                    if (c) {
                        const b = JSON.parse($e.decipherWithAESFromHex(c.data));
                        return this._environment.allowAdmin || (b.isAdmin = !1,
                        b.isSuperAdmin = !1),
                        b.id === o && (b.pricePlan = null),
                        b
                    }
                    return null
                }
                connectWallet(c) {
                    const b = this._getAssociateFavoritesCall();
                    return this._apiService.post("back_url", "/user/wallet", c).pipe((0,
                    L.U)(k=>k.data ? (Y._Z.setString(R.USER_DATA, JSON.stringify({
                        data: k.data
                    })),
                    this.setCurrentUserValue(this.decryptDataUser()),
                    Y._Z.setString(R.VERIFIED, !0 + ""),
                    this._isVerified$.next(!0),
                    b.subscribe(),
                    !0) : (this._cleanUserData(),
                    !1)))
                }
                connectMobileOTP(c) {
                    const b = this._getAssociateFavoritesCall();
                    return this._apiService.post("back_url", "/user/link-device", c).pipe((0,
                    L.U)(k=>k.data ? (Y._Z.setString(R.USER_DATA, JSON.stringify({
                        data: k.data
                    })),
                    this.setCurrentUserValue(this.decryptDataUser()),
                    Y._Z.setString(R.VERIFIED, !0 + ""),
                    this._isVerified$.next(!0),
                    b.subscribe(),
                    !0) : (this._cleanUserData(),
                    !1)))
                }
                refreshLogin() {
                    const c = this.decryptDataUser();
                    let b;
                    if (c && null != this._authToken)
                        b = {
                            id: c.id
                        };
                    else {
                        Y._Z.delete(R.USER_DATA);
                        const k = this._generateAnyonePassword();
                        b = {
                            id: o,
                            password: k
                        }
                    }
                    return this._loginCall(b).pipe((0,
                    fe.b)(k=>{
                        k.data || this._cleanUserData()
                    }
                    ))
                }
                logout() {
                    this._authToken && !this._deviceIdLocalStorage ? (this.setCurrentUserValue(null),
                    Y._Z.delete(R.USER_DATA),
                    Y._Z.delete(R.AUTH_TOKEN),
                    Y._Z.delete(R.VERIFIED),
                    this._authToken = null,
                    location.reload()) : this._authToken && this._deviceIdLocalStorage && this.getCurrentUserValue()?.id && (this.setCurrentUserValue(null),
                    Y._Z.delete(R.USER_DATA),
                    Y._Z.delete(R.VERIFIED),
                    this._getDissociateFavoritesCall().pipe((0,
                    D.q)(1)).subscribe(()=>{
                        this.logoutCall().pipe((0,
                        D.q)(1)).subscribe(()=>{
                            this._deviceIdDisconnected$.next(),
                            location.reload()
                        }
                        )
                    }
                    ))
                }
                checkAuthToken() {
                    const c = Y._Z.getString(R.AUTH_TOKEN);
                    this._authToken !== c && this._setAuthToken(c, !1),
                    !this.deviceId && this._deviceIdLocalStorage && (this._deviceId = this._deviceIdLocalStorage,
                    this._platform = this._devicePlatformLocalStorage)
                }
                get authToken() {
                    return Y._Z.getString(R.AUTH_TOKEN)
                }
                set authToken(c) {
                    this._setAuthToken(c)
                }
                _setAuthToken(c, b=!0) {
                    c !== this._authToken && (null == c ? this.logout() : (b && Y._Z.setString(R.AUTH_TOKEN, c),
                    this._authToken = c,
                    this.setCurrentUserValue(this.decryptDataUser()),
                    this._isVerified$.next(this._isVerified())),
                    this._authToken = c)
                }
                getTokensDext(c) {
                    return this._apiService.get("back_url", "/user/check?id=" + c)
                }
                _isVerified() {
                    return !0 === Y._Z.get(R.VERIFIED)
                }
                _cleanUserData() {
                    Y._Z.delete(R.USER_DATA),
                    this.setCurrentUserValue(null)
                }
                _loginCall(c) {
                    return this._deviceId && (c.deviceId = this._deviceId),
                    this._apiService.post("back_url", "/user/login", c).pipe((0,
                    fe.b)(b=>{
                        const k = b.data && JSON.parse($e.decipherWithAESFromHex(b.data));
                        k && k.id === o && k.pricePlan ? this._cleanUserData() : b.data ? (Y._Z.set(R.USER_DATA, {
                            data: b.data
                        }),
                        this.setCurrentUserValue(this.decryptDataUser())) : this._cleanUserData()
                    }
                    ))
                }
                registerDevice(c) {
                    return this._deviceIdLocalStorage ? (0,
                    Pe.of)("Device already registered").pipe((0,
                    D.q)(1), (0,
                    fe.b)(()=>{
                        this._deviceId = this._deviceIdLocalStorage,
                        this._platform = this._devicePlatformLocalStorage
                    }
                    )) : (c.deviceId = c.deviceId.toLowerCase(),
                    this._registerDeviceCall(c).pipe((0,
                    D.q)(1), (0,
                    fe.b)(()=>{
                        Y._Z.setStringCompressed(e.DEVICE_ID, c.deviceId),
                        Y._Z.setString(e.PLATFORM, c.platform),
                        this._deviceId = c.deviceId,
                        this._platform = c.platform
                    }
                    )))
                }
                removeDeviceInfo() {
                    Y._Z.delete(e.DEVICE_ID),
                    Y._Z.delete(e.PLATFORM),
                    this._deviceId = null,
                    this._platform = null
                }
                getLinkCode() {
                    return this._apiService.get("back_url", "/user/link-code").pipe((0,
                    Oe.K)(()=>(0,
                    Pe.of)(null)))
                }
                logoutCall() {
                    return this._apiService.post("back_url", "/user/disconnect", {
                        deviceId: this._deviceId
                    })
                }
                get deviceIdDisconnected$() {
                    return this._deviceIdDisconnected$.asObservable()
                }
                get deviceId() {
                    return this._deviceId
                }
                get devicePlatform() {
                    return this._platform
                }
                get _deviceIdLocalStorage() {
                    return Y._Z.getStringCompressed(e.DEVICE_ID)
                }
                get _devicePlatformLocalStorage() {
                    return Y._Z.getString(e.PLATFORM)
                }
                _registerDeviceCall(c) {
                    return this._apiService.post("back_url", "/user/register-device", {
                        ...c
                    })
                }
                _getAssociateFavoritesCall() {
                    return null != this.deviceId ? this._apiService.get("shared_url", "/user/store/favs/lists/device/associate").pipe((0,
                    Oe.K)(()=>(0,
                    Pe.of)(null))) : Z.E
                }
                _getDissociateFavoritesCall() {
                    return null != this.deviceId ? this._apiService.get("shared_url", "/user/store/favs/lists/device/dissociate").pipe((0,
                    Oe.K)(()=>(0,
                    Pe.of)(null))) : Z.E
                }
                get isMobileApp() {
                    return !(!window.JSInterface?.clearCache && !window.webkit?.messageHandlers?.clearCache)
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(me),H.LFG(p))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        const Ue = "latestVersion";
        var Me = (()=>{
            return (A = Me || (Me = {})).HotFix = "-hotfix",
            A.Release = "",
            Me;
            var A
        }
        )();
        const _ = {
            [Me.HotFix]: 10,
            [Me.Release]: 30
        }
          , P = {
            FREE: 10,
            SUBS: 50
        };
        let B = (()=>{
            class A {
                get updateAvailable$() {
                    return this._updateAvailable.asObservable()
                }
                constructor(c, b, k, oe, Ae) {
                    this._router = c,
                    this._ngZone = b,
                    this._authenticationService = k,
                    this._apiService = oe,
                    this._environment = Ae,
                    this._initCharge = !0,
                    this._worker = null,
                    this._onRegisterWorker = new V.x,
                    this._onRegisterWorker$ = null,
                    this._updateAvailable = new V.x,
                    this._stopInterval = new de.t,
                    this._hasUserPlan = !1,
                    this._latestAppVersion = "",
                    this._latestVersionTypeSuffix = Me.Release,
                    this._workerUrl = null
                }
                initialize() {
                    try {
                        const c = new Worker(m.tu(new URL(m.p + m.u(4626),m.b)),{
                            type: void 0
                        });
                        this._workerUrl = c.scriptURL
                    } catch (c) {
                        console.warn("App Updates: could not create worker. Error:", c)
                    }
                    this._registerWorker().then(),
                    this._setWorkerMessageHandlers(),
                    this._router.events.pipe((0,
                    F.h)(c=>c instanceof xe.m2 || !this._initCharge && c instanceof xe.QW), (0,
                    F.h)(()=>{
                        if (this._initCharge)
                            return this._initCharge = !1,
                            !1;
                        const c = this._router.getCurrentNavigation();
                        return !(c && c.extras && c.extras.state && c.extras.state.skipAppHardUpdate)
                    }
                    ), (0,
                    F.h)(()=>null != Y._Z.getString(Ue) && Y._Z.getString(Ue) !== this._environment.appVersion), (0,
                    fe.b)(()=>{
                        this.updateApp()
                    }
                    )).subscribe(),
                    this._authenticationService.currentUser$.subscribe(c=>{
                        this._hasUserPlan = !!c && [T.P100, T.P20].includes(c.plan)
                    }
                    )
                }
                get latestAppVersion() {
                    return this._latestAppVersion || this._environment.appVersion
                }
                set latestAppVersion(c) {
                    this._latestAppVersion = -1 === c.lastIndexOf("-") ? c : c.slice(0, c.lastIndexOf("-")),
                    this._latestVersionTypeSuffix = -1 === c.lastIndexOf("-") ? Me.Release : c.slice(c.lastIndexOf("-"))
                }
                startAppVersionChecks() {
                    const c = this._onRegisterWorker$ || (0,
                    Pe.of)("start immediately")
                      , b = "?prop=version"
                      , k = this._hasUserPlan ? this._apiService.get("meta_url", b) : this._apiService.get("api_ethereum_url", `/info ${b}`);
                    c.subscribe(()=>{
                        (0,
                        ge.z)((0,
                        Pe.of)(!0), (0,
                        Ie.F)(243e3)).pipe((0,
                        st.R)(this._stopInterval), (0,
                        j.w)(()=>k.pipe((0,
                        L.U)(oe=>null == oe.data ? oe : oe.data)))).subscribe({
                            next: oe=>{
                                oe && oe.value && (this.latestAppVersion = oe.value,
                                Y._Z.setString(Ue, this.latestAppVersion),
                                this.latestAppVersion !== this._environment.appVersion && !this._environment.static_generation && (this.clearMobileCache(),
                                this._updateAvailable.next({
                                    version: this.latestAppVersion,
                                    forcedUpdateTimeout: _[this._latestVersionTypeSuffix]
                                })))
                            }
                            ,
                            complete: ()=>{
                                this._stopInterval.complete()
                            }
                        })
                    }
                    )
                }
                clearMobileCache() {
                    if (this._authenticationService.deviceId && this._authenticationService.devicePlatform)
                        switch (this._authenticationService.devicePlatform) {
                        case ue.Android:
                            try {
                                return window.JSInterface.clearCache()
                            } catch (c) {
                                return console.warn(`Error to clear cache platform ${ue.Android}, ${c}`)
                            }
                        case ue.Ios:
                            try {
                                return window.webkit.messageHandlers.clearCache.postMessage()
                            } catch (c) {
                                return console.warn(`Error to clear cache platform ${ue.Ios}, ${c}`)
                            }
                        }
                }
                updateApp() {
                    this.clearMobileCache(),
                    location.reload()
                }
                loadChangelog(c) {
                    const b = c.toLowerCase().split(" ").join(".");
                    return this._apiService.getFromJson(this._environment.app_scope + "/changelog.json?cb=" + b).pipe((0,
                    L.U)(k=>{
                        const oe = Object.keys(k).indexOf(c);
                        return Object.keys(k).map(Ve=>({
                            version: Ve,
                            ...k[Ve]
                        })).slice(oe)
                    }
                    ))
                }
                _registerWorker() {
                    var c = this;
                    return (0,
                    x.Z)(function*() {
                        if (null == Worker)
                            return (0,
                            pe.n)((0,
                            Pe.of)(null));
                        if (null != c._onRegisterWorker$)
                            return (0,
                            pe.n)(c._onRegisterWorker$);
                        if (c._worker && !c._worker.active)
                            c._unregisterWorker();
                        else if (null != c._worker)
                            return c._worker;
                        try {
                            c._onRegisterWorker$ = c._onRegisterWorker.asObservable(),
                            c._worker = null,
                            c._workerUrl && (c._worker = yield navigator.serviceWorker.register(c._workerUrl, {
                                scope: "./"
                            }))
                        } catch (b) {
                            null == navigator.serviceWorker ? console.warn("App Updates: could not register worker because register() function is not available in this environment") : console.error("App Updates: error while registering worker", b)
                        } finally {
                            c._onRegisterWorker$ = null,
                            c._onRegisterWorker.next(c._worker)
                        }
                        return c._worker
                    })()
                }
                _unregisterWorker() {
                    null != this._worker && (this._worker.unregister().then(),
                    this._worker = null)
                }
                _setWorkerMessageHandlers() {
                    null != navigator.serviceWorker && (navigator.serviceWorker.onmessage = c=>{
                        "numberOfClients" === c.data.type && (this._hasUserPlan ? c.data.payload.value > (this._environment.static_generation ? Number.POSITIVE_INFINITY : 50) : c.data.payload.value > (this._environment.static_generation ? Number.POSITIVE_INFINITY : 10)) && (navigator.serviceWorker.onmessage = null,
                        this._ngZone.run(()=>{
                            this._stopInterval.next("stop"),
                            this._router.navigate(["/max-tabs-error"], {
                                skipLocationChange: !0,
                                state: {
                                    skipAppHardUpdate: !0
                                }
                            })
                        }
                        ))
                    }
                    )
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(xe.F0),H.LFG(H.R0b),H.LFG(je),H.LFG(me),H.LFG(p))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )()
          , X = (()=>{
            class A {
                constructor(c) {
                    this.injector = c
                }
                get(c) {
                    var b = this;
                    return (0,
                    x.Z)(function*() {
                        return b.injector.get(yield c())
                    })()
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(H.zs3))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        var ce = m(69751);
        const be = new H.OlP("ScriptConfig");
        let Ee = (()=>{
            class A {
                constructor(c) {
                    if (this._scriptConfig = c,
                    null == this._scriptConfig)
                        throw new Error("LoadScript: missing config")
                }
                loadScript(c) {
                    return new ce.y(b=>{
                        if (this._checkExistingAndLoaded(c))
                            b.next(c),
                            b.complete();
                        else {
                            const k = document.createElement("script");
                            k.type = "text/javascript",
                            k.src = c.src,
                            k.id = c.name,
                            k.addEventListener("load", ()=>{
                                b.next(c),
                                b.complete()
                            }
                            ),
                            k.addEventListener("error", oe=>{
                                b.error(`Couldn't load script ${c.src}, ${oe}`)
                            }
                            ),
                            document.querySelector("body").append(k)
                        }
                    }
                    )
                }
                removeScript(c) {
                    return new ce.y(b=>{
                        this._checkExistingAndLoaded(c) ? document.querySelector(`#${c.name}`).remove() : (b.next(c),
                        b.complete())
                    }
                    )
                }
                _checkExistingAndLoaded(c) {
                    const b = this._scriptConfig.scriptList.find(oe=>oe.name === c.name)
                      , k = document.querySelector(`#${c.name}`);
                    return !!b && !!k
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(be, 8))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        var Be = m(82805)
          , Fe = (()=>{
            return (A = Fe || (Fe = {}))[A.Dark = 0] = "Dark",
            A[A.Light = 1] = "Light",
            Fe;
            var A
        }
        )()
          , Ke = (()=>{
            return (A = Ke || (Ke = {})).EN = "en",
            A.ES = "es",
            A.AR = "ar",
            A.CN = "cn",
            A.RU = "ru",
            A.HI = "hi",
            A.TR = "tr",
            Ke;
            var A
        }
        )()
          , ft = (()=>{
            return (A = ft || (ft = {})).ar = "ar",
            A.es = "es-ES",
            A.en = "en-US",
            A.cn = "zh-CN",
            A.ru = "ru",
            A.hi = "hi",
            A.tr = "tr",
            ft;
            var A
        }
        )();
        class ut {
            get language() {
                return this._language
            }
            get defaultConfigValue() {
                return this._defaultConfigValue
            }
            get localStorageConfigKey() {
                return this._localStorageConfigKey
            }
            constructor(w, c, b, k) {
                this._location = w,
                this._translate = c,
                this._seoService = b,
                this._rendererFactory = k,
                this._currentConfigValue = {},
                this._onConfigChange = new Le.X({}),
                this.onThemeChange$ = this.getConfigChanged$("dark_theme").pipe((0,
                L.U)(oe=>oe ? Fe.Dark : Fe.Light))
            }
            initialize(w, c) {
                this._document = w,
                this._renderer = c ?? this._rendererFactory.createRenderer(null, null),
                this._language = this.defaultConfigValue.language;
                const b = this._getConfigFromStorage();
                this._currentConfigValue = {
                    ...this.defaultConfigValue,
                    ...b
                },
                Y._Z.set(this.localStorageConfigKey, {
                    ...this._currentConfigValue
                }),
                this._language = this._currentConfigValue.language,
                this.changeConfig(this._currentConfigValue)
            }
            changeConfig(w) {
                this._currentConfigValue = this._mergeWithStoredConfig(w),
                this._changeAndStoreConfig(this._currentConfigValue)
            }
            getConfigChanged$(w) {
                return this._onConfigChange.asObservable().pipe((0,
                L.U)(c=>c[w]), (0,
                F.h)(c=>null != c))
            }
            overrideTranslateService(w) {
                this._translate = w
            }
            _changeAndStoreConfig(w) {
                null != w.dark_theme && this._changeTheme(w.dark_theme),
                null != w.language && this._changeLanguage(w.language),
                Y._Z.setString(this.localStorageConfigKey, JSON.stringify({
                    ...this._currentConfigValue
                })),
                this._onConfigChange.next(this._currentConfigValue)
            }
            _getConfigFromStorage() {
                return JSON.parse(Y._Z.getString(this.localStorageConfigKey)) || null
            }
            _changeTheme(w) {
                w ? this._renderer.addClass(this._document.body, "dark-theme") : this._renderer.removeClass(this._document.body, "dark-theme")
            }
            _changeLanguage(w) {
                this._language !== w && this._location.replaceState(this._location.path(!0).replace(`/${this._language}`, `/${w}`)),
                this._language = w,
                this._translate.setDefaultLang(w),
                this._document.querySelectorAll("html")[0].setAttribute("lang", w),
                this._setMetadataSEO(w)
            }
            _mergeWithStoredConfig(w) {
                let c = this._getConfigFromStorage() ?? {};
                const b = Object.keys(w)
                  , k = Object.values(w);
                for (const [oe,Ae] of b.entries()) {
                    const Ve = k[oe];
                    "object" == typeof w && null != w && (c = "object" == typeof Ve && null != Ve ? {
                        ...c,
                        [Ae]: {
                            ...c[Ae],
                            ...Ve
                        }
                    } : {
                        ...c,
                        [Ae]: Ve
                    })
                }
                return c
            }
            _setMetadataSEO(w) {
                this._seoService.removeGeneralMetaTag("robots"),
                w !== Ke.EN && this._seoService.setGeneralMetaTags({
                    robots: "noindex"
                })
            }
        }
        const Wt = "granted";
        let an = (()=>{
            class A {
                constructor(c, b) {
                    this._settingsService = c,
                    this._environment = b,
                    this._notificationEnabled = !1,
                    this._audio = null,
                    this._onRegisterWorker = new V.x,
                    this._onRegisterWorker$ = null,
                    this._workerUrl = null,
                    this._worker = null,
                    this._notificationStatus = {
                        enabled: !1,
                        granted: !1,
                        supported: !1
                    },
                    this._notificationsLogoUrl = "";
                    try {
                        const k = new Worker(m.tu(new URL(m.p + m.u(4239),m.b)),{
                            type: void 0
                        });
                        this._workerUrl = k.scriptURL
                    } catch (k) {
                        console.warn("Notifications: could not create worker. Error:", k)
                    }
                    this._settingsService.getConfigChanged$("notificationsAudioUrl").subscribe(k=>{
                        this._loadSound(k)
                    }
                    ),
                    this._settingsService.getConfigChanged$("notificationsLogoUrl").subscribe(k=>{
                        this._notificationsLogoUrl = k
                    }
                    ),
                    this._settingsService.getConfigChanged$("notifications").subscribe(k=>{
                        this._notificationEnabled = k ?? !1,
                        null == this._worker && this._notificationEnabled ? this._registerWorker().then() : null != this._worker && !this._notificationEnabled && this._unregisterWorker()
                    }
                    )
                }
                getPermission() {
                    return navigator.permissions.query({
                        name: "notifications"
                    })
                }
                getNotificationStatus() {
                    return this._updateStatus(!!this._notificationEnabled)
                }
                setNotificationStatus(c) {
                    var b = this;
                    return (0,
                    x.Z)(function*() {
                        return c ? (yield Notification.requestPermission()) === Wt && (yield b._registerWorker()) : b._unregisterWorker(),
                        yield b._updateStatus(c)
                    })()
                }
                notify(c, b=1e4) {
                    if (this._notificationEnabled)
                        for (const k of c) {
                            const oe = {
                                icon: this._notificationsLogoUrl,
                                body: k.body,
                                tag: "focus-window",
                                data: {
                                    id: k.id,
                                    returnPath: this._environment.app_scope + k.returnPath
                                }
                            };
                            this._notificationStatus.granted ? this._internalNotify(k, oe, b).then() : this.setNotificationStatus(!0).then(Ae=>{
                                Ae?.granted && this._internalNotify(k, oe, b).then()
                            }
                            )
                        }
                }
                _internalNotify(c, b, k) {
                    var oe = this;
                    return (0,
                    x.Z)(function*() {
                        if (oe._worker) {
                            try {
                                oe._audio?.play().then()
                            } catch {}
                            yield oe._worker.showNotification(c.title, b);
                            const Ae = yield oe._worker.getNotifications();
                            null != Ae && Ae.length > 0 && k > 0 && (0,
                            Be.H)(k).pipe((0,
                            fe.b)(()=>{
                                for (const Ve of Ae)
                                    Ve.close()
                            }
                            )).subscribe()
                        }
                    })()
                }
                _updateStatus(c=!1) {
                    var b = this;
                    return (0,
                    x.Z)(function*() {
                        let k = !1
                          , oe = !1
                          , Ae = !1;
                        if (!navigator.permissions)
                            return b._notificationStatus = {
                                enabled: k,
                                granted: oe,
                                supported: Ae
                            },
                            b._notificationStatus;
                        switch (Ae = !0,
                        (yield b.getPermission()).state) {
                        case "denied":
                            k = !1,
                            oe = !1;
                            break;
                        case Wt:
                            {
                                let Mt = yield b.getWorker();
                                Mt && Mt.active ? Mt.update().then().catch(Vn=>{
                                    b._environment.production || console.error("Notifications: could not update service worker", Vn)
                                }
                                ) : c && (Mt = yield b._registerWorker()),
                                k = !0,
                                oe = null != Mt && null != Mt.active;
                                break
                            }
                        default:
                            k = !0,
                            oe = !1
                        }
                        return b._notificationStatus = {
                            enabled: k,
                            granted: oe,
                            supported: Ae
                        },
                        b._notificationStatus
                    })()
                }
                _loadSound(c) {
                    this._audio = new Audio,
                    this._audio.src = c,
                    this._audio.load()
                }
                _registerWorker() {
                    var c = this;
                    return (0,
                    x.Z)(function*() {
                        if (!(typeof Worker > "u")) {
                            if (null != c._onRegisterWorker$)
                                return (0,
                                pe.n)(c._onRegisterWorker$);
                            if (c._worker && !c._worker.active)
                                c._unregisterWorker();
                            else if (null != c._worker)
                                return c._worker;
                            try {
                                c._onRegisterWorker$ = c._onRegisterWorker.asObservable(),
                                c._worker = null,
                                c._workerUrl && (c._worker = yield navigator.serviceWorker.register(c._workerUrl))
                            } catch (b) {
                                null == navigator.serviceWorker ? console.warn("Notifications: could not register worker because register() function is not available in this environment") : console.error("Notifications: error while registering worker", b)
                            } finally {
                                c._onRegisterWorker$ = null,
                                c._onRegisterWorker.next(c._worker)
                            }
                        }
                        return c._worker
                    })()
                }
                _unregisterWorker() {
                    null != this._worker && (this._worker.unregister().then(),
                    this._worker = null)
                }
                getWorker() {
                    return navigator.serviceWorker.getRegistration(this._workerUrl ?? "")
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(ut),H.LFG(p))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        const xt = {
            generalMetaTag: {
                title: "name='title'",
                type: "name='type'",
                image: "name='image'",
                url: "name='url'",
                description: "name='description'",
                siteName: "property='og:site_name'",
                showLarge: "name='twitter:card'",
                altCard: "name='twitter:image:alt'",
                fbAppId: "property='fb:app_id'",
                twtAppId: "name='twitter:site'",
                robots: "name='robots'"
            },
            facebook: {
                title: "property='og:title'",
                description: "property='og:description'",
                url: "property='og:url'",
                image: "property='og:image'",
                altImg: "property='og:image:alt'",
                height: "property='og:image:height'",
                width: "property='og:image:width'"
            },
            linkedin: {
                title: "property='og:title'",
                type: "property='og:type'",
                image: "property='og:image'",
                description: "property='og:description'",
                author: "name='author'"
            },
            twitter: {
                title: "name='twitter:title'",
                description: "name='twitter:description'",
                image: "name='twitter:image'",
                altImage: "name='twitter:image:alt'",
                site: "name='twitter:site'",
                card: "name='twitter:creator'",
                creator: "name='twitter:card'",
                url: "name='twitter:url'"
            },
            discord: {
                title: "property='og:title'",
                siteName: "property='og:site_name'",
                description: "property='og:description'",
                image: "property='og:image'",
                themeColor: "name='theme-color'",
                card: "name='twitter:card'"
            },
            telegram: {
                title: "property='og:title'",
                siteName: "property='og:site_name'",
                description: "property='og:description'",
                image: "property='og:image'"
            }
        };
        var Dt = m(11481);
        const Ut = "og:description"
          , Rt = "twitter:card"
          , Nt = "og:site_name";
        let bt = (()=>{
            class A {
                constructor(c, b, k) {
                    this._titleService = c,
                    this._metaService = b,
                    this._environment = k,
                    this._titleVersion = ` | ${this._environment.appTitle}`
                }
                setTitle(c) {
                    this._titleService.setTitle(c + this._titleVersion)
                }
                setGeneralMetaTags(c) {
                    const b = [];
                    c.title && (this.removeGeneralMetaTag("title"),
                    b.push({
                        name: "title",
                        content: c.title
                    })),
                    c.type && (this.removeGeneralMetaTag("type"),
                    b.push({
                        name: "type",
                        content: c.type
                    })),
                    c.image && (this.removeGeneralMetaTag("image"),
                    b.push({
                        name: "image",
                        content: c.image
                    })),
                    c.url && (this.removeGeneralMetaTag("url"),
                    b.push({
                        name: "url",
                        content: `${c.url}`
                    })),
                    c.appUrl && (this.removeGeneralMetaTag("url"),
                    b.push({
                        name: "url",
                        content: `${this._environment.appUrl}/${c.appUrl}`
                    })),
                    c.showLarge && (this.removeGeneralMetaTag("showLarge"),
                    b.push({
                        name: Rt,
                        content: c.showLarge
                    })),
                    c.description && (this.removeGeneralMetaTag("description"),
                    b.push({
                        name: "description",
                        content: c.description
                    })),
                    c.siteName && (this.removeGeneralMetaTag("siteName"),
                    b.push({
                        property: Nt,
                        content: c.siteName
                    })),
                    c.altCard && (this.removeGeneralMetaTag("altCard"),
                    b.push({
                        name: "twitter:image:alt",
                        content: c.altCard
                    })),
                    c.fbAppId && (this.removeGeneralMetaTag("fbAppId"),
                    b.push({
                        property: "fb:app_id",
                        content: c.fbAppId
                    })),
                    c.twtAppId && (this.removeGeneralMetaTag("twtAppId"),
                    b.push({
                        name: "twitter:site",
                        content: c.twtAppId
                    })),
                    c.robots && (this.removeGeneralMetaTag("robots"),
                    b.push({
                        name: "robots",
                        content: c.robots
                    })),
                    b.length > 0 && this._metaService.addTags(b, !1)
                }
                setFacebookTags(c) {
                    const b = [];
                    c.title && (this.removeFacebookTag("title"),
                    b.push({
                        property: "og:title",
                        content: c.title
                    })),
                    c.description && (this.removeFacebookTag("description"),
                    b.push({
                        property: Ut,
                        content: c.description
                    })),
                    c.url && (this.removeFacebookTag("url"),
                    b.push({
                        property: "og:url",
                        content: `${c.url}`
                    })),
                    c.appUrl && (this.removeFacebookTag("url"),
                    b.push({
                        property: "og:url",
                        content: `${this._environment.appUrl}/${c.appUrl}`
                    })),
                    c.image && (this.removeFacebookTag("altImg"),
                    b.push({
                        property: "og:image",
                        content: c.image
                    })),
                    c.altImage && (this.removeFacebookTag("altImg"),
                    b.push({
                        property: "og:image:alt",
                        content: c.altImage
                    })),
                    c.height && (this.removeFacebookTag("width"),
                    b.push({
                        property: "og:image:height",
                        content: c.height
                    })),
                    c.width && (this.removeFacebookTag("width"),
                    b.push({
                        property: "og:image:width",
                        content: c.width
                    })),
                    b.length > 0 && this._metaService.addTags(b, !1)
                }
                setLinkedinTags(c) {
                    const b = [];
                    c.title && (this.removeLinkedinTag("title"),
                    b.push({
                        property: "og:title",
                        content: c.title
                    })),
                    c.type && (this.removeLinkedinTag("type"),
                    b.push({
                        property: "og:type",
                        content: c.type
                    })),
                    c.image && (this.removeLinkedinTag("image"),
                    b.push({
                        property: "og:image",
                        content: c.image
                    })),
                    c.description && (this.removeLinkedinTag("description"),
                    b.push({
                        property: Ut,
                        content: c.description
                    })),
                    c.author && (this.removeLinkedinTag("author"),
                    b.push({
                        name: "author",
                        content: c.author
                    })),
                    b.length > 0 && this._metaService.addTags(b, !1)
                }
                setTwitterTags(c) {
                    const b = [];
                    c.title && (this._removeMetaTag("name='twitter:title'"),
                    b.push({
                        name: "twitter:title",
                        content: c.title
                    })),
                    c.description && (this._removeMetaTag("name='twitter:description'"),
                    b.push({
                        name: "twitter:description",
                        content: c.description
                    })),
                    c.image && (this._removeMetaTag("name='twitter:image'"),
                    b.push({
                        name: "twitter:image",
                        content: c.image
                    })),
                    c.altImage && (this._removeMetaTag("name='twitter:image:alt'"),
                    b.push({
                        name: "twitter:image:alt",
                        content: c.altImage
                    })),
                    c.site && (this._removeMetaTag("name='twitter:site'"),
                    b.push({
                        name: "twitter:site",
                        content: c.site
                    })),
                    c.creator && (this._removeMetaTag("name='twitter:creator'"),
                    b.push({
                        name: "twitter:creator",
                        content: c.creator
                    })),
                    c.card && (this._removeMetaTag("name='twitter:card'"),
                    b.push({
                        name: Rt,
                        content: c.card
                    })),
                    c.url && (this._removeMetaTag("name='twitter:url"),
                    b.push({
                        name: "twitter:url",
                        content: `${c.url}`
                    })),
                    c.appUrl && (this._removeMetaTag("name='twitter:url"),
                    b.push({
                        name: "twitter:url",
                        content: `${this._environment.appUrl}/${c.appUrl}`
                    })),
                    b.length > 0 && this._metaService.addTags(b, !1)
                }
                setDiscordTags(c) {
                    const b = [];
                    c.title && (this.removeDiscordTag("title"),
                    b.push({
                        property: "og:title",
                        content: c.title
                    })),
                    c.siteName && (this.removeDiscordTag("siteName"),
                    b.push({
                        property: Nt,
                        content: c.siteName
                    })),
                    c.description && (this.removeDiscordTag("description"),
                    b.push({
                        property: Ut,
                        content: c.description
                    })),
                    c.image && (this.removeDiscordTag("image"),
                    b.push({
                        property: "og:image",
                        content: c.image
                    })),
                    c.themeColor && (this.removeDiscordTag("themeColor"),
                    b.push({
                        name: "theme-color",
                        content: c.themeColor
                    })),
                    c.card && (this.removeDiscordTag("card"),
                    b.push({
                        name: Rt,
                        content: c.card
                    })),
                    b.length > 0 && this._metaService.addTags(b, !1)
                }
                setTelegramTags(c) {
                    const b = [];
                    c.title && (this.removeTelegramTag("title"),
                    b.push({
                        property: "og:title",
                        content: c.title
                    })),
                    c.siteName && (this.removeTelegramTag("siteName"),
                    b.push({
                        property: Nt,
                        content: c.siteName
                    })),
                    c.description && (this.removeTelegramTag("description"),
                    b.push({
                        property: Ut,
                        content: c.description
                    })),
                    c.image && (this.removeTelegramTag("image"),
                    b.push({
                        property: "og:image",
                        content: c.image
                    })),
                    b.length > 0 && this._metaService.addTags(b, !1)
                }
                _removeMetaTag(c) {
                    this._metaService.removeTag(c)
                }
                removeGeneralMetaTag(c) {
                    this._removeMetaTag(xt.generalMetaTag[c])
                }
                removeFacebookTag(c) {
                    this._removeMetaTag(xt.facebook[c])
                }
                removeLinkedinTag(c) {
                    this._removeMetaTag(xt.linkedin[c])
                }
                removeTwitterTag(c) {
                    this._removeMetaTag(xt.twitter[c])
                }
                removeDiscordTag(c) {
                    this._removeMetaTag(xt.discord[c])
                }
                removeTelegramTag(c) {
                    this._removeMetaTag(xt.telegram[c])
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(Dt.Dx),H.LFG(Dt.h_),H.LFG(p))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )()
          , at = (()=>{
            class A {
                constructor(c) {
                    this._apiService = c
                }
                getSubscription(c) {
                    const b = c ? `?w=${c.toLowerCase()}` : "";
                    return this._apiService.get("back_url", `/user/subscription ${b}`)
                }
                getSubscriptionInfo() {
                    return this._apiService.get("back_url", "/user/subscriptions-info")
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(me))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        var Ft = m(38893)
          , Dn = m(17414)
          , rn = m(28746);
        const sn = "lastSynced"
          , Yt = "<autosync>";
        function ln(A, w) {
            return null != w && [`${A.back_url}/user/login`, Yt].some(b=>w.url.startsWith(b))
        }
        const Bt = "lastSynced";
        let gn = (()=>{
            class A {
                constructor(c, b) {
                    this._authenticationService = c,
                    this._environment = b,
                    this._synced$ = new Ft.c,
                    this._login$ = null,
                    this._loginAttempts = 1
                }
                initialize() {
                    this._lastTry = Date.now(),
                    this._trySync(),
                    setInterval(()=>{
                        this._trySync()
                    }
                    , 2e3)
                }
                sync(c) {
                    const b = c ?? {
                        url: Yt
                    };
                    if (!this.isSynced()) {
                        const oe = ln(this._environment, b);
                        if (oe && this._shouldSync())
                            return this._lastTry = Date.now(),
                            this._loginAttempts++,
                            this._login$ = this._authenticationService.refreshLogin().pipe((0,
                            Dn.V)(1e4), (0,
                            fe.b)(()=>{
                                this._synced$.next(!0),
                                this._loginAttempts = 0,
                                this._lastTry = Date.now(),
                                Y._Z.setDate(Bt, new Date)
                            }
                            ), (0,
                            Oe.K)(Ae=>(this._synced$.next(!1),
                            (0,
                            Pe.of)(Ae))), (0,
                            rn.x)(()=>{
                                this._login$ = null,
                                this._synced$.complete(),
                                this._synced$ = new Ft.c
                            }
                            )),
                            this._login$.subscribe(),
                            this._synced$;
                        if (oe)
                            return (0,
                            Pe.of)(!0)
                    }
                    return this._synced$
                }
                isSyncing() {
                    return null != this._login$
                }
                isSynced() {
                    const c = Y._Z.getDate(Bt);
                    this._authenticationService.checkAuthToken();
                    const b = this._authenticationService.decryptDataUser();
                    return null != b && b.id !== o || this._authenticationService.deviceId ? !this.isSyncing() && null != c && Date.now() - c.getTime() <= 27e4 && null != this._authenticationService.authToken : (Y._Z.delete(Bt),
                    !0)
                }
                _shouldSync() {
                    if (null != this._login$)
                        return !1;
                    const c = Date.now() - this._lastTry
                      , b = 1e3 * this._getBackoffValue();
                    return c > b && b <= 3e4 || Date.now() - this._lastTry > 3e4 && b >= 3e4
                }
                _trySync() {
                    this.sync().subscribe()
                }
                _getBackoffValue() {
                    return Math.pow(1.5, this._loginAttempts) - 1
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(je),H.LFG(p))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        var Gt = m(54009)
          , pn = m(4326);
        const Tt = 50
          , St_PING_TIMEOUT = {
            code: 4e3,
            reason: "ping timeout reached"
        }
          , St_MSG_ENDED_RECEIVED = {
            code: 4001,
            reason: "msg ended received"
        }
          , St_NO_SUBSCRIPTIONS_ON_OPEN = {
            code: 4002,
            reason: "no subs on open"
        }
          , St_NO_SUBSCRIPTIONS_AFTER_UNSUBSCRIBE = {
            code: 4003,
            reason: "no subs after unsubscribe"
        };
        class Cn {
            constructor(w, c) {
                this._injector = w,
                this.socket = null,
                this.isConnected$ = new Le.X(!1),
                this._events$ = new V.x,
                this.errors$ = new V.x,
                this._reconnectAttempts = 0,
                this._requestCount = 1,
                this._registeredSubscriptions = new Map,
                this._requestCallback = [],
                this._lastMessageDate = null,
                this._lastDisconnectionTs = null,
                this._isIdle = !1,
                this._connectTimeout = null,
                this._idleTimeout = null,
                this._pingTimeout = null,
                this.closeOnInactive = !1,
                this._authenticationService = w.get(je),
                this._url = c
            }
            _connect(w) {
                this.closeOnInactive = w;
                try {
                    this.socket = new WebSocket(this._url),
                    this.socket.addEventListener("message", this._handleMessage.bind(this)),
                    this.socket.addEventListener("open", this._handleOpen.bind(this)),
                    this.socket.addEventListener("close", this._handleClose.bind(this)),
                    this.socket.addEventListener("error", this._handleError.bind(this))
                } catch (c) {
                    console.error(c),
                    this._emitError(c)
                }
            }
            _resubscribeRegisteredChannels() {
                for (const [w,c] of this._registeredSubscriptions.entries())
                    if (c && c.params.pairs && c.params.pairs.length > Tt)
                        for (let b = 0; b < c.params.pairs.length; b += Tt) {
                            const k = {
                                ...c.params
                            };
                            k.pairs = k.pairs.slice(b, b + Tt),
                            this._doSubscribe(w, k)
                        }
                    else
                        this._doSubscribe(w, c?.params ?? {})
            }
            _handleClose() {
                if (this.socket && (this.socket.removeEventListener("message", this._handleMessage),
                this.socket.removeEventListener("open", this._handleOpen),
                this.socket.removeEventListener("close", this._handleClose),
                this.socket.removeEventListener("error", this._handleError),
                this.socket = null,
                this.lastDisconnectionTs = Date.now()),
                this.isConnected$.next(!1),
                this._lastMessageDate = null,
                0 === this._registeredSubscriptions.size)
                    console.log("Socket: closed");
                else if (console.error("Socket: closed. Reconnecting..."),
                !this._isIdle) {
                    this._reconnectAttempts++;
                    const w = Math.min(250 * this._getBackoffValue(), 2e4);
                    console.log("Socket: connecting...", w, "s"),
                    null != this._connectTimeout && clearTimeout(this._connectTimeout),
                    this._connectTimeout = window.setTimeout(()=>{
                        this._connect(this.closeOnInactive)
                    }
                    , w)
                }
            }
            _handleEnded() {
                this._isIdle = !0,
                null != this._idleTimeout && (clearTimeout(this._idleTimeout),
                this._idleTimeout = null),
                this._idleTimeout = window.setTimeout(()=>{
                    this._isIdle = !1,
                    this._idleTimeout = null,
                    this._connect(this.closeOnInactive)
                }
                , 1e4),
                this._forceClose(St_MSG_ENDED_RECEIVED)
            }
            _handleError(w) {
                console.error("Socket: closing due to error", w),
                this._emitError(w)
            }
            _handleOpen() {
                console.log("Socket: connected"),
                this._lastMessageDate = new Date,
                this._reconnectAttempts = 0,
                this.closeOnInactive && 0 === this._registeredSubscriptions.size ? this._forceClose(St_NO_SUBSCRIPTIONS_ON_OPEN) : (this._keepConnected(),
                this._resubscribeRegisteredChannels()),
                this.isConnected$.next(!0)
            }
            _handleMessage(w) {
                const c = w.data;
                switch (this._lastMessageDate = new Date,
                c) {
                case "pong":
                    this._handlePong();
                    break;
                case "0":
                    this._handleEnded();
                    break;
                default:
                    try {
                        this._decodeJsonRpc(c)
                    } catch (b) {
                        this._emitError(b)
                    }
                }
            }
            _handlePong() {
                clearTimeout(this._pingTimeout),
                this._pingTimeout = null
            }
            _sendPing() {
                null == this._pingTimeout && (this.socket.send("ping"),
                this._pingTimeout = window.setTimeout(()=>{
                    this.isConnected() && this._forceClose(St_PING_TIMEOUT),
                    clearTimeout(this._pingTimeout),
                    this._pingTimeout = null
                }
                , 3e3))
            }
            isConnected() {
                return !!this.socket && this.socket.readyState === WebSocket.OPEN
            }
            isClosed() {
                return !this.socket || this.socket.readyState === WebSocket.CLOSED || this.socket.readyState === WebSocket.CLOSING
            }
            _forceClose(w) {
                this.socket && this.socket.close(w.code, w.reason)
            }
            _keepConnected() {
                (0,
                Pe.of)({}).pipe((0,
                F.h)(()=>!this._isIdle), (0,
                fe.b)(()=>this._authenticate()), (0,
                Gt.a)(w=>w.pipe((0,
                F.h)(()=>this.isConnected()), (0,
                pn.g)(12e4)))).subscribe(),
                (0,
                Pe.of)({}).pipe((0,
                F.h)(()=>!this._isIdle), (0,
                Gt.a)(w=>w.pipe((0,
                pn.g)(2e3), (0,
                F.h)(()=>this.isConnected()))), (0,
                F.h)(()=>!!this._lastMessageDate && Date.now() - this._lastMessageDate.getTime() > 1e4), (0,
                fe.b)(()=>this._sendPing())).subscribe()
            }
            _authenticate() {
                !this.isConnected() || !this._authenticationService.authToken || this.sendJsonRpc("auth", this._authenticationService.authToken, ()=>{}
                , ()=>{}
                )
            }
            _encodeJsonRpc(w, c, b, k) {
                const oe = {
                    jsonrpc: "2.0",
                    method: w,
                    params: c,
                    id: this._requestCount++
                };
                return this._requestCallback[oe.id] = {
                    success: b,
                    error: k
                },
                JSON.stringify(oe)
            }
            sendJsonRpc(w, c, b, k) {
                this._waitForSocketConnection(this.socket, ()=>{
                    this.socket.send(this._encodeJsonRpc(w, c, b, k))
                }
                )
            }
            _decodeJsonRpc(w) {
                const c = JSON.parse(w)
                  , b = this._requestCallback[c.id];
                if (b && b.success) {
                    switch (c.result && (c.result.data || c.result.error)) {
                    case "limited":
                    case "ignored":
                        return void (b.error && b.error(c.result));
                    case "ready":
                        return
                    }
                    if (!c.result || "ok" !== c.result.status.toLowerCase())
                        throw new Error(c.result && JSON.stringify(c.result.error) || c);
                    b.success(c.result.data)
                } else
                    console.error("Socket: no callback found for " + w, c.id)
            }
            _getBackoffValue() {
                return Math.pow(1.5, this._reconnectAttempts) - 1
            }
            register(w, c, b=null) {
                let k = this._registeredSubscriptions.get(w);
                b && k && k.params ? (k.counter++,
                k.params = {
                    ...b(k.params, c),
                    chain: c.chain
                }) : k = {
                    params: c,
                    counter: 1
                },
                this._registeredSubscriptions.set(w, k)
            }
            unregister(w) {
                const c = this._registeredSubscriptions.get(w);
                if (c)
                    return !c.counter || c.counter <= 1 ? (c.counter = 0,
                    this._registeredSubscriptions.delete(w)) : c.counter--,
                    c.counter;
                console.warn(`Socket: missing subscription ${w}`)
            }
            unsubscribe(w, c) {
                const b = this.unregister(w);
                this.isConnected() && !b && this._doUnsubscribe(w, c)
            }
            _waitForSocketConnection(w, c) {
                if (w && 1 === w.readyState)
                    return c();
                setTimeout(()=>{
                    this._waitForSocketConnection(w, c)
                }
                , 50)
            }
            _doSubscribe(w, c) {
                this.sendJsonRpc("subscribe", {
                    ...c,
                    channel: w
                }, b=>{
                    this._events$.next({
                        event: b,
                        channel: w
                    })
                }
                , b=>{
                    console.warn("Socket: could not subscribe to channel", w),
                    this._emitError(b)
                }
                )
            }
            _doUnsubscribe(w, c) {
                this.sendJsonRpc("unsubscribe", c ? {
                    ...c,
                    channel: w
                } : {
                    channel: w
                }, ()=>{
                    this.closeOnInactive && 0 === this._registeredSubscriptions.size && this._forceClose(St_NO_SUBSCRIPTIONS_AFTER_UNSUBSCRIBE)
                }
                , b=>{
                    this._emitError(b)
                }
                )
            }
            closeConnection() {
                this._forceClose(St_NO_SUBSCRIPTIONS_AFTER_UNSUBSCRIBE)
            }
            subscribe(w, c, b=null, k=!1) {
                return this.register(w, c, b),
                this.isConnected() ? this._doSubscribe(w, c) : this.isClosed() && this._connect(k),
                new ce.y(oe=>{
                    const Ae = new V.x;
                    return this._events$.asObservable().pipe((0,
                    st.R)(Ae), (0,
                    F.h)(Ve=>Ve.channel === w)).subscribe({
                        next: Ve=>{
                            oe.next(Ve.event)
                        }
                        ,
                        complete: ()=>{
                            this.unsubscribe(w, c),
                            oe.closed || oe.complete()
                        }
                    }),
                    ()=>{
                        Ae.next("cancel subscription"),
                        Ae.complete()
                    }
                }
                )
            }
            get lastDisconnectionTs() {
                return this._lastDisconnectionTs
            }
            set lastDisconnectionTs(w) {
                this._lastDisconnectionTs = w
            }
            _emitError(w) {
                const c = "string" == typeof w ? w : w.toString();
                this.errors$.next(c)
            }
        }
        let bn = (()=>{
            class A {
                constructor(c, b, k) {
                    this._settingService = c,
                    this._router = b,
                    this._environment = k,
                    this._language = Ke.EN,
                    this._settingService.getConfigChanged$("language").subscribe(oe=>{
                        this._language = oe
                    }
                    )
                }
                navigate(c, b={}) {
                    return this._router.navigateByUrl(`/${this._language}${c}`, b)
                }
                windowNavigate(c, b, k) {
                    return window.open(`${this._environment.app_scope}/${this._language}${c}`, b, k)
                }
                reloadRoute(c, b={}) {
                    const k = {
                        ...b
                    };
                    this.navigate(c, k).then()
                }
                getCurrentScrollTopPosition(c) {
                    const b = document.querySelector(c);
                    return b ? {
                        state: {
                            scrollTop: `${c}:${b.scrollTop}`
                        }
                    } : null
                }
                restorePreviousScrollPosition(c) {
                    const b = c?.extras?.state?.scrollTop || null;
                    b && setTimeout(()=>{
                        const k = b.indexOf(":")
                          , oe = b.slice(0, k)
                          , Ae = Number.parseInt(b.slice(k + 1), 10)
                          , Ve = document.querySelector(oe);
                        Ve && (Ve.scrollTop = Number.isNaN(Ae) ? 0 : Ae)
                    }
                    , 2e3)
                }
                setLanguageToURL(c) {
                    return `${this._environment.app_scope}/${this._language}${c}`
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(ut),H.LFG(xe.F0),H.LFG(p))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )();
        const Kt = new H.OlP("CaptchaConfig");
        let Bn = (()=>{
            class A {
                constructor(c, b) {
                    if (this._apiService = c,
                    this._captchaConfig = b,
                    null == this._captchaConfig)
                        throw new Error("Captcha: missing config")
                }
                checkTokenCaptcha(c) {
                    const b = new FormData;
                    return b.append("cf-turnstile-response", c),
                    this._apiService.postFormDataUrl(this._captchaConfig.url, b).pipe((0,
                    L.U)(k=>k || null), (0,
                    Oe.K)(()=>(0,
                    Pe.of)(null)))
                }
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.LFG(me),H.LFG(Kt, 8))
            }
            ,
            A.\u0275prov = H.Yz7({
                token: A,
                factory: A.\u0275fac,
                providedIn: "root"
            }),
            A
        }
        )()
          , Sn = (()=>{
            class A extends Y.K9 {
                set appRouterLink(c) {
                    this.routerLink.routerLink = null === c ? null : `/${this._language}${c}`,
                    this._appRouterLink = null === c ? null : `/${this._language}${c}`
                }
                get appRouterLink() {
                    return this._appRouterLink
                }
                constructor(c, b) {
                    super(),
                    this.routerLink = c,
                    this._settingService = b,
                    this._appRouterLink = null,
                    this._language = this._settingService.language,
                    this._settingService.getConfigChanged$("language").pipe((0,
                    Y.sL)(this)).subscribe(k=>{
                        this._language = k
                    }
                    )
                }
                onDestroy() {}
            }
            return A.\u0275fac = function(c) {
                return new (c || A)(H.Y36(xe.rH),H.Y36(ut))
            }
            ,
            A.\u0275dir = H.lG2({
                type: A,
                selectors: [["", "appRouterLink", ""]],
                inputs: {
                    appRouterLink: "appRouterLink"
                },
                standalone: !0,
                features: [H.qOj, H.zW0([{
                    directive: xe.rH,
                    inputs: ["routerLink", "appRouterLink"]
                }])]
            }),
            A
        }
        )();
        const $n = A=>{
            const w = (0,
            H.f3M)(xe.F0)
              , b = (0,
            H.f3M)(je).getCurrentUserValue();
            return b && (!A.data.roles || !1 !== A.data.roles.some(k=>b.plan.includes(k))) || (w.navigate(["/"]),
            !1)
        }
          , Mn = ()=>{
            const A = (0,
            H.f3M)(xe.F0)
              , c = (0,
            H.f3M)(je).getCurrentUserValue();
            return c && !(!c.isAdmin && !c.isSuperAdmin) || (A.navigate(["/"]),
            !1)
        }
        ;
        class Jt {
            static get supportNavigationLanguage() {
                return this.languageList.find(w=>navigator.language === ft[w]) ?? Ke.EN
            }
            static getCurrentStoredLanguage(w) {
                const c = JSON.parse(Y._Z.getString(w));
                return c && c?.language ? c.language : this.supportNavigationLanguage
            }
            static get languageList() {
                return Y.lM.convertEnumToArray(Ke)
            }
        }
        const vn = (A,w)=>{
            const c = (0,
            H.f3M)(bn)
              , b = (0,
            H.f3M)(ut)
              , k = A.params.language;
            if (!Jt.languageList.includes(k))
                return c.navigate(w.url).then(),
                !1;
            if (w.url !== `/${k}` && k !== b.language || k !== b.language) {
                const oe = w.url.replace(`/${k}`, "");
                return c.navigate(oe).then(),
                !1
            }
            return !0
        }
        ;
        var qt = m(95577);
        const Pn = [{
            provide: ne.TP,
            useClass: (()=>{
                class A {
                    constructor(c, b, k) {
                        this._authenticationService = c,
                        this._syncService = b,
                        this._environment = k;
                        const Ae = [...Object.keys(this._environment.apiUrls).map(Ve=>this._environment.apiUrls[Ve]), this._environment.back_url, this._environment.meta_url, this._environment.shared_url];
                        this._urlsWithBearerRegex = new RegExp(`^(${Ae.join("|")})`)
                    }
                    intercept(c, b) {
                        return this._urlsWithBearerRegex.test(c.url) ? this.handleUrlWithBearer(c, b) : b.handle(c)
                    }
                    handleUrlWithBearer(c, b) {
                        const k = {
                            Accept: "application/json"
                        };
                        return ln(this._environment, c) || this._syncService.isSynced() ? (0,
                        Pe.of)(!0).pipe((0,
                        L.U)(()=>this._addBearer(c, k)), (0,
                        qt.z)(oe=>this.handleBearerResponse(oe, b))) : this._syncService.sync(c).pipe((0,
                        L.U)(()=>this._addBearer(c, k)), (0,
                        qt.z)(Ae=>this.handleBearerResponse(Ae, b)))
                    }
                    handleBearerResponse(c, b) {
                        return b.handle(c).pipe((0,
                        fe.b)(k=>{
                            if (!(k instanceof ne.Zn))
                                return;
                            const oe = k;
                            oe.headers.keys() && oe.headers.get("x-auth") && this._storeBearer(oe.headers.get("x-auth"))
                        }
                        ), (0,
                        Oe.K)(k=>(401 === k.status && function Un() {
                            Y._Z.delete(sn)
                        }(),
                        (0,
                        re._)(k))))
                    }
                    _addBearer(c, b) {
                        this._authenticationService.checkAuthToken();
                        let k = {};
                        const oe = this._authenticationService.getCurrentUserValue();
                        return (oe && oe.id !== o || this._authenticationService.deviceId) && (k = {
                            Authorization: `Bearer ${this._authenticationService.authToken}`
                        }),
                        c.clone({
                            setHeaders: {
                                ...b,
                                ...k
                            }
                        })
                    }
                    _storeBearer(c) {
                        c && this._authenticationService.authToken !== c && (this._authenticationService.authToken = c,
                        function cn() {
                            Y._Z.setDate(sn, new Date)
                        }())
                    }
                }
                return A.\u0275fac = function(c) {
                    return new (c || A)(H.LFG(je),H.LFG(gn),H.LFG(p))
                }
                ,
                A.\u0275prov = H.Yz7({
                    token: A,
                    factory: A.\u0275fac,
                    providedIn: "root"
                }),
                A
            }
            )(),
            multi: !0
        }];
        class On extends Worker {
            constructor(w, c) {
                super(w, c),
                this.scriptURL = w,
                this.options = c
            }
        }
        window.Worker !== On && (window.Worker = On);
        const jt = A=>{
            const w = (0,
            H.f3M)(ut)
              , c = (0,
            H.f3M)(p)
              , b = w.language
              , k = A.params.language ?? null
              , oe = !!k && Jt.languageList.includes(k);
            return oe && b === k ? b : c.static_generation && oe ? k : w.language
        }
          , Hn = ()=>(0,
        H.f3M)(xe.F0).getCurrentNavigation()
    }
    ,
    77575: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            lQ: ()=>n,
            pc: ()=>ye,
            G_: ()=>ge,
            f6: ()=>Ie
        });
        var R = m(61135)
          , o = m(52413)
          , e = m(94650);
        let T = (()=>{
            class we {
                constructor() {
                    this.registryIcons = new Map
                }
                addIcons(Ce) {
                    for (const De of Ce)
                        "" != De.name && "" != De.svgData ? this.registryIcons.set(De.name, {
                            svgData: De.svgData,
                            viewBox: De?.viewBox ?? void 0
                        }) : console.warn("Icon name or icon svgData cant be empty")
                }
                getIcon(Ce) {
                    return this.registryIcons.has(Ce) || console.warn(`Icon ${Ce} not found on custom library`),
                    this.registryIcons.get(Ce)
                }
            }
            return we.\u0275fac = function(Ce) {
                return new (Ce || we)
            }
            ,
            we.\u0275prov = e.Yz7({
                token: we,
                factory: we.\u0275fac,
                providedIn: "root"
            }),
            we
        }
        )();
        const ie = ["svgIcon"];
        let n = (()=>{
            class we extends o.K9 {
                get name() {
                    return this._name
                }
                set name(Ce) {
                    this._name = Ce,
                    this._nameChanged$.next()
                }
                constructor(Ce, De) {
                    super(),
                    this._customIconsService = Ce,
                    this._cdRef = De,
                    this.svgIcon = null,
                    this._nameChanged$ = new R.X(null),
                    this._name = "",
                    this.viewBox = "0 0 20 20",
                    this.width = 20,
                    this.transform = ""
                }
                ngOnInit() {
                    this._nameChanged$.pipe((0,
                    o.sL)(this)).subscribe(()=>{
                        this.svgIcon && (this.svgIcon.nativeElement.innerHTML = "",
                        this._cdRef.detectChanges());
                        const Ce = this._customIconsService.getIcon(this.name);
                        Ce && (Ce?.viewBox && (this.viewBox = Ce.viewBox),
                        this.svgIcon && (this.svgIcon.nativeElement.innerHTML = Ce.svgData,
                        this._cdRef.detectChanges()))
                    }
                    )
                }
                onDestroy() {}
            }
            return we.\u0275fac = function(Ce) {
                return new (Ce || we)(e.Y36(T),e.Y36(e.sBO))
            }
            ,
            we.\u0275cmp = e.Xpm({
                type: we,
                selectors: [["app-icon"]],
                viewQuery: function(Ce, De) {
                    if (1 & Ce && e.Gf(ie, 7),
                    2 & Ce) {
                        let ot;
                        e.iGM(ot = e.CRH()) && (De.svgIcon = ot.first)
                    }
                },
                inputs: {
                    name: "name",
                    width: "width",
                    transform: "transform"
                },
                standalone: !0,
                features: [e.qOj, e.jDz],
                decls: 2,
                vars: 3,
                consts: [["fill", "currentColor", "xmlns", "http://www.w3.org/2000/svg", "focusable", "false", "aria-hidden", "true"], ["svgIcon", ""]],
                template: function(Ce, De) {
                    1 & Ce && (e.O4$(),
                    e._UZ(0, "svg", 0, 1)),
                    2 & Ce && e.uIk("viewBox", De.viewBox)("width", De.width)("transform", De.transform)
                },
                changeDetection: 0
            }),
            we
        }
        )();
        const Q = {
            viewBox: "0 0 20 15",
            name: "arrowDown",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M16.0312 12.5H13.75C13.109 12.5 12.5806 12.9826 12.5084 13.6042L12.5 13.75C12.5 14.391 12.9826 14.9194 13.6042 14.9916L13.75 15H18.75L18.793 14.9993C18.8251 14.9982 18.8573 14.9959 18.8894 14.9923L18.75 15C18.8172 15 18.8832 14.9947 18.9475 14.9845C18.9722 14.9806 18.9972 14.9758 19.022 14.9703L19.0366 14.967L19.0962 14.9514C19.1212 14.9442 19.1461 14.9362 19.1708 14.9274C19.3111 14.8773 19.4402 14.8025 19.5525 14.7084C19.5562 14.7053 19.5599 14.7022 19.5635 14.6991L19.5816 14.6832C19.6116 14.6565 19.6402 14.6284 19.6675 14.5989L19.5635 14.6991C19.6084 14.6606 19.65 14.6195 19.688 14.5764C19.7132 14.5477 19.7373 14.5177 19.7601 14.4865C19.7675 14.4766 19.7747 14.4666 19.7816 14.4564C19.8012 14.4276 19.8197 14.3981 19.8369 14.3678C19.8454 14.3531 19.8536 14.338 19.8614 14.3227C19.874 14.2982 19.8859 14.2732 19.8969 14.2478C19.9053 14.2284 19.9131 14.209 19.9204 14.1895C19.9323 14.1582 19.9429 14.1262 19.9522 14.0936C19.9554 14.0816 19.9585 14.0699 19.9615 14.0581C19.9751 14.0054 19.9852 13.9511 19.9916 13.8958L20 13.75V8.75001C20 8.05966 19.4403 7.50002 18.75 7.50002C18.1089 7.50002 17.5806 7.98257 17.5084 8.60424L17.5 8.75001L17.5 10.3725L12.1991 4.18653C11.7591 3.67318 10.9997 3.60856 10.4812 4.01418L10.3661 4.11614L7.58377 6.89752L2.2103 0.4498C1.80235 -0.0397492 1.09936 -0.138462 0.57649 0.196858L0.4498 0.289755C-0.0397492 0.697713 -0.138462 1.4007 0.196857 1.92357L0.289754 2.05026L6.53974 9.55024C6.97669 10.0746 7.74412 10.1454 8.26767 9.73673L8.3839 9.63389L11.1788 6.84002L16.0312 12.5Z" fill="currentColor"/>'
        }
          , ve = {
            viewBox: "0 0 20 15",
            name: "arrowUp",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M16.0312 2.49999H13.75C13.109 2.49999 12.5806 2.01745 12.5084 1.39577L12.5 1.25C12.5 0.608954 12.9826 0.0806158 13.6042 0.0084096L13.75 0H18.75L18.793 0.000692605C18.8251 0.00177866 18.8573 0.00410228 18.8894 0.00766991L18.75 0C18.8172 0 18.8832 0.0053031 18.9475 0.0155139C18.9722 0.0194401 18.9972 0.0241854 19.022 0.0297021L19.0366 0.0330132L19.0962 0.0485783C19.1212 0.0557812 19.1461 0.0637897 19.1708 0.0726061C19.3111 0.122685 19.4402 0.19745 19.5525 0.291591C19.5562 0.294733 19.5599 0.297819 19.5635 0.300929L19.5816 0.316754C19.6116 0.343469 19.6402 0.371604 19.6675 0.401055L19.5635 0.300929C19.6084 0.339449 19.65 0.380466 19.688 0.423601C19.7132 0.452273 19.7373 0.482345 19.7601 0.51351C19.7675 0.523392 19.7747 0.533435 19.7816 0.543562C19.8012 0.57242 19.8197 0.601934 19.8369 0.632241C19.8454 0.646939 19.8536 0.662048 19.8614 0.677292C19.874 0.70181 19.8859 0.726766 19.8969 0.75216C19.9053 0.77163 19.9131 0.791011 19.9204 0.810547C19.9323 0.841821 19.9429 0.873831 19.9522 0.906383C19.9554 0.918355 19.9585 0.930116 19.9615 0.941916C19.9751 0.994628 19.9852 1.04887 19.9916 1.10422L20 1.25V6.24999C20 6.94034 19.4403 7.49998 18.75 7.49998C18.1089 7.49998 17.5806 7.01743 17.5084 6.39576L17.5 6.24999L17.5 4.62749L12.1991 10.8135C11.7591 11.3268 10.9997 11.3914 10.4812 10.9858L10.3661 10.8839L7.58377 8.10248L2.2103 14.5502C1.80235 15.0397 1.09936 15.1385 0.57649 14.8031L0.4498 14.7102C-0.0397492 14.3023 -0.138462 13.5993 0.196857 13.0764L0.289754 12.9497L6.53974 5.44976C6.97669 4.92542 7.74412 4.85457 8.26767 5.26327L8.3839 5.36611L11.1788 8.15998L16.0312 2.49999Z" fill="currentColor"/>'
        }
          , Y = {
            viewBox: "0 0 25 27",
            name: "bigSwap",
            svgData: '<path d="M23.5025 14.1527C23.229 14.1527 23.0052 14.3765 23.0052 14.65C23.0052 20.4186 18.3058 25.143 12.5123 25.143C6.71874 25.143 2.01928 20.4435 2.01928 14.6749C2.01928 9.13 6.32086 4.60459 11.7663 4.23161L9.5 6.58386C9.27626 6.758 9.22648 7.08112 9.40062 7.30485C9.5 7.42921 9.64934 7.5038 9.79849 7.5038C9.89788 7.5038 10.0222 7.47899 10.0968 7.40441L13.6064 4.10725C13.7307 4.00786 13.8053 3.85853 13.8053 3.68457C13.8053 3.51043 13.7059 3.36127 13.5816 3.28669C13.5816 3.28669 9.44319 1.23302 9.21945 1.08386C8.9957 0.9347 8.67242 0.984478 8.52323 1.23302C8.37407 1.45677 8.42385 1.78005 8.67239 1.92924L11.6919 3.23694C5.72433 3.63481 1 8.60775 1 14.6748C1 21.0153 6.14703 26.1623 12.4876 26.1623C18.8281 26.1625 24 21.0153 24 14.6748C24 14.4013 23.776 14.1527 23.5025 14.1527Z" fill="currentColor" stroke="currentColor" stroke-width="0.8"/><path d="M23.7263 12.0144C23.7263 12.3576 23.4481 12.636 23.1047 12.636C22.7614 12.636 22.483 12.3576 22.483 12.0144C22.483 11.671 22.7614 11.3928 23.1047 11.3928C23.4481 11.3928 23.7263 11.671 23.7263 12.0144Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M22.9306 9.70194C22.9306 10.0454 22.6522 10.3236 22.309 10.3236C21.9658 10.3236 21.6874 10.0454 21.6874 9.70194C21.6874 9.3587 21.9658 9.08032 22.309 9.08032C22.6522 9.08032 22.9306 9.3587 22.9306 9.70194Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M21.4388 7.53867C21.4388 7.88192 21.1606 8.1603 20.8172 8.1603C20.4739 8.1603 20.1956 7.88192 20.1956 7.53867C20.1956 7.19526 20.4739 6.91705 20.8172 6.91705C21.1606 6.91705 21.4388 7.19526 21.4388 7.53867Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M19.375 5.67375C19.375 6.01699 19.0968 6.29537 18.7533 6.29537C18.4101 6.29537 18.1317 6.01699 18.1317 5.67375C18.1317 5.33033 18.4101 5.05212 18.7533 5.05212C19.0968 5.05212 19.375 5.33033 19.375 5.67375Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M16.9134 4.38078C16.9134 4.7242 16.635 5.0024 16.2918 5.0024C15.9484 5.0024 15.6702 4.7242 15.6702 4.38078C15.6702 4.03753 15.9484 3.75916 16.2918 3.75916C16.635 3.75916 16.9134 4.03753 16.9134 4.38078" fill="currentColor"/><path d="M16.9134 4.38078C16.9134 4.7242 16.635 5.0024 16.2918 5.0024C15.9484 5.0024 15.6702 4.7242 15.6702 4.38078C15.6702 4.03753 15.9484 3.75916 16.2918 3.75916C16.635 3.75916 16.9134 4.03753 16.9134 4.38078" stroke="currentColor" stroke-width="0.6"/><path d="M12.8872 14.5174V11.284C13.5029 11.3845 14.0807 11.6482 14.5598 12.0477C14.749 12.2235 15.0449 12.2127 15.2207 12.0235C15.3964 11.8344 15.3855 11.5386 15.1964 11.3628C14.549 10.7904 13.7427 10.4288 12.8845 10.3265V9.47099C12.8845 9.21098 12.6736 9 12.4135 9C12.1533 9 11.9425 9.21099 11.9425 9.47099V10.3189C10.3384 10.4844 9.20787 11.5461 9.20787 12.9362C9.20787 14.4919 10.9901 14.9885 11.9425 15.2277V18.8076C11.2118 18.6421 10.1984 18.2169 9.79612 17.8401V17.8402C9.6139 17.658 9.31872 17.658 9.13667 17.8402C8.95444 18.0223 8.95444 18.3176 9.13667 18.4997C9.702 19.065 11.0234 19.6072 11.9375 19.7498V20.529H11.9373C11.9373 20.789 12.1483 21 12.4083 21C12.6685 21 12.8795 20.789 12.8795 20.529V19.7651C14.0814 19.6225 15.6141 18.9172 15.6141 17.3131C15.6548 16.0732 14.6566 15.0598 12.8872 14.5174L12.8872 14.5174ZM11.9451 14.2627C11.1812 14.0514 10.1629 13.6974 10.1629 12.9414C10.1629 11.9509 11.0361 11.4136 11.9451 11.2685L11.9449 14.2578L11.9451 14.2627ZM12.8872 18.8458V15.5079C13.735 15.8134 14.6694 16.3812 14.6694 17.3463C14.7024 18.3851 13.5491 18.7135 12.8872 18.8307V18.8458Z" fill="currentColor" stroke="currentColor" stroke-width="0.5"/>'
        }
          , H = {
            viewBox: "0 0 24 24",
            name: "externalLinkIcon",
            svgData: '<path d="M18 20.75H6C5.27065 20.75 4.57118 20.4603 4.05546 19.9445C3.53973 19.4288 3.25 18.7293 3.25 18V6C3.25 5.27065 3.53973 4.57118 4.05546 4.05546C4.57118 3.53973 5.27065 3.25 6 3.25H12C12.1989 3.25 12.3897 3.32902 12.5303 3.46967C12.671 3.61032 12.75 3.80109 12.75 4C12.75 4.19891 12.671 4.38968 12.5303 4.53033C12.3897 4.67098 12.1989 4.75 12 4.75H6C5.66848 4.75 5.35054 4.8817 5.11612 5.11612C4.8817 5.35054 4.75 5.66848 4.75 6V18C4.75 18.3315 4.8817 18.6495 5.11612 18.8839C5.35054 19.1183 5.66848 19.25 6 19.25H18C18.3315 19.25 18.6495 19.1183 18.8839 18.8839C19.1183 18.6495 19.25 18.3315 19.25 18V12C19.25 11.8011 19.329 11.6103 19.4697 11.4697C19.6103 11.329 19.8011 11.25 20 11.25C20.1989 11.25 20.3897 11.329 20.5303 11.4697C20.671 11.6103 20.75 11.8011 20.75 12V18C20.75 18.7293 20.4603 19.4288 19.9445 19.9445C19.4288 20.4603 18.7293 20.75 18 20.75Z" fill="currentColor"/><path d="M20 8.75C19.8019 8.74741 19.6126 8.66756 19.4725 8.52747C19.3324 8.38737 19.2526 8.19811 19.25 8V4.75H16C15.8011 4.75 15.6103 4.67098 15.4697 4.53033C15.329 4.38968 15.25 4.19891 15.25 4C15.25 3.80109 15.329 3.61032 15.4697 3.46967C15.6103 3.32902 15.8011 3.25 16 3.25H20C20.1981 3.25259 20.3874 3.33244 20.5275 3.47253C20.6676 3.61263 20.7474 3.80189 20.75 4V8C20.7474 8.19811 20.6676 8.38737 20.5275 8.52747C20.3874 8.66756 20.1981 8.74741 20 8.75Z" fill="currentColor"/><path d="M13.5 11.25C13.3071 11.2352 13.1276 11.1455 13 11C12.877 10.8625 12.809 10.6845 12.809 10.5C12.809 10.3155 12.877 10.1375 13 10L19.5 3.5C19.5687 3.42631 19.6515 3.36721 19.7435 3.32622C19.8355 3.28523 19.9348 3.26319 20.0355 3.26141C20.1362 3.25963 20.2362 3.27816 20.3296 3.31588C20.423 3.3536 20.5078 3.40974 20.579 3.48096C20.6503 3.55218 20.7064 3.63701 20.7441 3.7304C20.7818 3.82379 20.8004 3.92382 20.7986 4.02452C20.7968 4.12523 20.7748 4.22454 20.7338 4.31654C20.6928 4.40854 20.6337 4.49134 20.56 4.56L14 11C13.8724 11.1455 13.6929 11.2352 13.5 11.25Z" fill="currentColor"/>'
        }
          , xe = {
            viewBox: "0 0 16 14",
            name: "gemIcon",
            svgData: '<path d="M11.8125 0H4.15625L8 4.71875L11.8125 0ZM16 5L12.625 0.59375L9.03125 5H16ZM3.34375 0.59375L0 5H6.9375L3.34375 0.59375ZM7.625 13.8438C7.71875 13.9688 7.84375 14 8 14C8.125 14 8.25 13.9688 8.34375 13.8438L15.9375 6H0.03125L7.625 13.8438Z" fill="#00B8D8"/>'
        }
          , ne = {
            name: "home",
            viewBox: "0 0 20 16",
            svgData: '<path d="M9.73484 4.03478L3.3336 9.30697V14.9972C3.3336 15.1445 3.39212 15.2858 3.4963 15.39C3.60048 15.4942 3.74178 15.5527 3.88911 15.5527L7.77978 15.5426C7.92663 15.5419 8.06722 15.4831 8.17079 15.379C8.27437 15.2749 8.33252 15.134 8.33252 14.9871V11.6641C8.33252 11.5168 8.39104 11.3755 8.49522 11.2713C8.5994 11.1671 8.7407 11.1086 8.88803 11.1086H11.1101C11.2574 11.1086 11.3987 11.1671 11.5029 11.2713C11.6071 11.3755 11.6656 11.5168 11.6656 11.6641V14.9847C11.6654 15.0578 11.6796 15.1302 11.7074 15.1978C11.7352 15.2654 11.7761 15.3269 11.8277 15.3786C11.8793 15.4304 11.9406 15.4715 12.0081 15.4995C12.0756 15.5275 12.148 15.5419 12.2211 15.5419L16.1104 15.5527C16.2577 15.5527 16.399 15.4942 16.5032 15.39C16.6074 15.2858 16.6659 15.1445 16.6659 14.9972V9.30315L10.266 4.03478C10.1908 3.97413 10.0971 3.94106 10.0004 3.94106C9.90381 3.94106 9.81008 3.97413 9.73484 4.03478ZM19.8462 7.61821L16.9437 5.22567V0.416637C16.9437 0.306138 16.8998 0.200165 16.8216 0.12203C16.7435 0.0438956 16.6375 0 16.527 0H14.5827C14.4722 0 14.3663 0.0438956 14.2881 0.12203C14.21 0.200165 14.1661 0.306138 14.1661 0.416637V2.93764L11.0577 0.380181C10.7593 0.134705 10.385 0.00049071 9.99871 0.00049071C9.61239 0.00049071 9.23807 0.134705 8.93976 0.380181L0.151203 7.61821C0.109015 7.65308 0.0741102 7.69592 0.0484844 7.74428C0.0228586 7.79265 0.00701361 7.84559 0.00185477 7.90008C-0.00330407 7.95457 0.00232436 8.00954 0.0184184 8.06186C0.0345125 8.11417 0.0607569 8.1628 0.0956519 8.20497L0.981 9.28128C1.0158 9.3236 1.0586 9.35863 1.10696 9.38438C1.15532 9.41014 1.20828 9.4261 1.26282 9.43135C1.31735 9.43661 1.37239 9.43106 1.42477 9.41502C1.47716 9.39898 1.52587 9.37276 1.56811 9.33787L9.73484 2.61127C9.81008 2.55063 9.90381 2.51755 10.0004 2.51755C10.0971 2.51755 10.1908 2.55063 10.266 2.61127L18.4331 9.33787C18.4753 9.37277 18.5239 9.39901 18.5762 9.41511C18.6286 9.4312 18.6835 9.43683 18.738 9.43167C18.7925 9.42651 18.8455 9.41067 18.8938 9.38504C18.9422 9.35942 18.985 9.32451 19.0199 9.28232L19.9052 8.20601C19.9401 8.1636 19.9662 8.11472 19.9821 8.06217C19.998 8.00963 20.0034 7.95446 19.9979 7.89984C19.9924 7.84521 19.9762 7.79221 19.9502 7.74388C19.9241 7.69555 19.8888 7.65284 19.8462 7.61821Z" fill="currentColor"/>'
        }
          , re = {
            viewBox: "0 0 21 21",
            name: "liveNewPairs",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M17.4786 0.0213583C19.0387 -0.182682 20.325 1.10364 20.1209 2.66374C19.8271 4.91086 19.0195 8.73685 16.7303 11.2051C16.0074 11.9845 15.1356 12.7047 14.2386 13.3452L14.4989 15.1675C14.5747 15.6979 14.3963 16.2331 14.0175 16.6119L10.9875 19.6418C9.99569 20.6337 8.29717 20.0675 8.0988 18.6789L7.69737 15.8689C7.44283 15.7432 7.20675 15.5751 7.0005 15.3689L4.77342 13.1418C4.56718 12.9356 4.39907 12.6995 4.27338 12.445L1.46337 12.0435C0.0747726 11.8452 -0.491402 10.1466 0.500456 9.15478L3.53037 6.12486C3.90923 5.746 4.44435 5.56763 4.97475 5.6434L6.79709 5.90374C7.43756 5.00673 8.15782 4.13489 8.9372 3.41205C11.4055 1.12283 15.2314 0.315253 17.4786 0.0213583ZM2.90777 13.1946C3.20066 13.4875 3.20066 13.9624 2.90777 14.2553L1.56114 15.6019C1.26824 15.8948 0.793371 15.8948 0.500477 15.6019C0.207584 15.309 0.207583 14.8342 0.500477 14.5413L1.84711 13.1946C2.14 12.9018 2.61487 12.9018 2.90777 13.1946ZM4.92771 15.2146C5.2206 15.5075 5.2206 15.9824 4.92771 16.2752L2.23445 18.9685C1.94156 19.2614 1.46668 19.2614 1.17379 18.9685C0.880898 18.6756 0.880899 18.2007 1.17379 17.9078L3.86705 15.2146C4.15994 14.9217 4.63482 14.9217 4.92771 15.2146ZM6.94765 17.2345C7.24055 17.5274 7.24055 18.0023 6.94765 18.2952L5.60103 19.6418C5.30813 19.9347 4.83326 19.9347 4.54037 19.6418C4.24747 19.3489 4.24747 18.8741 4.54037 18.5812L5.88699 17.2345C6.17989 16.9416 6.65476 16.9416 6.94765 17.2345ZM11.8035 8.33841C11.0598 7.59468 11.0598 6.38887 11.8035 5.64515C12.5472 4.90143 13.753 4.90143 14.4968 5.64515C15.2405 6.38887 15.2405 7.59468 14.4968 8.33841C13.753 9.08213 12.5472 9.08213 11.8035 8.33841Z" fill="currentColor"/>'
        }
          , Oe = {
            viewBox: "0 0 20 20",
            name: "mintIcon",
            svgData: '<path d="M11.5 6.5H13.5V8.5C13.5 8.78125 13.7188 9 14 9H15C15.25 9 15.5 8.78125 15.5 8.5V6.5H17.5C17.75 6.5 18 6.28125 18 6V5C18 4.75 17.75 4.5 17.5 4.5H15.5V2.5C15.5 2.25 15.25 2 15 2H14C13.7188 2 13.5 2.25 13.5 2.5V4.5H11.5C11.2188 4.5 11 4.75 11 5V6C11 6.28125 11.2188 6.5 11.5 6.5ZM17.5938 13.4062L15.7812 12.5625L10.7188 14.8438C10.5 14.9688 10.25 15 10 15C9.71875 15 9.46875 14.9688 9.25 14.8438L4.1875 12.5625L2.375 13.4062C1.84375 13.625 1.84375 14.4062 2.375 14.6562L9.65625 17.9375C9.875 18.0312 10.0938 18.0312 10.3125 17.9375L17.5938 14.6562C18.125 14.4062 18.125 13.625 17.5938 13.4062ZM2.375 10.625L9.65625 13.9375C9.875 14.0312 10.0938 14.0312 10.3125 13.9375L16 11.375V10.7812C15.5 10.9375 15 11 14.5 11C11.7188 11 9.46875 9 9.0625 6.34375L2.375 9.375C1.84375 9.625 1.84375 10.4062 2.375 10.625Z" fill="currentColor"/>'
        }
          , p = {
            name: "more",
            svgData: '<line stroke="currentColor" x1="5" y1="10" x2="15" y2="10" stroke-width="2"></line><line stroke="currentColor" x1="10" y1="5" x2="10" y2="15" stroke-width="2"></line>'
        }
          , me = {
            viewBox: "0 0 20 20",
            name: "multichart",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M2.5 0C1.11929 0 0 1.11929 0 2.5V6.38889C0 7.7696 1.11929 8.88889 2.5 8.88889H6.38889C7.7696 8.88889 8.88889 7.7696 8.88889 6.38889V2.5C8.88889 1.11929 7.7696 0 6.38889 0H2.5ZM2.5 11.1111C1.11929 11.1111 0 12.2304 0 13.6111V17.5C0 18.8807 1.11929 20 2.5 20H6.38889C7.7696 20 8.88889 18.8807 8.88889 17.5V13.6111C8.88889 12.2304 7.7696 11.1111 6.38889 11.1111H2.5ZM11.1111 2.5C11.1111 1.11929 12.2304 0 13.6111 0H17.5C18.8807 0 20 1.11929 20 2.5V6.38889C20 7.7696 18.8807 8.88889 17.5 8.88889H13.6111C12.2304 8.88889 11.1111 7.7696 11.1111 6.38889V2.5ZM14.8611 11.4722C15.2753 11.4722 15.6111 11.808 15.6111 12.2222V14.1111H17.5C17.9142 14.1111 18.25 14.4469 18.25 14.8611C18.25 15.2753 17.9142 15.6111 17.5 15.6111H15.6111V17.5C15.6111 17.9142 15.2753 18.25 14.8611 18.25C14.4469 18.25 14.1111 17.9142 14.1111 17.5V15.6111H12.2222C11.808 15.6111 11.4722 15.2753 11.4722 14.8611C11.4722 14.4469 11.808 14.1111 12.2222 14.1111H14.1111V12.2222C14.1111 11.808 14.4469 11.4722 14.8611 11.4722Z" fill="currentColor"/>'
        }
          , Le = {
            viewBox: "0 0 20 25",
            name: "multiswap",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M2.22263 13.3335C2.22263 12.7199 1.72518 12.2224 1.11154 12.2224C0.497907 12.2224 0.000457764 12.7199 0.000457764 13.3335C0.000457764 17.6289 3.4826 21.1111 7.77805 21.1111H16.2058L14.7696 22.5475L14.6772 22.6522C14.3383 23.0881 14.369 23.7183 14.7695 24.1189C15.2034 24.5528 15.9069 24.5528 16.3408 24.119L19.6745 20.7857L19.6747 20.7855C19.7072 20.753 19.7378 20.7184 19.7661 20.682L19.767 20.681C19.8341 20.5946 19.8868 20.5006 19.9249 20.4023C19.9659 20.2967 19.9913 20.1833 19.9981 20.0649C20.0006 20.0221 20.0006 19.9792 19.9982 19.9364C19.9915 19.8177 19.9662 19.704 19.9251 19.5981C19.8709 19.4583 19.7874 19.3272 19.6745 19.2143L16.3408 15.881L16.2362 15.7886C15.8003 15.4497 15.17 15.4806 14.7695 15.8811L14.6771 15.9858C14.3382 16.4217 14.3691 17.0519 14.7696 17.4525L16.2058 18.8889H7.77805L7.53706 18.8838C4.58069 18.7576 2.22263 16.3209 2.22263 13.3335Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M5.22999 0.325429C4.79609 -0.108476 4.09259 -0.108476 3.65868 0.325429L0.325429 3.65868L0.321582 3.66304C0.291874 3.69306 0.263866 3.72477 0.237714 3.75801L0.232999 3.76335C-0.105909 4.19922 -0.075099 4.82946 0.325429 5.22999L3.65868 8.56324L3.76335 8.65567C4.19922 8.99458 4.82946 8.96377 5.22999 8.56324L5.32242 8.45857C5.66133 8.0227 5.63052 7.39246 5.22999 6.99193L3.79372 5.55556H12.2223L12.4633 5.56069C15.4196 5.68687 17.7777 8.12354 17.7777 11.111C17.7777 11.7246 18.2751 12.2221 18.8888 12.2221C19.5024 12.2221 19.9999 11.7246 19.9999 11.111C19.9999 6.81553 16.5177 3.33339 12.2223 3.33339H3.79344L5.22999 1.89674L5.32242 1.79207C5.66133 1.3562 5.63052 0.725957 5.22999 0.325429Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M11.1206 9.60339C11.1206 9.18918 10.7848 8.85339 10.3706 8.85339C9.95637 8.85339 9.62059 9.18918 9.62059 9.60339V11.3666H7.85742C7.44321 11.3666 7.10742 11.7023 7.10742 12.1166C7.10742 12.5308 7.44321 12.8666 7.85742 12.8666H9.62059V14.6297C9.62059 15.0439 9.95637 15.3797 10.3706 15.3797C10.7848 15.3797 11.1206 15.0439 11.1206 14.6297V12.8666H12.8838C13.298 12.8666 13.6338 12.5308 13.6338 12.1166C13.6338 11.7023 13.298 11.3666 12.8838 11.3666H11.1206V9.60339Z" fill="currentColor"/>'
        }
          , ze = {
            viewBox: "0 0 21 21",
            name: "newPairsBot",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M14.8906 15.6425C14.4486 15.7462 14.0019 15.8232 13.553 15.8735C12.9571 17.9191 11.3037 19.4975 9.21356 19.9878C7.72322 20.3374 6.1722 20.3374 4.68187 19.9878C2.48889 19.4734 0.776594 17.7611 0.26219 15.5681C-0.0873969 14.0778 -0.0873967 12.5268 0.26219 11.0364C0.752461 8.94634 2.33086 7.29289 4.37646 6.697C4.42682 6.24808 4.50384 5.8014 4.60753 5.35935C5.19611 2.85015 7.15532 0.890946 9.66452 0.302367C11.3832 -0.100789 13.1719 -0.100789 14.8906 0.302367C17.3998 0.890947 19.3591 2.85016 19.9476 5.35936C20.3508 7.07807 20.3508 8.86677 19.9476 10.5855C19.3591 13.0947 17.3998 15.0539 14.8906 15.6425ZM9.66452 15.6425C10.3789 15.81 11.1054 15.908 11.8339 15.9362C11.2954 17.1793 10.1962 18.115 8.84841 18.4311C7.59824 18.7244 6.29718 18.7244 5.04702 18.4311C3.44527 18.0554 2.19462 16.8047 1.8189 15.203C1.52565 13.9528 1.52565 12.6518 1.8189 11.4016C2.13505 10.0538 3.07071 8.95457 4.31376 8.41605C4.33778 9.03504 4.41208 9.65256 4.53666 10.2624C4.55871 10.3704 4.58233 10.4781 4.60753 10.5855C5.19611 13.0947 7.15532 15.0539 9.66452 15.6425Z" fill="currentColor"/>'
        }
          , nt = {
            viewBox: "0 0 17 18",
            name: "nft",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M15.1241 3.80415L9.00022 0.278368C8.44362 -0.0927893 7.70131 -0.0927893 7.05179 0.278368L0.927877 3.80415C0.371157 4.17518 0 4.7319 0 5.47422V12.5258C0 13.268 0.371157 13.8247 0.927877 14.1958L7.05179 17.7216C7.70118 18.0928 8.4435 18.0928 9.00022 17.7216L15.1241 14.1958C15.7736 13.8248 16.052 13.2681 16.052 12.5258V5.47422C16.052 4.73203 15.7736 4.17531 15.1241 3.80415ZM3.06774 6.49732L4.24876 8.86541V6.18625H5.37355V11.2478C5.3738 11.5089 5.19429 11.7359 4.94021 11.7956C4.68613 11.8556 4.42426 11.7329 4.30777 11.4991V11.4994L3.12397 9.13101V11.8102H1.99919V6.74864C1.99617 6.48527 2.17644 6.25529 2.43278 6.19478C2.68912 6.13452 2.95299 6.26031 3.06774 6.49732ZM6.49834 6.74889V11.8104H7.62313V9.56086H9.31031V8.43607H7.62313V7.31128H9.8727V6.18649H7.06073C6.75016 6.18649 6.49834 6.43832 6.49834 6.74889ZM13.2471 11.8104H12.1223V7.31128H10.9975V6.18649H14.3719V7.31128H13.2471V11.8104Z" fill="#818EA3" />'
        }
          , N = {
            viewBox: "0 0 21 21",
            name: "pairExplorer",
            svgData: '<circle r="2.8875" transform="matrix(-1 0 0 1 18.1125 2.8875)" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M17.85 7.35003C15.5304 7.35003 13.65 5.46963 13.65 3.15003C13.65 2.51952 13.7889 1.92146 14.0379 1.3848H13.3483H4.76724C2.13437 1.3848 0 3.51916 0 6.15204V15.6865C0 18.3194 2.13437 20.4538 4.76724 20.4538H14.3017C16.9346 20.4538 19.069 18.3194 19.069 15.6865V8.05893V7.17041C18.6832 7.28722 18.2739 7.35003 17.85 7.35003ZM5.25 16.5598C4.69772 16.5598 4.25 16.1121 4.25 15.5598V12.4098C4.25 11.8575 4.69771 11.4098 5.25 11.4098C5.80228 11.4098 6.25 11.8575 6.25 12.4098V15.5598C6.25 16.1121 5.80228 16.5598 5.25 16.5598ZM8.45 15.5598C8.45 16.1121 8.89771 16.5598 9.45 16.5598C10.0023 16.5598 10.45 16.1121 10.45 15.5598V5.0598C10.45 4.50751 10.0023 4.0598 9.45 4.0598C8.89771 4.0598 8.45 4.50751 8.45 5.0598V15.5598ZM13.65 16.5598C13.0977 16.5598 12.65 16.1121 12.65 15.5598V8.2098C12.65 7.65751 13.0977 7.2098 13.65 7.2098C14.2023 7.2098 14.65 7.65751 14.65 8.2098V15.5598C14.65 16.1121 14.2023 16.5598 13.65 16.5598Z" fill="currentColor"/>'
        }
          , F = {
            viewBox: "0 0 24 22",
            name: "priceBot",
            svgData: '<path d="M9.24997 18.1875C9.24997 18.0052 9.32241 17.8303 9.45134 17.7014C9.58027 17.5725 9.75514 17.5 9.93747 17.5H14.0625C14.2448 17.5 14.4197 17.5725 14.5486 17.7014C14.6775 17.8303 14.75 18.0052 14.75 18.1875C14.75 18.3699 14.6775 18.5447 14.5486 18.6737C14.4197 18.8026 14.2448 18.875 14.0625 18.875H9.93747C9.75514 18.875 9.58027 18.8026 9.45134 18.6737C9.32241 18.5447 9.24997 18.3699 9.24997 18.1875ZM5.12497 12.0853C5.12497 10.295 6.8231 8.9269 8.60372 9.09327C10.863 9.30413 13.137 9.30413 15.3962 9.09327C17.1768 8.9269 18.875 10.295 18.875 12.0853V13.6761C18.8806 13.9804 18.7779 14.2767 18.5852 14.5122C18.3925 14.7477 18.1224 14.907 17.8231 14.9618C16.6612 15.1639 14.6056 15.4375 12 15.4375C9.39435 15.4375 7.33872 15.1625 6.17685 14.9618C5.87754 14.907 5.60742 14.7477 5.41474 14.5122C5.22206 14.2767 5.11936 13.9804 5.12497 13.6761V12.0853ZM11.3702 10.9481C11.3166 10.939 11.2617 10.9428 11.2098 10.959C11.1579 10.9753 11.1106 11.0036 11.0718 11.0416L9.80685 12.2791C8.94643 12.2279 8.08827 12.1439 7.23422 12.0275C7.14572 12.0187 7.05726 12.0446 6.98741 12.0996C6.91757 12.1547 6.87179 12.2347 6.85968 12.3228C6.84758 12.4109 6.8701 12.5003 6.9225 12.5721C6.97491 12.644 7.05313 12.6927 7.14072 12.7081C7.89697 12.8126 8.83472 12.913 9.91822 12.9735C9.96595 12.9762 10.0137 12.9689 10.0585 12.9521C10.1032 12.9353 10.144 12.9093 10.1781 12.8759L11.2148 11.8639L12.3795 14.2151C12.404 14.2645 12.44 14.3072 12.4845 14.3397C12.529 14.3722 12.5807 14.3935 12.6351 14.4018C12.6896 14.4102 12.7452 14.4053 12.7974 14.3877C12.8496 14.37 12.8968 14.3401 12.935 14.3004L14.2165 12.9666C15.1004 12.9142 15.9819 12.8279 16.8592 12.7081C16.9468 12.6927 17.025 12.644 17.0774 12.5721C17.1299 12.5003 17.1524 12.4109 17.1403 12.3228C17.1282 12.2347 17.0824 12.1547 17.0125 12.0996C16.9427 12.0446 16.8542 12.0187 16.7657 12.0275C16.026 12.1293 15.1061 12.2269 14.0432 12.2874C13.9567 12.2922 13.8752 12.3295 13.815 12.3919L12.7782 13.4713L11.6205 11.1338C11.5963 11.0853 11.5611 11.0432 11.5176 11.011C11.4741 10.9787 11.4236 10.9572 11.3702 10.9481Z" fill="currentColor"/>\n<path d="M12.6875 3.56575C12.9496 3.41441 13.1545 3.1808 13.2703 2.90116C13.3862 2.62151 13.4065 2.31146 13.3281 2.01909C13.2498 1.72672 13.0772 1.46837 12.837 1.28411C12.5969 1.09985 12.3027 0.999969 12 0.999969C11.6973 0.999969 11.4031 1.09985 11.163 1.28411C10.9228 1.46837 10.7502 1.72672 10.6719 2.01909C10.5935 2.31146 10.6138 2.62151 10.7297 2.90116C10.8455 3.1808 11.0504 3.41441 11.3125 3.56575V5.125H8.5625C6.92147 5.125 5.34766 5.7769 4.18728 6.93728C3.0269 8.09766 2.375 9.67148 2.375 11.3125V12C2.01033 12 1.66059 12.1449 1.40273 12.4027C1.14487 12.6606 1 13.0103 1 13.375L1 16.125C1 16.4897 1.14487 16.8394 1.40273 17.0973C1.66059 17.3551 2.01033 17.5 2.375 17.5V18.875C2.375 19.6043 2.66473 20.3038 3.18046 20.8195C3.69618 21.3353 4.39565 21.625 5.125 21.625H18.875C19.6043 21.625 20.3038 21.3353 20.8195 20.8195C21.3353 20.3038 21.625 19.6043 21.625 18.875V17.5C21.9897 17.5 22.3394 17.3551 22.5973 17.0973C22.8551 16.8394 23 16.4897 23 16.125V13.375C23 13.0103 22.8551 12.6606 22.5973 12.4027C22.3394 12.1449 21.9897 12 21.625 12V11.3125C21.625 9.67148 20.9731 8.09766 19.8127 6.93728C18.6523 5.7769 17.0785 5.125 15.4375 5.125H12.6875V3.56575ZM20.25 11.3125V18.875C20.25 19.2397 20.1051 19.5894 19.8473 19.8473C19.5894 20.1051 19.2397 20.25 18.875 20.25H5.125C4.76033 20.25 4.41059 20.1051 4.15273 19.8473C3.89487 19.5894 3.75 19.2397 3.75 18.875V11.3125C3.75 10.0361 4.25703 8.81207 5.15955 7.90955C6.06207 7.00703 7.28615 6.5 8.5625 6.5H15.4375C16.7139 6.5 17.9379 7.00703 18.8405 7.90955C19.743 8.81207 20.25 10.0361 20.25 11.3125Z" fill="currentColor" stroke="currentColor" stroke-width="0.5"/>'
        }
          , L = {
            viewBox: "0 0 16 16",
            name: "repeatIcon",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M3.33333 8.66667C3.33333 8.29848 3.03486 8 2.66667 8C2.29848 8 2 8.29848 2 8.66667C2 11.244 4.08934 13.3333 6.66667 13.3333H11.7234L10.8617 14.1952L10.8062 14.258C10.6029 14.5195 10.6213 14.8977 10.8616 15.138C11.122 15.3984 11.5441 15.3984 11.8044 15.1381L13.8022 13.1406C13.8228 13.1202 13.8421 13.0985 13.8598 13.0757L13.8602 13.0753C13.8945 13.0311 13.9225 12.9837 13.9442 12.9341C13.9801 12.8522 14 12.7618 14 12.6667C14 12.5711 13.9799 12.4803 13.9437 12.3982C13.9155 12.3339 13.8766 12.2731 13.827 12.2186C13.819 12.2098 13.8107 12.2012 13.8023 12.1928L11.8044 10.1952L11.7416 10.1398C11.4801 9.93644 11.1019 9.95495 10.8616 10.1953L10.8062 10.2581C10.6029 10.5196 10.6214 10.8978 10.8617 11.1381L11.7234 12H6.66667L6.52207 11.9969C4.7482 11.9212 3.33333 10.4592 3.33333 8.66667Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M5.13783 0.860789C4.87748 0.60044 4.45537 0.60044 4.19502 0.860789L2.19502 2.86079L2.1933 2.86273C2.175 2.88118 2.15776 2.90069 2.1417 2.92117L2.13956 2.92359C1.93621 3.18512 1.9547 3.56328 2.19502 3.8036L4.19502 5.8036L4.25782 5.85906C4.51935 6.06241 4.8975 6.04392 5.13783 5.8036L5.19329 5.74079C5.39664 5.47927 5.37815 5.10111 5.13783 4.86079L4.27606 3.99896H9.33321L9.4778 4.00204C11.2517 4.07775 12.6665 5.53979 12.6665 7.33229C12.6665 7.70048 12.965 7.99896 13.3332 7.99896C13.7014 7.99896 13.9999 7.70048 13.9999 7.33229C13.9999 4.75496 11.9105 2.66563 9.33321 2.66563H4.27586L5.13783 1.8036L5.19329 1.74079C5.39664 1.47927 5.37815 1.10111 5.13783 0.860789Z" fill="currentColor"/>'
        }
          , ee = {
            viewBox: "0 0 22 22",
            name: "stats",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M14.262 1.00725C13.7143 0.936682 13.2648 1.39099 13.2648 1.94327V8.54813C13.2648 8.65858 13.3543 8.74813 13.4648 8.74813L20.0696 8.74813C20.6219 8.74813 21.0762 8.29861 21.0056 7.75085C20.9178 7.06863 20.7399 6.39954 20.4755 5.76134C20.0833 4.81441 19.5084 3.95401 18.7836 3.22926C18.0589 2.50452 17.1985 1.92961 16.2516 1.53738C15.6134 1.27303 14.9443 1.09514 14.262 1.00725ZM8.92191 3.22922C9.47073 3.16744 9.91983 3.62095 9.91983 4.17323V10.5931C9.91983 11.4215 10.5914 12.0931 11.4198 12.0931H17.8397C18.3919 12.0931 18.8455 12.5422 18.7837 13.091C18.6248 14.5021 18.1307 15.86 17.3364 17.0487C16.3563 18.5155 14.9632 19.6588 13.3333 20.3339C11.7034 21.009 9.90994 21.1857 8.17966 20.8415C6.44938 20.4973 4.86002 19.6478 3.61256 18.4003C2.3651 17.1529 1.51557 15.5635 1.1714 13.8332C0.827222 12.103 1.00386 10.3095 1.67899 8.67959C2.35411 7.04971 3.49738 5.65662 4.96424 4.67649C6.15292 3.88224 7.51083 3.38809 8.92191 3.22922Z" fill="currentColor"/><path d="M14.262 1.00725L14.1662 1.7511V1.7511L14.262 1.00725ZM13.4648 8.74813V7.99813V8.74813ZM20.0696 8.74813V9.49813V8.74813ZM21.0056 7.75085L20.2618 7.84668V7.84669L21.0056 7.75085ZM20.4755 5.76134L21.1684 5.47433V5.47433L20.4755 5.76134ZM18.7836 3.22926L18.2533 3.75959L18.2533 3.75959L18.7836 3.22926ZM16.2516 1.53738L15.9645 2.23029V2.23029L16.2516 1.53738ZM8.92191 3.22922L8.838 2.48393L8.92191 3.22922ZM18.7837 13.091L18.0384 13.0071L18.7837 13.091ZM17.3364 17.0487L17.96 17.4653L17.3364 17.0487ZM13.3333 20.3339L13.6203 21.0268H13.6203L13.3333 20.3339ZM8.17966 20.8415L8.32598 20.1059L8.17966 20.8415ZM3.61256 18.4003L4.14289 17.87H4.14289L3.61256 18.4003ZM1.1714 13.8332L1.90698 13.6869L1.1714 13.8332ZM1.67899 8.67959L0.986076 8.39258H0.986076L1.67899 8.67959ZM4.96424 4.67649L5.38092 5.3001L4.96424 4.67649ZM14.0148 1.94327C14.0148 1.87084 14.0442 1.81459 14.0777 1.78247C14.1068 1.75448 14.1338 1.74693 14.1662 1.7511L14.3579 0.263399C13.2965 0.126664 12.5148 1.00689 12.5148 1.94327H14.0148ZM14.0148 8.54813V1.94327H12.5148V8.54813H14.0148ZM13.4648 7.99813C13.7685 7.99813 14.0148 8.24437 14.0148 8.54813H12.5148C12.5148 9.0728 12.9401 9.49813 13.4648 9.49813V7.99813ZM20.0696 7.99813L13.4648 7.99813V9.49813L20.0696 9.49813V7.99813ZM20.2618 7.84669C20.266 7.8791 20.2584 7.9061 20.2304 7.93523C20.1983 7.96865 20.142 7.99813 20.0696 7.99813V9.49813C21.006 9.49813 21.8862 8.71635 21.7495 7.65502L20.2618 7.84669ZM19.7826 6.04835C20.0216 6.62523 20.1823 7.23002 20.2618 7.84668L21.7495 7.65502C21.6532 6.90724 21.4582 6.17386 21.1684 5.47433L19.7826 6.04835ZM18.2533 3.75959C18.9084 4.4147 19.4281 5.19242 19.7826 6.04835L21.1684 5.47433C20.7385 4.43641 20.1084 3.49333 19.314 2.69893L18.2533 3.75959ZM15.9645 2.23029C16.8205 2.58483 17.5982 3.10449 18.2533 3.75959L19.314 2.69893C18.5196 1.90454 17.5765 1.2744 16.5386 0.844475L15.9645 2.23029ZM14.1662 1.7511C14.7829 1.83055 15.3877 1.99134 15.9645 2.23029L16.5386 0.844475C15.839 0.554719 15.1057 0.359738 14.3579 0.263399L14.1662 1.7511ZM10.6698 4.17323C10.6698 3.23249 9.88808 2.36571 8.838 2.48393L9.00581 3.97452C9.04281 3.97035 9.07434 3.98018 9.10566 4.01043C9.14064 4.04421 9.16983 4.10113 9.16983 4.17323H10.6698ZM10.6698 10.5931V4.17323H9.16983V10.5931H10.6698ZM11.4198 11.3431C11.0056 11.3431 10.6698 11.0073 10.6698 10.5931H9.16983C9.16983 11.8357 10.1772 12.8431 11.4198 12.8431V11.3431ZM17.8397 11.3431H11.4198V12.8431H17.8397V11.3431ZM19.529 13.1749C19.6472 12.1248 18.7804 11.3431 17.8397 11.3431V12.8431C17.9118 12.8431 17.9687 12.8723 18.0025 12.9072C18.0327 12.9386 18.0425 12.9701 18.0384 13.0071L19.529 13.1749ZM17.96 17.4653C18.821 16.1767 19.3567 14.7046 19.529 13.1749L18.0384 13.0071C17.8929 14.2995 17.4403 15.5432 16.7128 16.632L17.96 17.4653ZM13.6203 21.0268C15.3872 20.2949 16.8975 19.0555 17.96 17.4653L16.7128 16.632C15.8151 17.9755 14.5391 19.0226 13.0463 19.641L13.6203 21.0268ZM8.03334 21.5771C9.90911 21.9502 11.8534 21.7587 13.6203 21.0268L13.0463 19.641C11.5534 20.2594 9.91077 20.4211 8.32598 20.1059L8.03334 21.5771ZM3.08223 18.9307C4.43458 20.283 6.15758 21.204 8.03334 21.5771L8.32598 20.1059C6.74119 19.7907 5.28546 19.0126 4.14289 17.87L3.08223 18.9307ZM0.435807 13.9796C0.808919 15.8553 1.72988 17.5783 3.08223 18.9307L4.14289 17.87C3.00032 16.7274 2.22222 15.2717 1.90698 13.6869L0.435807 13.9796ZM0.986076 8.39258C0.25419 10.1595 0.0626945 12.1038 0.435807 13.9796L1.90698 13.6869C1.59175 12.1021 1.75354 10.4594 2.3719 8.9666L0.986076 8.39258ZM4.54756 4.05289C2.95737 5.11543 1.71796 6.62565 0.986076 8.39258L2.3719 8.9666C2.99025 7.47376 4.0374 6.19781 5.38092 5.3001L4.54756 4.05289ZM8.838 2.48393C7.30828 2.65615 5.8362 3.19186 4.54756 4.05289L5.38092 5.3001C6.46965 4.57263 7.71338 4.12002 9.00581 3.97452L8.838 2.48393Z" fill="currentColor"/>'
        }
          , x = {
            viewBox: "0 0 25 27",
            name: "update",
            svgData: '<path d="M23.5025 14.1527C23.229 14.1527 23.0052 14.3765 23.0052 14.65C23.0052 20.4186 18.3058 25.143 12.5123 25.143C6.71874 25.143 2.01928 20.4435 2.01928 14.6749C2.01928 9.13 6.32086 4.60459 11.7663 4.23161L9.5 6.58386C9.27626 6.758 9.22648 7.08112 9.40062 7.30485C9.5 7.42921 9.64934 7.5038 9.79849 7.5038C9.89788 7.5038 10.0222 7.47899 10.0968 7.40441L13.6064 4.10725C13.7307 4.00786 13.8053 3.85853 13.8053 3.68457C13.8053 3.51043 13.7059 3.36127 13.5816 3.28669C13.5816 3.28669 9.44319 1.23302 9.21945 1.08386C8.9957 0.9347 8.67242 0.984478 8.52323 1.23302C8.37407 1.45677 8.42385 1.78005 8.67239 1.92924L11.6919 3.23694C5.72433 3.63481 1 8.60775 1 14.6748C1 21.0153 6.14703 26.1623 12.4876 26.1623C18.8281 26.1625 24 21.0153 24 14.6748C24 14.4013 23.776 14.1527 23.5025 14.1527Z" fill="currentColor" stroke="currentColor" stroke-width="0.8"/><path d="M23.7263 12.0144C23.7263 12.3576 23.4481 12.636 23.1047 12.636C22.7614 12.636 22.483 12.3576 22.483 12.0144C22.483 11.671 22.7614 11.3928 23.1047 11.3928C23.4481 11.3928 23.7263 11.671 23.7263 12.0144Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M22.9306 9.70194C22.9306 10.0454 22.6522 10.3236 22.309 10.3236C21.9658 10.3236 21.6874 10.0454 21.6874 9.70194C21.6874 9.3587 21.9658 9.08032 22.309 9.08032C22.6522 9.08032 22.9306 9.3587 22.9306 9.70194Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M21.4388 7.53867C21.4388 7.88192 21.1606 8.1603 20.8172 8.1603C20.4739 8.1603 20.1956 7.88192 20.1956 7.53867C20.1956 7.19526 20.4739 6.91705 20.8172 6.91705C21.1606 6.91705 21.4388 7.19526 21.4388 7.53867Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M19.375 5.67375C19.375 6.01699 19.0968 6.29537 18.7533 6.29537C18.4101 6.29537 18.1317 6.01699 18.1317 5.67375C18.1317 5.33033 18.4101 5.05212 18.7533 5.05212C19.0968 5.05212 19.375 5.33033 19.375 5.67375Z" fill="currentColor" stroke="currentColor" stroke-width="0.6"/><path d="M16.9134 4.38078C16.9134 4.7242 16.635 5.0024 16.2918 5.0024C15.9484 5.0024 15.6702 4.7242 15.6702 4.38078C15.6702 4.03753 15.9484 3.75916 16.2918 3.75916C16.635 3.75916 16.9134 4.03753 16.9134 4.38078" fill="currentColor"/><path d="M16.9134 4.38078C16.9134 4.7242 16.635 5.0024 16.2918 5.0024C15.9484 5.0024 15.6702 4.7242 15.6702 4.38078C15.6702 4.03753 15.9484 3.75916 16.2918 3.75916C16.635 3.75916 16.9134 4.03753 16.9134 4.38078" stroke="currentColor" stroke-width="0.6"/>'
        }
          , V = {
            viewBox: "0 0 22 22",
            name: "variationDown",
            svgData: '<path d="M13.2223 8.77766L9.88883 5.44416C8.66147 4.2168 6.67152 4.2168 5.44416 5.44416C4.2168 6.67152 4.2168 8.66147 5.44416 9.88883L8.77767 13.2223L0 22L22 22L22 0L13.2223 8.77766Z" fill="currentColor"/>'
        }
          , de = {
            viewBox: "0 0 22 22",
            name: "variationUp",
            svgData: '<path d="M13.2223 13.2223L9.88883 16.5558C8.66147 17.7832 6.67152 17.7832 5.44416 16.5558C4.2168 15.3285 4.2168 13.3385 5.44416 12.1112L8.77767 8.77767L0 0H22V22L13.2223 13.2223Z" fill="currentColor"/>'
        }
          , fe = {
            viewBox: "0 0 18 18",
            name: "walletInfo",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M12.0315 0.0880719C14.1482 -0.347735 16.1572 0.878565 16.8449 2.77802C16.1141 2.475 15.3126 2.30775 14.4721 2.30775H4.93375C2.92122 2.30775 1.13265 3.26665 0 4.75249C0.726098 3.2594 2.1143 2.12984 3.82777 1.77707L12.0315 0.0880719ZM0.164307 8.50778C0.164307 5.87383 2.29955 3.73859 4.93351 3.73859H14.4719C17.0142 3.73859 19.0919 5.72782 19.2334 8.23472H14.9488C13.2176 8.23472 11.8142 9.63813 11.8142 11.3693C11.8142 13.1005 13.2176 14.5039 14.9488 14.5039H19.2334C19.0919 17.0108 17.0142 19 14.4719 19H4.93351C2.29955 19 0.164307 16.8648 0.164307 14.2308V8.50778ZM19.2411 9.73472H14.9488C14.046 9.73472 13.3142 10.4666 13.3142 11.3693C13.3142 12.2721 14.046 13.0039 14.9488 13.0039H19.2411V9.73472ZM4.07968 14.7077C4.07968 14.2106 4.48262 13.8077 4.97968 13.8077H8.97968C9.47673 13.8077 9.87967 14.2106 9.87967 14.7077C9.87967 15.2048 9.47673 15.6077 8.97968 15.6077H4.97968C4.48262 15.6077 4.07968 15.2048 4.07968 14.7077ZM14.1988 11.3693C14.1988 10.9551 14.5346 10.6193 14.9488 10.6193H15.1395C15.5538 10.6193 15.8895 10.9551 15.8895 11.3693C15.8895 11.7835 15.5538 12.1193 15.1395 12.1193H14.9488C14.5346 12.1193 14.1988 11.7835 14.1988 11.3693Z" fill="currentColor"/>'
        }
          , Pe = {
            viewBox: "0 0 24 24",
            name: "dextoolsLogoIcon",
            svgData: '<path fill-rule="evenodd" clip-rule="evenodd" d="M9.53546 1.35709C8.11909 2.10186 6.9603 2.73209 6.96055 2.75773C6.96118 2.82389 10.3599 4.56135 10.4805 4.55712C10.5354 4.55526 10.9335 4.37029 11.3651 4.14613L12.1499 3.73863L13.0071 4.18339L13.8643 4.62823L15.268 3.99153C17.3831 3.03211 17.6028 2.92697 17.5684 2.89165C17.5227 2.84479 16.764 2.43338 14.7057 1.33954C13.711 0.810875 12.7455 0.292535 12.5602 0.18765C12.3748 0.0827638 12.1979 -0.0016099 12.167 2.33167e-05C12.1361 0.00165654 10.9519 0.612342 9.53546 1.35709V1.35709ZM3.32328 4.60432L1.84885 5.37309V8.7471C1.84885 10.6028 1.86821 12.1211 1.89196 12.1211C1.91563 12.1211 2.64105 11.8037 3.50397 11.4157L5.07292 10.7103V7.15388L5.83961 7.57553C6.43041 7.90015 7.02157 8.2241 7.61308 8.5474L8.61983 9.09763L9.06781 8.89315C9.34877 8.7647 9.62916 8.635 9.90899 8.50405C10.1252 8.40241 10.656 8.16108 11.0885 7.96767C11.521 7.77417 11.9213 7.5796 11.9781 7.53525C12.0535 7.47634 11.134 6.9634 8.57697 5.63795C6.64955 4.63883 5.01072 3.82455 4.93514 3.82845C4.85957 3.83236 4.13423 4.18145 3.32328 4.60432V4.60432ZM17.8341 4.8202C16.8299 5.27781 16.0076 5.6705 16.0067 5.6929C16.0058 5.71526 16.5531 6.04376 17.223 6.42278C17.8928 6.80188 18.4409 7.13232 18.4409 7.1572C18.4409 7.18203 17.8482 7.47194 17.1238 7.80158C16.3993 8.13113 14.5681 8.96589 13.0544 9.65663L7.98241 11.9709C6.70656 12.5531 5.55652 13.0778 5.42678 13.1372C2.82078 14.328 2.10449 14.6584 2.00612 14.7152C1.90721 14.7723 1.8848 15.104 1.8672 16.7692L1.84619 18.7552L3.16469 19.4333L4.48316 20.1114L6.31142 19.2785C7.31699 18.8205 8.13968 18.4217 8.13968 18.3923C8.13968 18.363 7.95387 18.2408 7.72686 18.1206C7.49974 18.0004 7.03092 17.7344 6.68492 17.5292C6.33895 17.3241 5.99397 17.1359 5.91823 17.1109C5.84252 17.086 5.78166 17.0425 5.7829 17.0141C5.78416 16.9858 6.58924 16.5997 7.57186 16.1562C9.48042 15.2948 10.941 14.6309 14.0767 13.1996C15.4788 12.5596 16.8811 11.9201 18.2836 11.2809C19.5162 10.7193 20.9494 10.0634 21.4684 9.82336L22.412 9.3869L22.433 7.37829L22.4541 5.36977L21.1168 4.6769C20.3812 4.29586 19.7526 3.98502 19.7196 3.98616C19.6867 3.98721 18.8382 4.36249 17.8341 4.8202V4.8202ZM22.0537 12.0665C21.8567 12.1637 21.4674 12.3456 21.1887 12.4707C20.9101 12.5959 20.3812 12.8367 20.0136 13.0061L19.3452 13.3138L19.33 15.0772C19.3215 16.047 19.2862 16.8362 19.2513 16.8311C19.1722 16.8192 17.9195 16.1707 16.6602 15.4895C15.7513 14.998 15.6942 14.9785 15.4807 15.0852C15.3572 15.147 14.6192 15.4811 13.8408 15.8278C13.0622 16.1744 12.3999 16.4807 12.3688 16.5085C12.3377 16.5361 13.9045 17.3934 15.8507 18.4135L19.389 20.2682L20.9006 19.4789C21.7318 19.0449 22.4387 18.649 22.4712 18.5992C22.5445 18.4872 22.5382 11.8745 22.4648 11.8834C22.4358 11.8869 22.2508 11.9693 22.0537 12.0665V12.0665ZM13.6835 19.8282C13.4213 19.942 13.1592 20.0559 12.8971 20.17C12.1058 20.5156 12.2609 20.5271 11.3195 20.054C10.6924 19.7389 10.4222 19.6417 10.3048 19.6889C10.2168 19.7243 9.4595 20.0682 8.62172 20.4532C7.78401 20.8381 7.06953 21.1531 7.03399 21.1531C6.68251 21.1531 7.26684 21.5055 9.52164 22.6536L12.166 24L13.2786 23.4455C13.8905 23.1406 15.1248 22.5299 16.0215 22.0885C16.9181 21.6469 17.6406 21.2743 17.627 21.2602C17.6134 21.2462 16.8621 20.8568 15.9575 20.3948L14.3126 19.555L13.6835 19.8282Z" fill="currentColor"/>'
        }
          , ge = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28"><g fill="currentColor"><path d="M21 7v4h1V6h-5v1z"></path><path d="M16.854 11.854l5-5-.708-.708-5 5zM7 7v4H6V6h5v1z"></path><path d="M11.146 11.854l-5-5 .708-.708 5 5zM21 21v-4h1v5h-5v-1z"></path><path d="M16.854 16.146l5 5-.708.708-5-5z"></path><g><path d="M7 21v-4H6v5h5v-1z"></path><path d="M11.146 16.146l-5 5 .708.708 5-5z"></path></g></g></svg>'
          , Ie = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28"><g fill="currentColor"><path d="M11 17v4h1V16h-5v1z"></path><path d="M16.854 11.854l5-5-.708-.708-5 5zM17 17v4H16V16h5v1z""></path><path d="M11.146 11.854l-5-5 .708-.708 5 5zM11 11v-4h1v5h-5v-1z"></path><path d="M16.854 16.146l5 5-.708.708-5-5z"></path><g><path d="M17 11v-4H16v5h5v-1z"></path><path d="M11.146 16.146l-5 5 .708.708 5-5z"></path></g></g></svg>';
        var st = m(92216)
          , j = m(82687)
          , pe = m(56913)
          , ue = m(82910)
          , D = m(38712)
          , Z = m(4994);
        let ye = (()=>{
            class we {
                constructor(Ce, De) {
                    Ce.addIcons(j.Sbq, j.Vfw, j.gc2, j.qmU, j.lIc, j.Acd, j.Ma4, j.LEp, j.ptq, j.A35, j._tD, j.mTx, j.diR, j.IJ7, j.SZw, j.dT$, j.b7W, j.owJ, j.rWw, j.lXL, j.udn, j.kZ_, j.NkB, j.tc$, j.Xcf, j.iV1, j.FU$, j.Ssp, j.RLE, j.eHv, j.TL5, j.$Ni, j.Mdf, j.Aq, j.G_j, j.HEw, j.q16, j.g4A, j.g$q, j.YHc, j.sqG, j.nNP, j.byT, j.Kl4, j.uMC, j.bJI, j.aLp, j.UJf, j.zc, j.r8p, j.KtF, j.CPW, j.TmZ, j.Fuz, j.XSV, j.VE0, j.r6l, j.xf3, j.zBy, j.Hw7, j.Tab, j.UO1, j.d8e, j.bam, j.u8Q, j.RP7, j.NBC, j.Vui, j.r$M, j.BC0, j.$aW, j.Rpv, j.CmM, j.u9C, j.foy, j.wp6, j.Ybx, j.uYr),
                    Ce.addIcons(pe.lBT, pe.NOO),
                    Ce.addIcons(D.usd, D.Av$, D.KOC, D.omb, D.neY, D.xUV, D.zhw, D.Zzi, D.D9H, D.$tD, D.HK3, D.SrY, D.Uv8, D.ABo, D.mdU, D.ToV, D.opf),
                    Ce.addIcons(ue.dLO, ue.EyR, ue.yOZ, ue.acZ, ue.D3N, ue.xiG, ue.LEp, ue.diR, ue.SZw, ue.rWw, ue.iwE, ue.iV1, ue.gJF, ue.gr5, ue.nNP, ue.tRW, ue.oTz, ue.tmN, ue.wn1, ue.Tab, ue.UO1, ue.DaQ, ue.jJj, ue.U6l, ue.eRx),
                    Ce.addIcons(Z.jb6, Z.FU$, Z.g4A, Z.r8p, Z.EfQ, Z.ip0, Z.JyM, Z.NBC, Z.X5K, Z.LEp, Z.Psp, Z.cy3, Z.sqG, Z.NBC, Z.X5K, Z.B3e, Z.JyM, Z.wzO, Z.koM, Z.tMT, Z.diR, Z.Ssp, Z.OS1, Z.XzI, Z.kWN, Z.Xf_, Z.KtF, Z.g4A, Z.b7W, Z.VE0, Z.dT$, Z.xf3, Z.BUU, Z.QJ7, Z.wn1, Z.Tab, Z.uMC, Z.jb6, Z.oTz, Z.bz, Z.JIk, Z.xiG, Z.RMc, Z.eHv, Z.RLE, Z.byT, Z.Yai, Z.RP7, Z.Vui, Z.gf$, Z.xUV, Z.WRo, Z.UgQ, Z.owJ, Z.LEN, Z.m0r),
                    De.addIcons([Q, ve, Y, Pe, H, xe, ne, re, Oe, p, me, Le, ze, nt, N, F, L, ee, x, V, de, fe])
                }
            }
            return we.\u0275fac = function(Ce) {
                return new (Ce || we)(e.LFG(st.by),e.LFG(T))
            }
            ,
            we.\u0275mod = e.oAB({
                type: we
            }),
            we.\u0275inj = e.cJS({
                imports: [st.uH]
            }),
            we
        }
        )()
    }
    ,
    92498: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            Bl: ()=>F,
            _7: ()=>Y,
            Ek: ()=>xe,
            Pi: ()=>ne,
            $n: ()=>re,
            pT: ()=>Oe,
            Lw: ()=>p,
            Nz: ()=>o,
            hq: ()=>n,
            $p: ()=>me,
            O7: ()=>H,
            Gy: ()=>Le,
            WA: ()=>ze,
            pt: ()=>nt,
            yl: ()=>N
        });
        var R = m(94650);
        let o = (()=>{
            class L {
                get cachedSrc() {
                    return this.elRef.nativeElement.src
                }
                set cachedSrc(x) {
                    this.elRef.nativeElement.src !== x && this.renderer.setAttribute(this.elRef.nativeElement, "src", x)
                }
                constructor(x, V) {
                    this.elRef = x,
                    this.renderer = V
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)(R.Y36(R.SBq),R.Y36(R.Qsj))
            }
            ,
            L.\u0275dir = R.lG2({
                type: L,
                selectors: [["", "appCachedSrc", ""]],
                inputs: {
                    cachedSrc: ["appCachedSrc", "cachedSrc"]
                },
                standalone: !0
            }),
            L
        }
        )();
        var e = m(52413);
        const T = {
            threshold: 1
        };
        let n = (()=>{
            class L {
                constructor(x) {
                    this._elementRef = x,
                    this.intersectionChange = new R.vpe,
                    this.intersectionOptions = {},
                    this._observerSubs = null
                }
                ngOnInit() {
                    e.d$.isIntersectionObserverSupported(window) ? this._observerSubs = e.d$.observeElementIntersection(this._elementRef.nativeElement, this.intersectionOptions || T).subscribe(V=>{
                        this.intersectionChange.next(V)
                    }
                    ) : console.warn("\nThis browser has no (full) support for the IntersectionObserver API,\n inject the official polyfill or enable allowMissingIntersectionObserver\n for disabling it on unsupported browsers.")
                }
                ngOnDestroy() {
                    this._observerSubs && this._observerSubs.unsubscribe()
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)(R.Y36(R.SBq))
            }
            ,
            L.\u0275dir = R.lG2({
                type: L,
                selectors: [["", "appIntersection", ""]],
                inputs: {
                    intersectionOptions: "intersectionOptions"
                },
                outputs: {
                    intersectionChange: "intersectionChange"
                },
                standalone: !0
            }),
            L
        }
        )();
        var Q = m(53763);
        let Y = (()=>{
            class L extends e.K9 {
                constructor(x, V, de, fe) {
                    if (super(),
                    this._loadScriptService = x,
                    this.targetEl = V,
                    this.renderer = de,
                    this._captchaConfig = fe,
                    this.turnstileCFScript = "https://challenges.cloudflare.com/turnstile/v0/api.js",
                    this._captchaId = null,
                    this.isDarkTheme = !0,
                    this.captchaTokenResolved = new R.vpe,
                    null == this._captchaConfig)
                        throw new Error("Captcha: missing config");
                    this.siteKeyCaptcha = this._captchaConfig.siteKey
                }
                ngAfterViewInit() {
                    this.siteKeyCaptcha && "#" !== this.siteKeyCaptcha && this._loadCaptcha()
                }
                _loadCaptcha() {
                    this.renderer.parentNode(this.targetEl.nativeElement);
                    const x = this.renderer.createElement("div");
                    this.renderer.addClass(x, "iframe-captcha"),
                    this._loadScriptService.loadScript({
                        name: "captcha",
                        src: `${this.turnstileCFScript}?render=explicit&onload=onloadTurnstileCallback`
                    }).pipe((0,
                    e.sL)(this)).subscribe(()=>{
                        window.turnstile && this._loadTurnstile(x),
                        window.onloadTurnstileCallback = ()=>this._loadTurnstile(x)
                    }
                    )
                }
                _loadTurnstile(x) {
                    this._captchaId = window.turnstile.render(x, {
                        sitekey: this.siteKeyCaptcha,
                        action: this.action,
                        "expired-callback": ()=>this._resetTurnstile(this._captchaId),
                        "error-callback": ()=>this._captchaError(),
                        theme: this.isDarkTheme ? "dark" : "light",
                        callback: V=>{
                            this.captchaTokenResolved.emit(V)
                        }
                    }),
                    this.renderer.appendChild(this.targetEl.nativeElement, x)
                }
                _captchaError() {
                    this.captchaTokenResolved.emit(null)
                }
                _resetTurnstile(x) {
                    x && window.turnstile.reset(x)
                }
                onDestroy() {
                    this._captchaId && window.turnstile.remove(this._captchaId)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)(R.Y36(Q.WU),R.Y36(R.SBq),R.Y36(R.Qsj),R.Y36(Q.i5, 8))
            }
            ,
            L.\u0275dir = R.lG2({
                type: L,
                selectors: [["", "appCaptcha", ""]],
                inputs: {
                    action: "action",
                    isDarkTheme: "isDarkTheme"
                },
                outputs: {
                    captchaTokenResolved: "captchaTokenResolved"
                },
                standalone: !0,
                features: [R.qOj]
            }),
            L
        }
        )()
          , H = (()=>{
            class L {
                constructor() {
                    this._restrictionRegex = null
                }
                set inputRestriction(x) {
                    x && (this._restrictionRegex = new RegExp(x))
                }
                get inputRestriction() {
                    return this._restrictionRegex?.toString() ?? ""
                }
                eventHandler(x) {
                    return this.testValue(x, x.key.length > 1 ? x.char ?? x.key : x.key)
                }
                onPaste(x) {
                    if (!x.clipboardData)
                        return !0;
                    const V = x.clipboardData.getData("text/plain");
                    return this.testValue(x, V)
                }
                onDrop(x) {
                    if (!x.dataTransfer)
                        return !0;
                    const V = x.dataTransfer.getData("text/plain");
                    return this.testValue(x, V)
                }
                testValue(x, V) {
                    return !(this._restrictionRegex && !this._restrictionRegex.test(V) && (x.preventDefault(),
                    1))
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275dir = R.lG2({
                type: L,
                selectors: [["", "appRestrictInput", ""]],
                hostBindings: function(x, V) {
                    1 & x && R.NdJ("keypress", function(fe) {
                        return V.eventHandler(fe)
                    })("paste", function(fe) {
                        return V.onPaste(fe)
                    })("drop", function(fe) {
                        return V.onDrop(fe)
                    })
                },
                inputs: {
                    inputRestriction: ["appRestrictInput", "inputRestriction"]
                },
                standalone: !0
            }),
            L
        }
        )()
          , xe = (()=>{
            class L {
                transform(x, V) {
                    return e.k3.formatDate(x, V)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appDateFormat",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , ne = (()=>{
            class L {
                transform(x) {
                    const V = 1e3 * ("string" == typeof x ? Number.parseInt(x, 10) : x);
                    return new Date(V)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appDateFromUnix",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , re = (()=>{
            class L {
                transform(x, V) {
                    switch (V.type) {
                    case "full":
                        return e.k3.secondsToHms(Math.round(V.currentDate / 1e3) - Math.round(new Date(x).getTime() / 1e3));
                    case "rounded":
                        return e.k3.secondsToDayHoursMinutesSeconds(Math.round(V.currentDate / 1e3) - Math.round(new Date(x).getTime() / 1e3))
                    }
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "dateSince",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , Oe = (()=>{
            class L {
                transform(x, V, de="...") {
                    return e.LC.ellipsis(x, V, de)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "ellipsis",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , p = (()=>{
            class L {
                transform(x="", V) {
                    if (!V || 0 === V.length)
                        return x;
                    const de = V.filter(Pe=>!!Pe);
                    if (0 === de.length)
                        return x;
                    const fe = new RegExp("(" + de.join("|") + ")[\\s,.]","gi");
                    return x.replace(fe, "<strong>$&</strong>")
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appHighlightText",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , me = (()=>{
            class L {
                transform(x, V) {
                    const de = Object.values(e.B3).includes(V);
                    if (null == V || de)
                        return x >= 1 ? e.C6.toReadableNumber(x, V) : e.C6.formatNumbersWithLargeDecimals(Number(x));
                    throw new Error(`appNumber pipe: invalid format '${V}'`)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appNumber",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , Le = (()=>{
            class L {
                transform(x="") {
                    return e.C6.roundBigNumber(x)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appRoundBigNumber",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , ze = (()=>{
            class L {
                transform(x, V, de) {
                    const fe = Object.values(e.B3).includes(V);
                    if (null == V || fe)
                        return x >= 1e3 ? (new Le).transform(x) : 0 == x ? String(x) : x >= 1 && x < 1e3 ? e.C6.formatNumber(Number(x), de ?? 2) : e.C6.formatNumbersWithLargeDecimals(Number(x));
                    throw new Error(`appNumber pipe: invalid format '${V}'`)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appRoundNumber",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , nt = (()=>{
            class L {
                transform(x="", V=2, de) {
                    const fe = "number" == typeof x ? x : Number(x.replace(/,/g, ""));
                    return de ? e.C6.transformNumber(fe, V, de) : e.C6.roundPrice(x, V)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appRoundPrices",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , N = (()=>{
            class L {
                transform(x, V=20, de=[]) {
                    return null == x ? "" : e.LC.safeText(x, V, de)
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "appSafe",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
          , F = (()=>{
            class L {
                transform(x) {
                    return x ? `${x.slice(0, 5)}...${x.slice(-4, x.length)}` : ""
                }
            }
            return L.\u0275fac = function(x) {
                return new (x || L)
            }
            ,
            L.\u0275pipe = R.Yjl({
                name: "addressEllipsis",
                type: L,
                pure: !0,
                standalone: !0
            }),
            L
        }
        )()
    }
    ,
    12113: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            wx: ()=>p,
            vA: ()=>ta,
            mT: ()=>Ee,
            K9: ()=>Be,
            YS: ()=>Fe,
            IB: ()=>ce,
            K5: ()=>be,
            Fy: ()=>L,
            LB: ()=>V,
            _e: ()=>X,
            Jk: ()=>Nt,
            mv: ()=>Tt,
            _x: ()=>Jt,
            do: ()=>On,
            TH: ()=>St,
            jT: ()=>b,
            yX: ()=>Kn,
            cV: ()=>lo,
            gG: ()=>ht,
            n4: ()=>mo,
            MN: ()=>bo,
            Ey: ()=>M,
            GF: ()=>pt,
            yk: ()=>xn,
            vQ: ()=>Fo,
            qy: ()=>o
        });
        var R = m(37340);
        const o = (0,
        R.X$)("fadeAnimation", [(0,
        R.eR)("* => *", [(0,
        R.IO)(":enter", [(0,
        R.oB)({
            opacity: 0
        })], {
            optional: !0
        }), (0,
        R.IO)(":leave", [(0,
        R.oB)({
            opacity: 1
        }), (0,
        R.jt)("0.3s", (0,
        R.oB)({
            opacity: 0
        }))], {
            optional: !0
        }), (0,
        R.IO)(":enter", [(0,
        R.oB)({
            opacity: 0
        }), (0,
        R.jt)("0.3s 0.1s", (0,
        R.oB)({
            opacity: 1
        }))], {
            optional: !0
        })])]);
        var e = m(94650)
          , T = m(52413)
          , ie = m(89383)
          , n = m(92216)
          , Q = m(36895);
        function ve(d, y) {
            if (1 & d && (e.TgZ(0, "span", 6),
            e._uU(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Oqu(s.iconUnicode)
            }
        }
        function Y(d, y) {
            if (1 & d && e._UZ(0, "fa-icon", 7),
            2 & d) {
                const s = e.oxw();
                e.Q6J("icon", s.icon)
            }
        }
        function H(d, y) {
            if (1 & d && (e.TgZ(0, "span"),
            e._uU(1),
            e.ALo(2, "translate"),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Oqu(e.lcZ(2, 1, s.message))
            }
        }
        function xe(d, y) {
            if (1 & d && (e.TgZ(0, "a", 8),
            e._uU(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                let h, E;
                e.Q6J("href", s.link.href, e.LSH)("target", null !== (h = s.link.target) && void 0 !== h ? h : "_self"),
                e.xp6(1),
                e.Oqu(null !== (E = s.link.text) && void 0 !== E ? E : s.link.href)
            }
        }
        const ne = function() {
            return ["fal", "times"]
        };
        function re(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 9),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.emitClose())
                }),
                e._UZ(1, "fa-icon", 10),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Tol(s.alertType),
                e.xp6(1),
                e.Q6J("icon", e.DdM(3, ne))
            }
        }
        const Oe = ["*"];
        let p = (()=>{
            class d {
                constructor() {
                    this.customColor = null,
                    this.iconUnicode = null,
                    this.icon = null,
                    this.message = null,
                    this.link = null,
                    this.alertType = "info",
                    this.isClosable = !1,
                    this.alertClosed = new e.vpe
                }
                emitClose() {
                    this.alertClosed.emit()
                }
                get customColorStyle() {
                    return this.customColor ? `color: ${this.customColor}; background-color: ${T.lM.hexToRGB(this.customColor, .4)}` : null
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-alert"]],
                inputs: {
                    customColor: "customColor",
                    iconUnicode: "iconUnicode",
                    icon: "icon",
                    message: "message",
                    link: "link",
                    alertType: "alertType",
                    isClosable: "isClosable"
                },
                outputs: {
                    alertClosed: "alertClosed"
                },
                standalone: !0,
                features: [e.jDz],
                ngContentSelectors: Oe,
                decls: 8,
                vars: 9,
                consts: [[1, "alert-container"], ["class", "icon", 4, "ngIf"], ["class", "icon", 3, "icon", 4, "ngIf"], [4, "ngIf"], ["class", "link", 3, "href", "target", 4, "ngIf"], ["type", "button", "aria-label", "close", 3, "class", "click", 4, "ngIf"], [1, "icon"], [1, "icon", 3, "icon"], [1, "link", 3, "href", "target"], ["type", "button", "aria-label", "close", 3, "click"], ["aria-hidden", "true", 3, "icon"]],
                template: function(s, h) {
                    1 & s && (e.F$t(),
                    e.TgZ(0, "div", 0)(1, "div"),
                    e.YNc(2, ve, 2, 1, "span", 1),
                    e.YNc(3, Y, 1, 1, "fa-icon", 2),
                    e.Hsn(4),
                    e.YNc(5, H, 3, 3, "span", 3),
                    e.YNc(6, xe, 2, 3, "a", 4),
                    e.qZA(),
                    e.YNc(7, re, 2, 4, "button", 5),
                    e.qZA()),
                    2 & s && (e.Akn("custom" === h.alertType && h.customColor ? h.customColorStyle : null),
                    e.Tol(h.customColor || "custom" === h.alertType ? "" : h.alertType),
                    e.xp6(2),
                    e.Q6J("ngIf", !!h.iconUnicode),
                    e.xp6(1),
                    e.Q6J("ngIf", !!h.icon),
                    e.xp6(2),
                    e.Q6J("ngIf", !!h.message),
                    e.xp6(1),
                    e.Q6J("ngIf", !!h.link),
                    e.xp6(1),
                    e.Q6J("ngIf", !!h.isClosable))
                },
                dependencies: [Q.O5, n.uH, n.BN, ie.aw, ie.X$],
                styles: [".alert-container[_ngcontent-%COMP%]{min-height:2.5rem;border-radius:.625rem;margin:.625rem;padding:0 .625rem;display:flex;align-items:center;justify-content:space-between;gap:.25rem}.alert-container[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;width:100%;font-size:13px;display:inline-block;overflow:hidden;text-overflow:ellipsis}.alert-container[_ngcontent-%COMP%]   .link[_ngcontent-%COMP%]{margin-left:.25rem}.alert-container[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{font-size:.9375rem;margin-right:.25rem}.alert-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;text-shadow:none;transition:all .25s cubic-bezier(.27,.01,.38,1.06);background-color:transparent}.alert-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:.9375rem}.alert-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{outline:none}.info[_ngcontent-%COMP%]{color:#00b8d8;background-color:#00b8d866}.warning[_ngcontent-%COMP%]{color:#eda803;background-color:#eda80366}.danger[_ngcontent-%COMP%]{color:#ff868d;background-color:#ff868d66}[_nghost-%COMP%]   body.dark-theme[_ngcontent-%COMP%]   .warning[_ngcontent-%COMP%]{color:#ffdf91;background-color:#ffdf9166}"],
                changeDetection: 0
            }),
            d
        }
        )();
        const me = ["elementsList"]
          , Le = function() {
            return ["far", "angle-right"]
        };
        function ze(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "div", 5),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.scrollRight())
                }),
                e._UZ(1, "fa-icon", 6),
                e.qZA()
            }
            2 & d && (e.xp6(1),
            e.Q6J("icon", e.DdM(1, Le)))
        }
        function nt(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "div", 7),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.scrollLeft())
                }),
                e._UZ(1, "fa-icon", 6),
                e.qZA()
            }
            2 & d && (e.xp6(1),
            e.Q6J("icon", e.DdM(1, Le)))
        }
        const N = function(d, y) {
            return {
                right: d,
                left: y
            }
        }
          , F = ["*"];
        let L = (()=>{
            class d {
                set maxHeight(s) {
                    this._maxHeight = s,
                    this._recalculateSlider()
                }
                get maxHeight() {
                    return this._maxHeight
                }
                onResize() {
                    this._recalculateSlider()
                }
                constructor(s) {
                    this._cdRef = s,
                    this._maxHeight = "155",
                    this.lastSlide = new e.vpe,
                    this.elementsListCurrentScroll = 0,
                    this.elementsListMaxScroll = 0
                }
                ngAfterViewInit() {
                    this._recalculateSlider()
                }
                scrollLeft() {
                    this.elementsList?.nativeElement.scrollTo({
                        left: this.elementsListCurrentScroll - 310,
                        behavior: "smooth"
                    }),
                    this.elementsListCurrentScroll = this.elementsListCurrentScroll > 0 ? this.elementsListCurrentScroll - 310 : 0,
                    this.lastSlide.emit(this.elementsListCurrentScroll == this.elementsListMaxScroll),
                    this._cdRef.detectChanges()
                }
                scrollRight() {
                    this.elementsList?.nativeElement.scrollTo({
                        left: this.elementsListCurrentScroll + 310,
                        behavior: "smooth"
                    }),
                    this.elementsListCurrentScroll = this.elementsListCurrentScroll + 310 < this.elementsListMaxScroll ? this.elementsListCurrentScroll + 310 : this.elementsListMaxScroll,
                    this.lastSlide.emit(this.elementsListCurrentScroll == this.elementsListMaxScroll),
                    this._cdRef.detectChanges()
                }
                _recalculateSlider() {
                    if (this.elementsList) {
                        const s = this.elementsList.nativeElement;
                        this.elementsListCurrentScroll = s.scrollLeft,
                        this.elementsListMaxScroll = s.scrollWidth - s.clientWidth,
                        this._cdRef.detectChanges()
                    }
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-carousel"]],
                viewQuery: function(s, h) {
                    if (1 & s && e.Gf(me, 7),
                    2 & s) {
                        let E;
                        e.iGM(E = e.CRH()) && (h.elementsList = E.first)
                    }
                },
                hostBindings: function(s, h) {
                    1 & s && e.NdJ("resize", function() {
                        return h.onResize()
                    }, !1, e.Jf7)
                },
                inputs: {
                    maxHeight: "maxHeight"
                },
                outputs: {
                    lastSlide: "lastSlide"
                },
                standalone: !0,
                features: [e.jDz],
                ngContentSelectors: F,
                decls: 7,
                vars: 8,
                consts: [[1, "carousel", 3, "ngClass"], ["class", "arrow-icon right", 3, "click", 4, "ngIf"], ["class", "arrow-icon left", 3, "click", 4, "ngIf"], [1, "elements-list"], ["elementsList", ""], [1, "arrow-icon", "right", 3, "click"], ["size", "2x", 3, "icon"], [1, "arrow-icon", "left", 3, "click"]],
                template: function(s, h) {
                    1 & s && (e.F$t(),
                    e.TgZ(0, "div", 0),
                    e.YNc(1, ze, 2, 2, "div", 1),
                    e.YNc(2, nt, 2, 2, "div", 2),
                    e.TgZ(3, "div", 3, 4)(5, "ul"),
                    e.Hsn(6),
                    e.qZA()()()),
                    2 & s && (e.Udp("max-height", h.maxHeight, "px"),
                    e.Q6J("ngClass", e.WLB(5, N, h.elementsListCurrentScroll < h.elementsListMaxScroll, h.elementsListCurrentScroll > 0)),
                    e.xp6(1),
                    e.Q6J("ngIf", h.elementsListCurrentScroll < h.elementsListMaxScroll),
                    e.xp6(1),
                    e.Q6J("ngIf", h.elementsListCurrentScroll > 0))
                },
                dependencies: [Q.mk, Q.O5, n.uH, n.BN],
                styles: ['.carousel[_ngcontent-%COMP%]{width:calc(100% + 20px);overflow:hidden;position:relative}@media (max-width: 599px){.carousel[_ngcontent-%COMP%]{width:calc(100% + 10px)}}.carousel.right[_ngcontent-%COMP%]:after{content:" ";z-index:1;background:linear-gradient(270deg,#f4f5f6 12.86%,rgba(244,245,246,0) 87.14%);position:absolute;right:0;top:0;width:9.6875rem;height:100%}@media (max-width: 599px){.carousel.right[_ngcontent-%COMP%]:after{width:3.125rem}}.carousel.left[_ngcontent-%COMP%]:before{content:" ";z-index:1;background:linear-gradient(90deg,#f4f5f6 12.86%,rgba(244,245,246,0) 87.14%);position:absolute;left:0;top:0;width:9.6875rem;height:100%}@media (max-width: 599px){.carousel.left[_ngcontent-%COMP%]:before{width:5.625rem}}.carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{background-color:#f4f5f6;color:#818ea3;display:flex;align-items:center;justify-content:center;font-size:.625rem;width:2.125rem;height:2.125rem;border-radius:3.125rem;z-index:2;cursor:pointer}body.dark-theme   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]{color:#818ea3}.carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]:hover{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]:hover{background-color:#23323c}body.light   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   .arrow-icon[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}.carousel[_ngcontent-%COMP%]   .arrow-icon.right[_ngcontent-%COMP%]{position:absolute;top:50%;right:1.25rem;transform:translateY(-50%)}@media (max-width: 599px){.carousel[_ngcontent-%COMP%]   .arrow-icon.right[_ngcontent-%COMP%]{right:.625rem}}.carousel[_ngcontent-%COMP%]   .arrow-icon.left[_ngcontent-%COMP%]{position:absolute;top:50%;left:.125rem;transform:translateY(-50%) rotate(180deg)}.carousel[_ngcontent-%COMP%]   .elements-list[_ngcontent-%COMP%]{width:100%;overflow-y:auto}.carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0;width:max-content;display:flex}.carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]     app-carousel-item:last-child{margin-right:20px}.carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]     app-carousel-item li{background-color:#f4f5f6;display:inline-flex;border-radius:.9375rem;margin-right:.625rem;overflow:hidden;align-items:center;justify-content:center}body.dark-theme   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]     app-carousel-item li{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]     app-carousel-item li{background-color:#142028}body.light   [_nghost-%COMP%]   .carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]     app-carousel-item li{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .carousel[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]     app-carousel-item li{background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]     .carousel.right:after{background:linear-gradient(270deg,#142028 12.86%,rgba(20,32,40,0) 87.14%)}body.dark-theme   [_nghost-%COMP%]     .carousel.left:before{background:linear-gradient(90deg,#142028 12.86%,rgba(20,32,40,0) 87.14%)}'],
                changeDetection: 0
            }),
            d
        }
        )();
        function ee(d, y) {
            if (1 & d && (e.TgZ(0, "li"),
            e.Hsn(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.Udp("height", s.height, "px")("width", s.width, "px")
            }
        }
        const x = ["*"];
        let V = (()=>{
            class d {
                constructor() {
                    this.height = "auto",
                    this.width = "auto",
                    this.active = !0
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-carousel-item"]],
                inputs: {
                    height: "height",
                    width: "width",
                    active: "active"
                },
                standalone: !0,
                features: [e.jDz],
                ngContentSelectors: x,
                decls: 1,
                vars: 1,
                consts: [[3, "height", "width", 4, "ngIf"]],
                template: function(s, h) {
                    1 & s && (e.F$t(),
                    e.YNc(0, ee, 2, 4, "li", 0)),
                    2 & s && e.Q6J("ngIf", h.active)
                },
                dependencies: [Q.O5],
                styles: ["li[_ngcontent-%COMP%]{overflow:hidden;border-radius:15px}"],
                changeDetection: 0
            }),
            d
        }
        )();
        function de(d, y) {
            if (1 & d && e._UZ(0, "img", 9),
            2 & d) {
                const s = e.oxw();
                e.s9C("src", s.selectedItem.logoUrl, e.LSH)
            }
        }
        const fe = function(d) {
            return {
                "background-color": d
            }
        };
        function Pe(d, y) {
            if (1 & d && e._UZ(0, "div", 10),
            2 & d) {
                const s = e.oxw();
                e.Q6J("ngStyle", e.VKq(1, fe, s.selectedItem.dotColor))
            }
        }
        function ge(d, y) {
            if (1 & d && e.GkF(0, 12),
            2 & d) {
                const s = e.oxw(2);
                e.Q6J("ngTemplateOutlet", s.selectedItem.templateLabel)
            }
        }
        const Ie = function(d, y) {
            return {
                label: d,
                "extra-margin": y
            }
        };
        function st(d, y) {
            if (1 & d && (e.TgZ(0, "span", 11),
            e.YNc(1, ge, 1, 1, "ng-container", 6),
            e._uU(2),
            e.ALo(3, "translate"),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.Q6J("ngClass", e.WLB(5, Ie, !s.notCapitalized, s.selectedItem.label.length <= 5)),
                e.xp6(1),
                e.Q6J("ngIf", s.selectedItem && (null == s.selectedItem ? null : s.selectedItem.templateLabel)),
                e.xp6(1),
                e.hij(" ", e.lcZ(3, 3, s.selectedItem.label), "")
            }
        }
        function j(d, y) {
            1 & d && e._UZ(0, "fa-icon", 13)
        }
        function pe(d, y) {
            if (1 & d && e.GkF(0, 12),
            2 & d) {
                e.oxw();
                const s = e.MAs(11);
                e.Q6J("ngTemplateOutlet", s)
            }
        }
        function ue(d, y) {
            if (1 & d && e.GkF(0, 12),
            2 & d) {
                e.oxw();
                const s = e.MAs(9);
                e.Q6J("ngTemplateOutlet", s)
            }
        }
        function D(d, y) {
            if (1 & d && e._UZ(0, "img", 9),
            2 & d) {
                const s = e.oxw(2).$implicit;
                e.s9C("src", s.logoUrl, e.LSH)
            }
        }
        function Z(d, y) {
            if (1 & d && e._UZ(0, "span", 10),
            2 & d) {
                const s = e.oxw(2).$implicit;
                e.Q6J("ngStyle", e.VKq(1, fe, s.dotColor))
            }
        }
        function ye(d, y) {
            if (1 & d && e.GkF(0, 12),
            2 & d) {
                const s = e.oxw(3).$implicit;
                e.Q6J("ngTemplateOutlet", s.templateLabel)
            }
        }
        function we(d, y) {
            if (1 & d && (e.TgZ(0, "span"),
            e.YNc(1, ye, 1, 1, "ng-container", 6),
            e._uU(2),
            e.ALo(3, "translate"),
            e.qZA()),
            2 & d) {
                const s = e.oxw(2).$implicit
                  , h = e.oxw(3);
                e.Tol(h.notCapitalized ? null : "label"),
                e.xp6(1),
                e.Q6J("ngIf", null == s ? null : s.templateLabel),
                e.xp6(1),
                e.Oqu(e.lcZ(3, 4, s.label))
            }
        }
        function Ge(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "div", 19),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw().$implicit
                      , le = e.oxw(3);
                    return e.KtG(le.selectItem(E))
                }),
                e.YNc(1, D, 1, 1, "img", 2),
                e.YNc(2, Z, 1, 3, "span", 3),
                e.YNc(3, we, 4, 6, "span", 20),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw().$implicit;
                let h;
                e.Q6J("ngStyle", null !== (h = null == s ? null : s.styles) && void 0 !== h ? h : null),
                e.xp6(1),
                e.Q6J("ngIf", !!s.logoUrl),
                e.xp6(1),
                e.Q6J("ngIf", !(null == s || !s.dotColor)),
                e.xp6(1),
                e.Q6J("ngIf", !!s.label)
            }
        }
        function Ce(d, y) {
            if (1 & d && (e.ynx(0),
            e.YNc(1, Ge, 4, 4, "div", 18),
            e.BQk()),
            2 & d) {
                const s = y.$implicit
                  , h = e.oxw(3);
                e.xp6(1),
                e.Q6J("ngIf", h.selectedItem !== s)
            }
        }
        function De(d, y) {
            if (1 & d && (e.TgZ(0, "div", 21),
            e.GkF(1, 12),
            e.qZA()),
            2 & d) {
                const s = e.oxw(3);
                e.xp6(1),
                e.Q6J("ngTemplateOutlet", s.footerTpl)
            }
        }
        function ot(d, y) {
            if (1 & d && (e.TgZ(0, "div", 15),
            e.YNc(1, Ce, 2, 1, "ng-container", 16),
            e.YNc(2, De, 2, 1, "div", 17),
            e.qZA()),
            2 & d) {
                const s = e.oxw(2);
                e.xp6(1),
                e.Q6J("ngForOf", s.items)("ngForTrackBy", s.trackByValue),
                e.xp6(1),
                e.Q6J("ngIf", s.isFocused && s.footerTpl)
            }
        }
        function Ze(d, y) {
            if (1 & d && e.YNc(0, ot, 3, 3, "div", 14),
            2 & d) {
                const s = e.oxw();
                e.Q6J("ngIf", s.isFocused && (s.items.length > 1 || !!s.footerTpl))
            }
        }
        function $e(d, y) {
            if (1 & d && e._UZ(0, "img", 9),
            2 & d) {
                const s = e.oxw(2).$implicit;
                e.s9C("src", s.logoUrl, e.LSH)
            }
        }
        function je(d, y) {
            if (1 & d && e.GkF(0, 12),
            2 & d) {
                const s = e.oxw(3).$implicit;
                e.Q6J("ngTemplateOutlet", s.templateLabel)
            }
        }
        function Ue(d, y) {
            if (1 & d && (e.TgZ(0, "span"),
            e.YNc(1, je, 1, 1, "ng-container", 6),
            e._uU(2),
            e.ALo(3, "translate"),
            e.qZA()),
            2 & d) {
                const s = e.oxw(2).$implicit
                  , h = e.oxw(2);
                e.Tol(h.notCapitalized ? null : "label"),
                e.xp6(1),
                e.Q6J("ngIf", null == s ? null : s.templateLabel),
                e.xp6(1),
                e.Oqu(e.lcZ(3, 4, s.label))
            }
        }
        function It(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "div", 19),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw().$implicit
                      , le = e.oxw(2);
                    return e.KtG(le.selectItem(E))
                }),
                e.YNc(1, $e, 1, 1, "img", 2),
                e.YNc(2, Ue, 4, 6, "span", 20),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw().$implicit;
                let h;
                e.Q6J("ngStyle", null !== (h = null == s ? null : s.styles) && void 0 !== h ? h : null),
                e.xp6(1),
                e.Q6J("ngIf", !!s.logoUrl),
                e.xp6(1),
                e.Q6J("ngIf", !!s.label)
            }
        }
        function Me(d, y) {
            if (1 & d && (e.ynx(0),
            e.YNc(1, It, 3, 3, "div", 18),
            e.BQk()),
            2 & d) {
                const s = y.$implicit
                  , h = e.oxw(2);
                e.xp6(1),
                e.Q6J("ngIf", h.selectedItem !== s)
            }
        }
        function _(d, y) {
            if (1 & d && (e.TgZ(0, "div", 21),
            e.GkF(1, 12),
            e.qZA()),
            2 & d) {
                const s = e.oxw(2);
                e.xp6(1),
                e.Q6J("ngTemplateOutlet", s.footerTpl)
            }
        }
        const S = function(d) {
            return {
                displayed: d
            }
        };
        function P(d, y) {
            if (1 & d && (e.TgZ(0, "div", 22),
            e.YNc(1, Me, 2, 1, "ng-container", 16),
            e.YNc(2, _, 2, 1, "div", 17),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.Q6J("ngClass", e.VKq(4, S, s.isFocused && (s.items.length > 1 || !!s.footerTpl))),
                e.xp6(1),
                e.Q6J("ngForOf", s.items)("ngForTrackBy", s.trackByValue),
                e.xp6(1),
                e.Q6J("ngIf", s.isFocused && s.footerTpl)
            }
        }
        const B = function(d) {
            return {
                "item-no-radius": d
            }
        };
        let X = (()=>{
            class d {
                constructor(s) {
                    this._cdRef = s,
                    this.items = [],
                    this.selectedItem = null,
                    this.notCapitalized = !1,
                    this.shouldOnlyHideOptions = !1,
                    this.footerTpl = null,
                    this.itemSelected = new e.vpe,
                    this.isFocused = !1
                }
                registerOnChange(s) {
                    this.onChange = s
                }
                registerOnTouched(s) {
                    this.onTouch = s
                }
                writeValue(s) {
                    s !== this.selectedItem && (this.selectedItem = s,
                    this.itemSelected.next(this.selectedItem),
                    this._cdRef.detectChanges())
                }
                onFocus() {
                    this.isFocused = !0,
                    this._cdRef.detectChanges()
                }
                onBlur() {
                    this.isFocused = !1,
                    this._cdRef.detectChanges()
                }
                selectItem(s) {
                    this.writeValue(s)
                }
                onChange() {}
                onTouch() {}
                trackByValue(s, h) {
                    return h.value
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-dropdown-select"]],
                inputs: {
                    items: "items",
                    selectedItem: "selectedItem",
                    notCapitalized: "notCapitalized",
                    shouldOnlyHideOptions: "shouldOnlyHideOptions",
                    footerTpl: "footerTpl"
                },
                outputs: {
                    itemSelected: "itemSelected"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 12,
                vars: 13,
                consts: [["tabindex", "0", 1, "item-select-wrapper", 3, "click", "blur"], [3, "ngClass", "ngStyle"], ["alt", "item-logo", 3, "src", 4, "ngIf"], ["class", "dot", 3, "ngStyle", 4, "ngIf"], [3, "ngClass", 4, "ngIf"], ["class", "down", "icon", "chevron-down", 4, "ngIf"], [3, "ngTemplateOutlet", 4, "ngIf"], ["unmountOptions", ""], ["onlyHideOptions", ""], ["alt", "item-logo", 3, "src"], [1, "dot", 3, "ngStyle"], [3, "ngClass"], [3, "ngTemplateOutlet"], ["icon", "chevron-down", 1, "down"], ["class", "dropdown-list displayed", 4, "ngIf"], [1, "dropdown-list", "displayed"], [4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "dropdown-option favs-list", 4, "ngIf"], ["class", "dropdown-option", 3, "ngStyle", "click", 4, "ngIf"], [1, "dropdown-option", 3, "ngStyle", "click"], [3, "class", 4, "ngIf"], [1, "dropdown-option", "favs-list"], [1, "dropdown-list", 3, "ngClass"]],
                template: function(s, h) {
                    if (1 & s && (e.TgZ(0, "div", 0),
                    e.NdJ("click", function() {
                        return h.isFocused ? h.onBlur() : h.onFocus()
                    })("blur", function() {
                        return h.onBlur()
                    }),
                    e.TgZ(1, "div", 1),
                    e.YNc(2, de, 1, 1, "img", 2),
                    e.YNc(3, Pe, 1, 3, "div", 3),
                    e.YNc(4, st, 4, 8, "span", 4),
                    e.YNc(5, j, 1, 0, "fa-icon", 5),
                    e.qZA(),
                    e.YNc(6, pe, 1, 1, "ng-container", 6),
                    e.YNc(7, ue, 1, 1, "ng-container", 6),
                    e.qZA(),
                    e.YNc(8, Ze, 1, 1, "ng-template", null, 7, e.W1O),
                    e.YNc(10, P, 3, 6, "ng-template", null, 8, e.W1O)),
                    2 & s) {
                        let E;
                        e.xp6(1),
                        e.Gre("item-selected item-", null == h.selectedItem ? null : h.selectedItem.value, ""),
                        e.Q6J("ngClass", e.VKq(11, B, h.isFocused && (h.items.length > 1 || !!h.footerTpl)))("ngStyle", null !== (E = null == h.selectedItem ? null : h.selectedItem.styles) && void 0 !== E ? E : null),
                        e.xp6(1),
                        e.Q6J("ngIf", !(null == h.selectedItem || !h.selectedItem.logoUrl)),
                        e.xp6(1),
                        e.Q6J("ngIf", !(null == h.selectedItem || !h.selectedItem.dotColor)),
                        e.xp6(1),
                        e.Q6J("ngIf", !(null == h.selectedItem || !h.selectedItem.label)),
                        e.xp6(1),
                        e.Q6J("ngIf", h.items.length > 1 || !!h.footerTpl),
                        e.xp6(1),
                        e.Q6J("ngIf", h.shouldOnlyHideOptions),
                        e.xp6(1),
                        e.Q6J("ngIf", !h.shouldOnlyHideOptions)
                    }
                },
                dependencies: [Q.mk, Q.PC, Q.O5, Q.tP, n.uH, n.BN, Q.ax, ie.aw, ie.X$],
                styles: ["[_nghost-%COMP%]{display:flex}.item-select-wrapper[_ngcontent-%COMP%]{cursor:pointer;outline:none;position:relative;z-index:999;display:inline-block;color:#142028}body.dark-theme   [_nghost-%COMP%]   .item-select-wrapper[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .item-select-wrapper[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .item-select-wrapper[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .item-select-wrapper[_ngcontent-%COMP%]{color:#142028}.item-selected[_ngcontent-%COMP%]{background-color:#e2e7ec;border-radius:.4rem;padding:0 .3125rem}body.dark-theme   [_nghost-%COMP%]   .item-selected[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .item-selected[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .item-selected[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .item-selected[_ngcontent-%COMP%]{background-color:#e2e7ec}.item-selected[_ngcontent-%COMP%]   .extra-margin[_ngcontent-%COMP%]{margin-right:1.25rem}.dropdown-option[_ngcontent-%COMP%]{padding-left:.3125rem;background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .dropdown-option[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .dropdown-option[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .dropdown-option[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .dropdown-option[_ngcontent-%COMP%]{background-color:#f4f5f6}.dropdown-option[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.dark-theme   [_nghost-%COMP%]   .dropdown-option[_ngcontent-%COMP%]:hover{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .dropdown-option[_ngcontent-%COMP%]:hover{background-color:#23323c}body.light   [_nghost-%COMP%]   .dropdown-option[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .dropdown-option[_ngcontent-%COMP%]:hover{background-color:#e2e7ec}.item-selected[_ngcontent-%COMP%], .dropdown-option[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;font-size:13px;min-width:3.0625rem;padding-top:.5165rem;padding-bottom:.5165rem;text-align:left;vertical-align:baseline;white-space:nowrap}.item-selected[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .dropdown-option[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:.40625rem}.item-selected[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child, .dropdown-option[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child{padding-left:.40625rem}.item-selected[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child, .dropdown-option[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child{border-bottom-left-radius:.4rem;border-bottom-right-radius:.4rem}.item-selected[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], .dropdown-option[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%;height:.8rem;margin-right:.40625rem;vertical-align:middle;width:.8rem}.item-no-radius[_ngcontent-%COMP%]{border-bottom-left-radius:0;border-bottom-right-radius:0}.dropdown-list[_ngcontent-%COMP%]{display:none;position:absolute;border-bottom-left-radius:.4rem;border-bottom-right-radius:.4rem;overflow:hidden}.dropdown-list[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]{position:relative}.dropdown-list.displayed[_ngcontent-%COMP%]{display:flex;flex-direction:column}.label[_ngcontent-%COMP%]{text-transform:uppercase;display:flex;align-items:center}.dot[_ngcontent-%COMP%]{border-radius:.5rem;width:.6875rem;height:.6875rem}.favs-list[_ngcontent-%COMP%]{border-top:.0625rem solid #3a4956;position:sticky;bottom:0;width:100%}"],
                changeDetection: 0
            }),
            d
        }
        )();
        const ce = "screen and (max-width: 767px)"
          , be = "screen and (max-width: 1023px)"
          , Ee = "screen and (min-width: 1024px)"
          , Be = "screen and (min-width: 1280px)"
          , Fe = "screen and (min-width: 1320px)";
        var Ke = m(92498)
          , ft = m(77575)
          , ut = m(62289);
        function _t(d, y) {
            if (1 & d && e._UZ(0, "app-icon", 5),
            2 & d) {
                const s = e.oxw();
                e.Q6J("name", s.selectedItem.customIcon)
            }
        }
        function Wt(d, y) {
            if (1 & d && e._UZ(0, "app-icon", 5),
            2 & d) {
                const s = e.oxw().$implicit;
                e.Q6J("name", s.customIcon)
            }
        }
        function an(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 10),
                e.NdJ("click", function(E) {
                    e.CHM(s);
                    const le = e.oxw().$implicit
                      , We = e.oxw(2);
                    return e.KtG(We.edit(E, le))
                }),
                e._UZ(1, "fa-icon", 15),
                e.qZA()
            }
        }
        function xt(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 10),
                e.NdJ("click", function(E) {
                    e.CHM(s);
                    const le = e.oxw().$implicit
                      , We = e.oxw(2);
                    return e.KtG(We.remove(E, le))
                }),
                e._UZ(1, "fa-icon", 16),
                e.qZA()
            }
        }
        function Dt(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.ynx(0),
                e.TgZ(1, "li", 13),
                e.NdJ("mouseenter", function() {
                    const le = e.CHM(s).index
                      , We = e.oxw(2);
                    return e.KtG(We.toggleCrudActionsInIndex(le))
                })("mouseleave", function() {
                    e.CHM(s);
                    const E = e.oxw(2);
                    return e.KtG(E.toggleCrudActionsInIndex(-1))
                })("click", function(E) {
                    const We = e.CHM(s).$implicit
                      , en = e.oxw(2);
                    return e.KtG(en.selectItem(E, We))
                }),
                e.YNc(2, Wt, 1, 1, "app-icon", 2),
                e.TgZ(3, "span"),
                e._uU(4),
                e.ALo(5, "appSafe"),
                e.qZA(),
                e.YNc(6, an, 2, 0, "button", 14),
                e.YNc(7, xt, 2, 0, "button", 14),
                e.qZA(),
                e.BQk()
            }
            if (2 & d) {
                const s = y.$implicit
                  , h = y.index
                  , E = e.oxw(2);
                e.xp6(2),
                e.Q6J("ngIf", null == s ? null : s.customIcon),
                e.xp6(2),
                e.hij(" ", e.lcZ(5, 4, s.label), " "),
                e.xp6(2),
                e.Q6J("ngIf", E.showIconsActionCrud === h || "mobileTablet" === E.mediaDevice),
                e.xp6(1),
                e.Q6J("ngIf", E.showIconsActionCrud === h || "mobileTablet" === E.mediaDevice)
            }
        }
        function Ut(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "div", 6)(1, "ul", 7),
                e.YNc(2, Dt, 8, 6, "ng-container", 8),
                e.qZA(),
                e.TgZ(3, "ul", 9)(4, "li", 10),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.createOpened.emit())
                }),
                e.TgZ(5, "span"),
                e._uU(6),
                e.ALo(7, "translate"),
                e.qZA(),
                e._UZ(8, "fa-icon", 11),
                e.qZA(),
                e.TgZ(9, "li", 10),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.clear())
                }),
                e.TgZ(10, "span"),
                e._uU(11),
                e.ALo(12, "translate"),
                e.qZA(),
                e._UZ(13, "fa-icon", 12),
                e.qZA()()()
            }
            if (2 & d) {
                const s = e.oxw();
                e.xp6(2),
                e.Q6J("ngForOf", s.dropDownCrudItems)("ngForTrackBy", s.trackByOption),
                e.xp6(4),
                e.Oqu(e.lcZ(7, 4, "crud_dropdown.add")),
                e.xp6(5),
                e.Oqu(e.lcZ(12, 6, "crud_dropdown.clear"))
            }
        }
        const Rt = function(d) {
            return {
                open: d
            }
        };
        let Nt = (()=>{
            class d extends T.K9 {
                clickOut(s) {
                    !this._elRef.nativeElement.contains(s.target) && this.showItemList && (this.showItemList = !1)
                }
                set selectedItem(s) {
                    this._selectedItem = s,
                    this._cdRef.detectChanges()
                }
                get selectedItem() {
                    return this._selectedItem
                }
                constructor(s, h, E) {
                    super(),
                    this._elRef = s,
                    this._cdRef = h,
                    this._breakpointObserver = E,
                    this._selectedItem = null,
                    this.dropDownCrudItems = [],
                    this.itemCrudSelected = new e.vpe,
                    this.createOpened = new e.vpe,
                    this.crudCleaned = new e.vpe,
                    this.itemCrudRemoved = new e.vpe,
                    this.itemCrudEdited = new e.vpe,
                    this.showItemList = !1,
                    this.showIconsActionCrud = -1,
                    this.mediaDevice = ""
                }
                ngOnInit() {
                    this._breakpointObserver.observe([be, Ee]).pipe((0,
                    T.sL)(this)).subscribe(s=>{
                        this.mediaDevice = s.breakpoints[be] ? "mobileTablet" : "desktop",
                        this._cdRef.detectChanges()
                    }
                    )
                }
                onDestroy() {}
                toggleList() {
                    this.showItemList = !this.showItemList
                }
                edit(s, h) {
                    s.stopPropagation(),
                    this.itemCrudEdited.emit(h),
                    this.showItemList = !1
                }
                remove(s, h) {
                    s.stopPropagation(),
                    this.itemCrudRemoved.emit(h)
                }
                selectItem(s, h) {
                    this._selectedItem?.value !== h.value && (s.stopPropagation(),
                    this.itemCrudSelected.emit(h)),
                    this.showItemList = !1
                }
                clear() {
                    this.crudCleaned.emit(),
                    this.showItemList = !1
                }
                toggleCrudActionsInIndex(s) {
                    this.showIconsActionCrud = s,
                    this._cdRef.detectChanges()
                }
                trackByOption(s, h) {
                    return h.value
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.SBq),e.Y36(e.sBO),e.Y36(ut.Yg))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-dropdown-select-crud"]],
                hostBindings: function(s, h) {
                    1 & s && e.NdJ("click", function(le) {
                        return h.clickOut(le)
                    }, !1, e.evT)
                },
                inputs: {
                    selectedItem: "selectedItem",
                    dropDownCrudItems: "dropDownCrudItems"
                },
                outputs: {
                    itemCrudSelected: "itemCrudSelected",
                    createOpened: "createOpened",
                    crudCleaned: "crudCleaned",
                    itemCrudRemoved: "itemCrudRemoved",
                    itemCrudEdited: "itemCrudEdited"
                },
                standalone: !0,
                features: [e.qOj, e.jDz],
                decls: 8,
                vars: 9,
                consts: [[1, "dropdown-button", 3, "ngClass", "click"], ["icon", "filter"], [3, "name", 4, "ngIf"], [3, "icon"], ["class", "dropdown-container", 4, "ngIf"], [3, "name"], [1, "dropdown-container"], [1, "options-container"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "crud-container"], [3, "click"], ["icon", "plus"], ["icon", "redo"], [3, "mouseenter", "mouseleave", "click"], [3, "click", 4, "ngIf"], ["icon", "pencil-alt"], ["icon", "trash-alt"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "button", 0),
                    e.NdJ("click", function() {
                        return h.toggleList()
                    }),
                    e.TgZ(1, "span"),
                    e._UZ(2, "fa-icon", 1),
                    e.YNc(3, _t, 1, 1, "app-icon", 2),
                    e._uU(4),
                    e.ALo(5, "appSafe"),
                    e.qZA(),
                    e._UZ(6, "fa-icon", 3),
                    e.qZA(),
                    e.YNc(7, Ut, 14, 8, "div", 4)),
                    2 & s && (e.Q6J("ngClass", e.VKq(7, Rt, h.showItemList)),
                    e.xp6(3),
                    e.Q6J("ngIf", null == h.selectedItem ? null : h.selectedItem.customIcon),
                    e.xp6(1),
                    e.hij(" ", null === h.selectedItem ? "Custom filters" : e.lcZ(5, 5, h.selectedItem.label), " "),
                    e.xp6(2),
                    e.Q6J("icon", h.showItemList ? "chevron-up" : "chevron-down"),
                    e.xp6(1),
                    e.Q6J("ngIf", h.showItemList))
                },
                dependencies: [Q.mk, n.uH, n.BN, Q.O5, ft.lQ, Q.ax, Ke.yl, ie.aw, ie.X$],
                styles: [".dropdown-button[_ngcontent-%COMP%]{background:none;border:none;display:flex;align-items:center;justify-content:space-between;background-color:#f4f5f6;height:2.75rem;border-radius:.625rem;width:16.875rem;font-size:13px;padding:.8125rem;color:#142028}body.dark-theme   [_nghost-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%]{color:#142028}.dropdown-button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{pointer-events:none}.dropdown-button.open[_ngcontent-%COMP%]{border-radius:.625rem .625rem 0 0}.dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.875rem}.dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]   app-icon[_ngcontent-%COMP%]    {display:flex;width:14px;height:16px;margin-right:-8px}.dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#3a4956}body.dark-theme[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#3a4956}body.light   [_nghost-%COMP%]   .dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#f4f5f6}body.light[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#f4f5f6}.dropdown-container[_ngcontent-%COMP%]{width:270px;position:absolute;z-index:99999;border-radius:0 0 .625rem .625rem;background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]{background-color:#f4f5f6}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%]{max-height:10rem;overflow-y:auto;list-style-type:none;-webkit-margin-before:0;margin-block-start:0;-webkit-padding-start:0;padding-inline-start:0;-webkit-margin-after:0;margin-block-end:0;border-bottom:1px solid;padding:0 0 .5625rem;border-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%]{border-color:#3a4956}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%]{border-color:#3a4956}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%]{border-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%]{border-color:#f4f5f6}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;font-size:13px;width:100%;cursor:pointer;padding:.5625rem .8125rem .5625rem 2.5rem;position:relative;color:#142028}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#142028}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{padding:.1875rem .8125rem .1875rem 2.5rem;background-color:#fff}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#0b1217}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#fff}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#fff}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   app-icon[_ngcontent-%COMP%]    {display:flex;position:absolute;left:.75rem;width:1rem}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{width:9.0625rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]:hover, .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]:focus{border-radius:.25rem;color:#00b8d8}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;color:#142028;height:auto;padding:.25rem .375rem}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#142028}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{border-radius:.25rem}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:.9375rem}.dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]:hover, .dropdown-container[_ngcontent-%COMP%]   .options-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]:focus{border-radius:.25rem;color:#00b8d8}.dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%]{list-style-type:none;-webkit-margin-before:0;margin-block-start:0;-webkit-padding-start:0;padding-inline-start:0;-webkit-margin-after:0;margin-block-end:0;padding:.5625rem 0}.dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;font-size:13px;width:100%;cursor:pointer;padding:.5625rem .8125rem .5625rem 2.5rem;color:#142028}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{color:#142028}.dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#fff}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#0b1217}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#fff}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:focus{background-color:#fff}.dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;color:#142028}body.dark-theme   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]   .crud-container[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#142028}"],
                changeDetection: 0
            }),
            d
        }
        )();
        var bt = m(15861)
          , at = m(49319)
          , Ft = m(2262);
        const Dn = ["draggableBox"]
          , rn = ["resizeBox"]
          , sn = ["dragHandleCorner"]
          , Yt = ["dragHandleRight"]
          , Un = ["dragHandleLeft"]
          , cn = ["dragHandleBottom"]
          , ln = function() {
            return ["far", "external-link"]
        };
        function Bt(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "a", 22),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.panelClose())
                }),
                e._UZ(1, "fa-icon", 9),
                e.ALo(2, "translate"),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("href", s.externalUrl, e.LSH),
                e.xp6(1),
                e.Q6J("icon", e.DdM(6, ln))("placement", s.fullScreenActive ? "bottom" : "auto")("ngbTooltip", e.lcZ(2, 4, "home.go_page"))
            }
        }
        const dn = function() {
            return ["far", "sync"]
        };
        function un(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 23),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.launchReloadContent())
                }),
                e._UZ(1, "fa-icon", 9),
                e.ALo(2, "translate"),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Q6J("icon", e.DdM(5, dn))("placement", s.fullScreenActive ? "bottom" : "auto")("ngbTooltip", e.lcZ(2, 3, "home.reload"))
            }
        }
        function zt(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 24),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.makeFullScreen())
                })("mousedown", function(E) {
                    return E.stopPropagation()
                }),
                e._UZ(1, "fa-icon", 25),
                e.ALo(2, "translate"),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Q6J("placement", s.fullScreenActive ? "bottom" : "auto")("ngbTooltip", e.lcZ(2, 2, "home.fullscreen"))
            }
        }
        function hn(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 24),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.quitFullScreen())
                })("mousedown", function(E) {
                    return E.stopPropagation()
                }),
                e._UZ(1, "fa-icon", 26),
                e.ALo(2, "translate"),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Q6J("placement", s.fullScreenActive ? "bottom" : "auto")("ngbTooltip", e.lcZ(2, 2, "home.exit_full"))
            }
        }
        function gn(d, y) {
            1 & d && e._UZ(0, "div", 27)
        }
        function Gt(d, y) {
            1 & d && e.Hsn(0, 0, ["*ngIf", "showContent"])
        }
        const pn = function(d) {
            return {
                absolute: d
            }
        }
          , mn = function(d) {
            return {
                "full-screen": d
            }
        }
          , Rn = function(d) {
            return {
                "drag-handle": !0,
                top: !0,
                "cursor-default": d
            }
        }
          , oo = function() {
            return ["fal", "times"]
        }
          , ao = function(d) {
            return {
                "drag-handle": !0,
                left: !0,
                "cursor-default": d
            }
        }
          , fn = function(d) {
            return {
                "drag-handle": !0,
                corner: !0,
                "cursor-default": d
            }
        }
          , Nn = function(d) {
            return {
                "drag-handle": !0,
                right: !0,
                "cursor-default": d
            }
        }
          , _n = function(d) {
            return {
                "drag-handle": !0,
                bottom: !0,
                "cursor-default": d
            }
        }
          , Fn = ["*"];
        let Tt = (()=>{
            class d {
                get resizeBoxElement() {
                    return this.resizeBox.nativeElement
                }
                get draggableBoxElement() {
                    return this.draggableBox.nativeElement
                }
                get dragHandleCornerElement() {
                    return this.dragHandleCorner.nativeElement
                }
                get dragHandleRightElement() {
                    return this.dragHandleRight.nativeElement
                }
                get dragHandleLeftElement() {
                    return this.dragHandleLeft.nativeElement
                }
                get dragHandleBottomElement() {
                    return this.dragHandleBottom.nativeElement
                }
                constructor(s, h) {
                    this.ngZone = s,
                    this._cdRef = h,
                    this.localStorageKey = null,
                    this.panelClosed = new e.vpe,
                    this.showOverlay = !1,
                    this.showContent = !1,
                    this.screenHeight = window.innerHeight,
                    this.screenWidth = window.innerWidth,
                    this.height = window.innerHeight > 700 ? 700 : window.innerHeight - 15,
                    this.width = 420,
                    this.left = 100,
                    this.fullScreen = !1,
                    this.reloadOption = !1,
                    this.dragBoundary = ".drag-overlay",
                    this.isResizable = !0,
                    this.fullScreenByDefault = !1,
                    this.reloadContent = new e.vpe,
                    this.fullScreenActive = !1,
                    this._positionValues = {
                        height: 0,
                        left: 0,
                        top: 0,
                        width: 0
                    },
                    this._previousResizeBoxSize = null
                }
                ngOnInit() {
                    const s = this._readStoredPositionValues();
                    this.top = this.screenHeight < 700 ? 0 : this.screenHeight - (this.height + 15),
                    null == s ? (this._positionValues = {
                        top: this.top,
                        left: this.left,
                        width: this.width,
                        height: this.height
                    },
                    this._storePositionValues(this._positionValues)) : (this._positionValues = s,
                    this.left = this._positionValues.left,
                    this.width = this._positionValues.width,
                    this.height = this._positionValues.height,
                    this._positionValues.top > 1e3 ? (this._positionValues.top = this.top,
                    this._storePositionValues(this._positionValues)) : this.top = this._positionValues.top),
                    this.fullScreenActive = this.fullScreenByDefault,
                    this.showContent = !0,
                    this._cdRef.markForCheck()
                }
                ngAfterViewInit() {
                    this._setAllHandleTransform()
                }
                ngAfterViewChecked() {
                    const s = this.resizeBox.nativeElement.getBoundingClientRect();
                    JSON.stringify(this._previousResizeBoxSize) !== JSON.stringify(s) && this._setAllHandleTransform()
                }
                ngOnDestroy() {
                    this.quitFullScreen()
                }
                _setAllHandleTransform() {
                    if (this.resizeBox) {
                        const s = this.resizeBox.nativeElement.getBoundingClientRect();
                        this._setHandleTransform(this.dragHandleCornerElement, s, "both"),
                        this._setHandleTransform(this.dragHandleRightElement, s, "x"),
                        this._setHandleTransform(this.dragHandleLeftElement, s, "x"),
                        this._setHandleTransform(this.dragHandleBottomElement, s, "y"),
                        this._previousResizeBoxSize = s
                    }
                }
                _setHandleTransform(s, h, E) {
                    const le = s.getBoundingClientRect()
                      , We = h.width - le.width
                      , en = h.height - le.height;
                    "x" === E && (s.style.transform = s === this.dragHandleLeftElement ? "translate(0, 0)" : `translate(${We}px, 0)`),
                    "y" === E && (s.style.transform = `translate(0, ${en}px)`),
                    "both" === E && (s.style.transform = `translate(${We}px, ${en}px)`)
                }
                dragMove(s) {
                    this.ngZone.runOutsideAngular(()=>{
                        this._resize(s, this.resizeBoxElement)
                    }
                    )
                }
                _resize(s, h) {
                    const E = s.getBoundingClientRect()
                      , le = h.getBoundingClientRect()
                      , en = E.top > this.screenHeight ? this.screenHeight - le.top + E.height - 4 : E.top - le.top + E.height;
                    h.style.width = (E.left > this.screenWidth ? this.screenWidth - le.left + E.width - 12 : E.left - le.left + E.width) + "px",
                    h.style.height = en + "px",
                    this._setAllHandleTransform()
                }
                toggleOverlay(s) {
                    this.showOverlay = s,
                    this._cdRef.detectChanges()
                }
                panelClose() {
                    var s = this;
                    return (0,
                    bt.Z)(function*() {
                        s.fullScreenActive && s.quitFullScreen(),
                        s.panelClosed.emit()
                    })()
                }
                setFinalPositionDraggable() {
                    const s = this.draggableBoxElement.getBoundingClientRect();
                    this._positionValues.top = s.top,
                    this._positionValues.left = s.left,
                    this._storePositionValues(this._positionValues)
                }
                setFinalPositionResizable() {
                    const s = this.resizeBoxElement.getBoundingClientRect();
                    this._positionValues.width = s.width,
                    this._positionValues.height = s.height,
                    this._storePositionValues(this._positionValues)
                }
                makeFullScreen() {
                    this.fullScreenActive = !0
                }
                quitFullScreen() {
                    this.fullScreenActive = !1
                }
                launchReloadContent() {
                    this.reloadContent.emit(!0)
                }
                _readStoredPositionValues() {
                    if (this.localStorageKey) {
                        const s = T._Z.getString(this.localStorageKey);
                        return null == s ? null : JSON.parse(s)
                    }
                    return null
                }
                _storePositionValues(s) {
                    this.localStorageKey && T._Z.setString(this.localStorageKey, JSON.stringify(s))
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.R0b),e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-floating-modal"]],
                viewQuery: function(s, h) {
                    if (1 & s && (e.Gf(Dn, 7),
                    e.Gf(rn, 7),
                    e.Gf(sn, 7),
                    e.Gf(Yt, 7),
                    e.Gf(Un, 7),
                    e.Gf(cn, 7)),
                    2 & s) {
                        let E;
                        e.iGM(E = e.CRH()) && (h.draggableBox = E.first),
                        e.iGM(E = e.CRH()) && (h.resizeBox = E.first),
                        e.iGM(E = e.CRH()) && (h.dragHandleCorner = E.first),
                        e.iGM(E = e.CRH()) && (h.dragHandleRight = E.first),
                        e.iGM(E = e.CRH()) && (h.dragHandleLeft = E.first),
                        e.iGM(E = e.CRH()) && (h.dragHandleBottom = E.first)
                    }
                },
                inputs: {
                    localStorageKey: "localStorageKey",
                    height: "height",
                    width: "width",
                    left: "left",
                    top: "top",
                    fullScreen: "fullScreen",
                    reloadOption: "reloadOption",
                    externalUrl: "externalUrl",
                    dragBoundary: "dragBoundary",
                    isResizable: "isResizable",
                    fullScreenByDefault: "fullScreenByDefault"
                },
                outputs: {
                    panelClosed: "panelClosed",
                    reloadContent: "reloadContent"
                },
                standalone: !0,
                features: [e.jDz],
                ngContentSelectors: Fn,
                decls: 25,
                vars: 46,
                consts: [[1, "drag-overlay", 3, "ngClass"], ["cdkDrag", "", 1, "floating-modal-container", 2, "position", "fixed", 3, "cdkDragDisabled", "cdkDragBoundary", "ngClass"], ["draggableBox", ""], ["cdkDragHandle", "", 3, "ngClass", "cdkDragStarted", "mousedown", "cdkDragReleased", "mouseleave", "mouseout", "mouseup"], [1, "actions"], ["target", "_blank", "rel", "noopener", 3, "href", "click", 4, "ngIf"], ["type", "button", 3, "click", 4, "ngIf"], ["type", "button", 3, "click", "mousedown", 4, "ngIf"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click", "mousedown"], [3, "icon", "placement", "ngbTooltip"], [1, "resizable-block", 2, "position", "relative"], ["resizeBox", ""], ["class", "drag-overlay-inside", 4, "ngIf"], ["dragHandleLeft", ""], ["cdkDrag", "", 3, "ngClass", "cdkDragDisabled", "cdkDragMoved", "cdkDragStarted", "mousedown", "cdkDragReleased", "mouseup"], ["dragHandleCorner", ""], ["cdkDragLockAxis", "x", "cdkDrag", "", 3, "ngClass", "cdkDragDisabled", "cdkDragMoved", "cdkDragStarted", "mousedown", "cdkDragReleased", "mouseup"], ["dragHandleRight", ""], ["cdkDragLockAxis", "y", "cdkDrag", "", 3, "ngClass", "cdkDragDisabled", "cdkDragMoved", "cdkDragStarted", "mousedown", "cdkDragReleased", "mouseup"], ["dragHandleBottom", ""], [1, "floating-modal-content"], [4, "ngIf"], ["target", "_blank", "rel", "noopener", 3, "href", "click"], ["type", "button", 3, "click"], ["type", "button", 3, "click", "mousedown"], ["icon", "expand-arrows-alt", 3, "placement", "ngbTooltip"], ["icon", "compress-arrows-alt", 3, "placement", "ngbTooltip"], [1, "drag-overlay-inside"]],
                template: function(s, h) {
                    if (1 & s) {
                        const E = e.EpF();
                        e.F$t(),
                        e.TgZ(0, "div", 0)(1, "div", 1, 2)(3, "div", 3),
                        e.NdJ("cdkDragStarted", function() {
                            return h.toggleOverlay(!0)
                        })("mousedown", function() {
                            return h.toggleOverlay(!0)
                        })("cdkDragReleased", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        })("mouseleave", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        })("mouseout", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        })("mouseup", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        }),
                        e.TgZ(4, "div", 4),
                        e.YNc(5, Bt, 3, 7, "a", 5),
                        e.YNc(6, un, 3, 6, "button", 6),
                        e.YNc(7, zt, 3, 4, "button", 7),
                        e.YNc(8, hn, 3, 4, "button", 7),
                        e.qZA(),
                        e.TgZ(9, "button", 8),
                        e.NdJ("click", function() {
                            return h.panelClose()
                        })("mousedown", function(We) {
                            return We.stopPropagation()
                        }),
                        e._UZ(10, "fa-icon", 9),
                        e.ALo(11, "translate"),
                        e.qZA()(),
                        e.TgZ(12, "div", 10, 11),
                        e.YNc(14, gn, 1, 0, "div", 12),
                        e.TgZ(15, "span", 3, 13),
                        e.NdJ("cdkDragStarted", function() {
                            return h.toggleOverlay(!0)
                        })("mousedown", function() {
                            return h.toggleOverlay(!0)
                        })("cdkDragReleased", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        })("mouseleave", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        })("mouseout", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        })("mouseup", function() {
                            return h.toggleOverlay(!1),
                            h.fullScreenActive ? null : h.setFinalPositionDraggable()
                        }),
                        e.qZA(),
                        e.TgZ(17, "span", 14, 15),
                        e.NdJ("cdkDragMoved", function() {
                            e.CHM(E);
                            const We = e.MAs(18);
                            return e.KtG(h.dragMove(We))
                        })("cdkDragStarted", function() {
                            return h.toggleOverlay(!0)
                        })("mousedown", function() {
                            return h.toggleOverlay(!0)
                        })("cdkDragReleased", function() {
                            return h.toggleOverlay(!1),
                            h.setFinalPositionResizable()
                        })("mouseup", function() {
                            return h.toggleOverlay(!1),
                            h.setFinalPositionResizable()
                        }),
                        e.qZA(),
                        e.TgZ(19, "span", 16, 17),
                        e.NdJ("cdkDragMoved", function() {
                            e.CHM(E);
                            const We = e.MAs(20);
                            return e.KtG(h.dragMove(We))
                        })("cdkDragStarted", function() {
                            return h.toggleOverlay(!0)
                        })("mousedown", function() {
                            return h.toggleOverlay(!0)
                        })("cdkDragReleased", function() {
                            return h.toggleOverlay(!1),
                            h.setFinalPositionResizable()
                        })("mouseup", function() {
                            return h.toggleOverlay(!1),
                            h.setFinalPositionResizable()
                        }),
                        e.qZA(),
                        e.TgZ(21, "span", 18, 19),
                        e.NdJ("cdkDragMoved", function() {
                            e.CHM(E);
                            const We = e.MAs(22);
                            return e.KtG(h.dragMove(We))
                        })("cdkDragStarted", function() {
                            return h.toggleOverlay(!0)
                        })("mousedown", function() {
                            return h.toggleOverlay(!0)
                        })("cdkDragReleased", function() {
                            return h.toggleOverlay(!1),
                            h.setFinalPositionResizable()
                        })("mouseup", function() {
                            return h.toggleOverlay(!1),
                            h.setFinalPositionResizable()
                        }),
                        e.qZA(),
                        e.TgZ(23, "div", 20),
                        e.YNc(24, Gt, 1, 0, "ng-content", 21),
                        e.qZA()()()()
                    }
                    2 & s && (e.Q6J("ngClass", e.VKq(31, pn, h.showOverlay)),
                    e.xp6(1),
                    e.Udp("top", h.top, "px")("left", h.left, "px"),
                    e.Q6J("cdkDragDisabled", h.fullScreenActive || !h.isResizable)("cdkDragBoundary", h.dragBoundary)("ngClass", e.VKq(33, mn, h.fullScreenActive)),
                    e.xp6(2),
                    e.Q6J("ngClass", e.VKq(35, Rn, h.fullScreenActive || !h.isResizable)),
                    e.xp6(2),
                    e.Q6J("ngIf", !!h.externalUrl),
                    e.xp6(1),
                    e.Q6J("ngIf", h.reloadOption),
                    e.xp6(1),
                    e.Q6J("ngIf", h.fullScreen && !h.fullScreenActive),
                    e.xp6(1),
                    e.Q6J("ngIf", h.fullScreen && h.fullScreenActive),
                    e.xp6(2),
                    e.Q6J("icon", e.DdM(37, oo))("placement", h.fullScreenActive ? "bottom" : "auto")("ngbTooltip", e.lcZ(11, 29, "home.close")),
                    e.xp6(2),
                    e.Udp("width", h.width, "px")("height", h.height, "px"),
                    e.xp6(2),
                    e.Q6J("ngIf", h.showOverlay),
                    e.xp6(1),
                    e.Q6J("ngClass", e.VKq(38, ao, h.fullScreenActive || !h.isResizable)),
                    e.xp6(2),
                    e.Q6J("ngClass", e.VKq(40, fn, h.fullScreenActive || !h.isResizable))("cdkDragDisabled", h.fullScreenActive || !h.isResizable),
                    e.xp6(2),
                    e.Q6J("ngClass", e.VKq(42, Nn, h.fullScreenActive || !h.isResizable))("cdkDragDisabled", h.fullScreenActive || !h.isResizable),
                    e.xp6(2),
                    e.Q6J("ngClass", e.VKq(44, _n, h.fullScreenActive || !h.isResizable))("cdkDragDisabled", h.fullScreenActive || !h.isResizable),
                    e.xp6(3),
                    e.Q6J("ngIf", h.showContent))
                },
                dependencies: [Q.mk, Ft.Zt, Ft.Bh, Q.O5, n.uH, n.BN, at._L, ie.aw, ie.X$],
                styles: [".drag-overlay[_ngcontent-%COMP%]{width:0;left:0;top:0;height:0}.drag-overlay.absolute[_ngcontent-%COMP%]{position:fixed;inset:0;background-color:transparent;width:100%;height:100%;z-index:999993}.floating-modal-container[_ngcontent-%COMP%]{position:fixed;background-color:gray;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content;z-index:999993;max-width:100%}.floating-modal-container[_ngcontent-%COMP%]   .drag-overlay-inside[_ngcontent-%COMP%]{position:absolute;inset:0;background-color:transparent;width:100%;height:100%;z-index:5}.floating-modal-container.full-screen[_ngcontent-%COMP%]{inset:0!important;width:100%!important;height:100%!important;transform:translateZ(0)!important}.floating-modal-container.full-screen[_ngcontent-%COMP%]   .resizable-block[_ngcontent-%COMP%]{width:100%!important;height:100%!important}.floating-modal-container[_ngcontent-%COMP%], .resizable-block[_ngcontent-%COMP%]{min-width:20rem;min-height:32.5rem;max-width:100%}.floating-modal-content[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%}.drag-handle[_ngcontent-%COMP%]{position:absolute;background-color:#f4f5f6;z-index:1}body.dark-theme   [_nghost-%COMP%]   .drag-handle[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .drag-handle[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .drag-handle[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .drag-handle[_ngcontent-%COMP%]{background-color:#f4f5f6}.drag-handle.cursor-default[_ngcontent-%COMP%]{cursor:default!important}.drag-handle.corner[_ngcontent-%COMP%]{width:.25rem;height:.25rem;z-index:2;cursor:nwse-resize}.drag-handle.right[_ngcontent-%COMP%], .drag-handle.left[_ngcontent-%COMP%]{width:.25rem;height:100%;cursor:ew-resize}.drag-handle.left[_ngcontent-%COMP%]{cursor:move}.drag-handle.top[_ngcontent-%COMP%]{width:100%;z-index:10;cursor:move;display:flex;align-items:center;justify-content:space-between;padding:.9375rem .75rem}.drag-handle.top[_ngcontent-%COMP%]   .back[_ngcontent-%COMP%]{font-size:12px}.drag-handle.top[_ngcontent-%COMP%]   .back[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{margin-right:.3125rem}.drag-handle.top[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{align-self:flex-end}.drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center}.drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-decoration:none;background:none;border:none;padding:.0625rem .375rem;color:#818ea3}body.dark-theme   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}.drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%], .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:16px}.drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}body.dark-theme   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff}body.light   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}body.light[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .drag-handle.top[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}.drag-handle.bottom[_ngcontent-%COMP%]{height:.25rem;width:100%;cursor:ns-resize}"],
                changeDetection: 0
            }),
            d
        }
        )()
          , St = (()=>{
            class d {
                constructor(s, h) {
                    this.targetEl = s,
                    this.renderer = h,
                    this.appLoading = !1
                }
                ngOnChanges() {
                    if (this.appLoading) {
                        this.renderer.parentNode(this.targetEl.nativeElement);
                        const s = this.renderer.createElement("div");
                        this.renderer.addClass(s, "dxt-loading");
                        const h = this.renderer.createElement("div");
                        this.renderer.addClass(h, "dot-pulse"),
                        this.renderer.appendChild(s, h),
                        this.renderer.appendChild(this.targetEl.nativeElement, s)
                    } else
                        for (const s of Array.from(this.targetEl.nativeElement.children))
                            s.className.includes("dxt-loading") && this.renderer.removeChild(this.targetEl.nativeElement, s)
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.SBq),e.Y36(e.Qsj))
            }
            ,
            d.\u0275dir = e.lG2({
                type: d,
                selectors: [["", "appLoading", ""]],
                inputs: {
                    appLoading: "appLoading"
                },
                standalone: !0,
                features: [e.TTD]
            }),
            d
        }
        )();
        const Cn = function() {
            return ["fal", "times"]
        };
        function bn(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 10),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.panelClose())
                }),
                e._UZ(1, "fa-icon", 11),
                e.ALo(2, "translate"),
                e.qZA()
            }
            2 & d && (e.xp6(1),
            e.Q6J("icon", e.DdM(4, Cn))("ngbTooltip", e.lcZ(2, 2, "home.close")))
        }
        function Kt(d, y) {
            if (1 & d && e._UZ(0, "div", 12),
            2 & d) {
                const s = e.oxw();
                e.Q6J("appLoading", s.isLoading)
            }
        }
        function Bn(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "iframe", 13),
                e.NdJ("load", function(E) {
                    e.CHM(s);
                    const le = e.oxw();
                    return e.KtG(le.loadIframe(E))
                }),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("appCachedSrc", s.url)
            }
        }
        const Sn = function(d) {
            return {
                "panel-close": d
            }
        }
          , $n = function() {
            return ["far", "external-link"]
        }
          , Mn = function() {
            return ["far", "sync"]
        };
        let Jt = (()=>{
            class d {
                set url(s) {
                    this._url = s,
                    this._cdRef.detectChanges()
                }
                get url() {
                    return this._url
                }
                constructor(s) {
                    this._cdRef = s,
                    this.showCloseButton = !0,
                    this.panelClosed = new e.vpe,
                    this.close = !1,
                    this.isLoading = !0,
                    this.isIFrameLoaded = !0,
                    this._iFrameElement = null,
                    this._url = ""
                }
                ngOnInit() {
                    document.body.style.overflow = "hidden"
                }
                ngOnDestroy() {
                    document.body.style.overflow = "auto"
                }
                panelClose() {
                    var s = this;
                    return (0,
                    bt.Z)(function*() {
                        document.body.style.overflow = "auto",
                        s.close = !0,
                        yield s._sleep(600),
                        s.panelClosed.emit()
                    })()
                }
                reloadIframe() {
                    var s = this;
                    return (0,
                    bt.Z)(function*() {
                        s._iFrameElement && s._iFrameElement.contentWindow && (s.isIFrameLoaded = !1,
                        s.isLoading = !0,
                        s._cdRef.detectChanges(),
                        yield s._sleep(1e3),
                        s.isIFrameLoaded = !0,
                        s._cdRef.detectChanges())
                    })()
                }
                loadIframe(s) {
                    var h = this;
                    return (0,
                    bt.Z)(function*() {
                        s && s.currentTarget && (s.stopImmediatePropagation(),
                        h._iFrameElement = s.currentTarget,
                        yield h._sleep(1e3),
                        h.isLoading = !1,
                        h._cdRef.detectChanges())
                    })()
                }
                _sleep(s) {
                    return new Promise(h=>{
                        setTimeout(()=>{
                            h(!0)
                        }
                        , s)
                    }
                    )
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-iframe"]],
                inputs: {
                    url: "url",
                    showCloseButton: "showCloseButton"
                },
                outputs: {
                    panelClosed: "panelClosed"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 11,
                vars: 12,
                consts: [[1, "backdrop", 3, "click"], [1, "iframe-exchange-container", 3, "ngClass"], [1, "header"], [1, "actions"], ["target", "_blank", "rel", "noopener", 3, "href"], [3, "icon"], ["type", "button", 3, "disabled", "click"], ["type", "button", "class", "close", "aria-label", "Close", 3, "click", 4, "ngIf"], ["class", "loading-exchange", 3, "appLoading", 4, "ngIf"], [3, "appCachedSrc", "load", 4, "ngIf"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["placement", "left", 3, "icon", "ngbTooltip"], [1, "loading-exchange", 3, "appLoading"], [3, "appCachedSrc", "load"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "div", 0),
                    e.NdJ("click", function() {
                        return h.panelClose()
                    }),
                    e.qZA(),
                    e.TgZ(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "a", 4),
                    e._UZ(5, "fa-icon", 5),
                    e.qZA(),
                    e.TgZ(6, "button", 6),
                    e.NdJ("click", function() {
                        return h.reloadIframe()
                    }),
                    e._UZ(7, "fa-icon", 5),
                    e.qZA()(),
                    e.YNc(8, bn, 3, 5, "button", 7),
                    e.qZA(),
                    e.YNc(9, Kt, 1, 1, "div", 8),
                    e.YNc(10, Bn, 1, 1, "iframe", 9),
                    e.qZA()),
                    2 & s && (e.xp6(1),
                    e.Q6J("ngClass", e.VKq(8, Sn, h.close)),
                    e.xp6(3),
                    e.Q6J("href", h.url, e.LSH),
                    e.xp6(1),
                    e.Q6J("icon", e.DdM(10, $n)),
                    e.xp6(1),
                    e.Q6J("disabled", !!h.isLoading),
                    e.xp6(1),
                    e.Q6J("icon", e.DdM(11, Mn)),
                    e.xp6(1),
                    e.Q6J("ngIf", h.showCloseButton),
                    e.xp6(1),
                    e.Q6J("ngIf", h.isLoading),
                    e.xp6(1),
                    e.Q6J("ngIf", !!h.url && !!h.isIFrameLoaded))
                },
                dependencies: [Q.mk, n.uH, n.BN, Q.O5, at._L, St, Ke.Nz, ie.aw, ie.X$],
                styles: [".backdrop[_ngcontent-%COMP%]{position:absolute;width:100%;inset:0;height:100%;background-color:#fff;opacity:.7;z-index:999991}body.dark-theme   [_nghost-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#0b1217}body.light   [_nghost-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#fff}body.light[_ngcontent-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#fff}.iframe-exchange-container[_ngcontent-%COMP%]{background-color:#f4f5f6;box-shadow:0 .25rem .25rem .0625rem #00000040;position:fixed;max-height:100vh;right:0;top:0;bottom:0;height:100%;z-index:999992;overflow-y:hidden;width:100%}body.dark-theme   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]{background-color:#f4f5f6}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;padding:.9375rem .75rem}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .back[_ngcontent-%COMP%]{font-size:12px}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .back[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{margin-right:.3125rem}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:.625rem;align-items:center}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-decoration:none;background:none;border:none;color:#818ea3}body.dark-theme   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%], .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{font-size:16px}.iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}body.dark-theme   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#fff}body.light   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}body.light[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .iframe-exchange-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#142028}.iframe-exchange-container[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{width:100%;height:calc(100% - 58px);border-color:transparent}.loading-exchange[_ngcontent-%COMP%]{display:flex;align-content:center;justify-content:center;align-items:center;position:relative;height:100%;width:100%;text-align:center}"],
                changeDetection: 0
            }),
            d
        }
        )();
        var vn = m(82722)
          , qt = m(77579)
          , Qt = m(60515);
        function Zn(d, y) {
            if (1 & d && e._UZ(0, "div", 2),
            2 & d) {
                const s = e.oxw();
                e.Q6J("appLoading", s.isLoading)
            }
        }
        function Pn(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "iframe", 3),
                e.NdJ("load", function(E) {
                    e.CHM(s);
                    const le = e.oxw();
                    return e.KtG(le.loadIframe(E))
                }),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("appCachedSrc", s.url)
            }
        }
        let On = (()=>{
            class d extends T.K9 {
                set url(s) {
                    this._url = s,
                    this._cdRef.detectChanges()
                }
                get url() {
                    return this._url
                }
                set reload$(s) {
                    this._reloadChanged.next(),
                    this._reload$ = s,
                    this._reload$.pipe((0,
                    vn.R)(this._reloadChanged), (0,
                    T.sL)(this)).subscribe(()=>this._reloadIframe())
                }
                get reload$() {
                    return this._reload$
                }
                constructor(s) {
                    super(),
                    this._cdRef = s,
                    this.isLoading = !0,
                    this.isIFrameLoaded = !0,
                    this._iFrameElement = null,
                    this._url = "",
                    this._reloadChanged = new qt.x,
                    this._reload$ = Qt.E
                }
                onDestroy() {}
                loadIframe(s) {
                    var h = this;
                    return (0,
                    bt.Z)(function*() {
                        s && s.currentTarget && (s.stopImmediatePropagation(),
                        h._iFrameElement = s.currentTarget,
                        yield h._sleep(1e3),
                        h.isLoading = !1,
                        h._cdRef.detectChanges())
                    })()
                }
                _reloadIframe() {
                    var s = this;
                    return (0,
                    bt.Z)(function*() {
                        s._iFrameElement && s._iFrameElement.contentWindow && (s.isIFrameLoaded = !1,
                        s.isLoading = !0,
                        s._cdRef.detectChanges(),
                        yield s._sleep(1e3),
                        s.isIFrameLoaded = !0,
                        s._cdRef.detectChanges())
                    })()
                }
                _sleep(s) {
                    return new Promise(h=>{
                        setTimeout(()=>{
                            h(!0)
                        }
                        , s)
                    }
                    )
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-iframe-embedded"]],
                inputs: {
                    url: "url",
                    reload$: "reload$"
                },
                standalone: !0,
                features: [e.qOj, e.jDz],
                decls: 2,
                vars: 2,
                consts: [["class", "loading-exchange", 3, "appLoading", 4, "ngIf"], [3, "appCachedSrc", "load", 4, "ngIf"], [1, "loading-exchange", 3, "appLoading"], [3, "appCachedSrc", "load"]],
                template: function(s, h) {
                    1 & s && (e.YNc(0, Zn, 1, 1, "div", 0),
                    e.YNc(1, Pn, 1, 1, "iframe", 1)),
                    2 & s && (e.Q6J("ngIf", h.isLoading),
                    e.xp6(1),
                    e.Q6J("ngIf", !!h.url && !!h.isIFrameLoaded))
                },
                dependencies: [Q.O5, St, Ke.Nz],
                styles: ["iframe[_ngcontent-%COMP%]{width:100%;height:calc(100% - 56px);border-color:transparent;position:absolute;bottom:0;left:0}.loading-exchange[_ngcontent-%COMP%]{display:flex;align-content:center;justify-content:center;align-items:center;position:absolute;bottom:0;left:0;height:calc(100% - 56px);width:100%;text-align:center}"],
                changeDetection: 0
            }),
            d
        }
        )();
        const jt = function(d, y, s, h, E, le, We, en, fa, _a, Ca) {
            return {
                "ng-marquee-direction-left": d,
                "ng-marquee-direction-right": y,
                "ng-marquee-direction-alternate": s,
                "ng-marquee-speed-dextboard": h,
                "ng-marquee-speed-drowsy": E,
                "ng-marquee-speed-slow": le,
                "ng-marquee-speed-normal": We,
                "ng-marquee-speed-fast": en,
                "ng-marquee-speed-swift": fa,
                "ng-marquee-speed-hyper": _a,
                "ng-marquee-stop-on-hover": Ca
            }
        }
          , Hn = function(d) {
            return {
                "animation-duration": d
            }
        }
          , A = ["*"];
        var w = (()=>{
            return (d = w || (w = {})).left = "left",
            d.right = "right",
            d.alternate = "alternate",
            w;
            var d
        }
        )()
          , c = (()=>{
            return (d = c || (c = {})).dextboard = "dextboard",
            d.drowsy = "drowsy",
            d.slow = "slow",
            d.normal = "normal",
            d.fast = "fast",
            d.swift = "swift",
            d.hyper = "hyper",
            c;
            var d
        }
        )();
        let b = (()=>{
            class d {
                constructor() {
                    this.stopOnHover = !1,
                    this.marqueeDirection = w,
                    this.marqueeSpeed = c
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-marquee"]],
                inputs: {
                    speed: "speed",
                    duration: "duration",
                    direction: "direction",
                    stopOnHover: "stopOnHover"
                },
                standalone: !0,
                features: [e.jDz],
                ngContentSelectors: A,
                decls: 3,
                vars: 16,
                consts: [[1, "ng-marquee", 3, "ngClass"], [3, "ngStyle"]],
                template: function(s, h) {
                    1 & s && (e.F$t(),
                    e.TgZ(0, "div", 0)(1, "span", 1),
                    e.Hsn(2),
                    e.qZA()()),
                    2 & s && (e.Q6J("ngClass", e.rFY(2, jt, [h.marqueeDirection.left === h.direction, h.marqueeDirection.right === h.direction, h.marqueeDirection.alternate === h.direction, h.marqueeSpeed.dextboard === h.speed, h.marqueeSpeed.drowsy === h.speed, h.marqueeSpeed.slow === h.speed, h.marqueeSpeed.normal === h.speed, h.marqueeSpeed.fast === h.speed, h.marqueeSpeed.swift === h.speed, h.marqueeSpeed.hyper === h.speed, h.stopOnHover])),
                    e.xp6(1),
                    e.Q6J("ngStyle", e.VKq(14, Hn, h.duration)))
                },
                dependencies: [Q.mk, Q.PC],
                styles: [".ng-marquee[_ngcontent-%COMP%]{overflow:hidden;text-align:left}.ng-marquee.ng-marquee-speed-dextboard[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:170s}.ng-marquee.ng-marquee-speed-drowsy[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:30s}.ng-marquee.ng-marquee-speed-slow[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:20s}.ng-marquee.ng-marquee-speed-normal[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:10s}.ng-marquee.ng-marquee-speed-fast[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:7s}.ng-marquee.ng-marquee-speed-swift[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:5s}.ng-marquee.ng-marquee-speed-hyper[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-duration:2s}.ng-marquee.ng-marquee-stop-on-hover[_ngcontent-%COMP%]:hover > span[_ngcontent-%COMP%]{animation-play-state:paused}@keyframes _ngcontent-%COMP%_movement-smooth{0%{transform:translate(0);left:100%}to{transform:translate(-100%);left:0%}}@keyframes _ngcontent-%COMP%_movement-steps20{0%{transform:translate(0);left:100%}5%,9.99%{transform:translate(-5%);left:95%}10%,14.99%{transform:translate(-10%);left:90%}15%,19.99%{transform:translate(-15%);left:85%}20%,24.99%{transform:translate(-20%);left:80%}25%,29.99%{transform:translate(-25%);left:75%}30%,34.99%{transform:translate(-30%);left:70%}35%,39.99%{transform:translate(-35%);left:65%}40%,44.99%{transform:translate(-40%);left:60%}45%,49.99%{transform:translate(-45%);left:55%}50%,54.99%{transform:translate(-50%);left:50%}55%,59.99%{transform:translate(-55%);left:45%}60%,64.99%{transform:translate(-60%);left:40%}65%,69.99%{transform:translate(-65%);left:35%}70%,74.99%{transform:translate(-70%);left:30%}75%,79.99%{transform:translate(-75%);left:25%}80%,84.99%{transform:translate(-80%);left:20%}85%,89.99%{transform:translate(-85%);left:15%}90%,94.99%{transform:translate(-90%);left:10%}95%,99.99%{transform:translate(-95%);left:5%}to{transform:translate(-100%);left:0%}}@keyframes _ngcontent-%COMP%_movement-steps10{0%{transform:translate(0);left:100%}10%,19.99%{transform:translate(-10%);left:90%}20%,29.99%{transform:translate(-20%);left:80%}30%,39.99%{transform:translate(-30%);left:70%}40%,49.99%{transform:translate(-40%);left:60%}50%,59.99%{transform:translate(-50%);left:50%}60%,69.99%{transform:translate(-60%);left:40%}70%,79.99%{transform:translate(-70%);left:30%}80%,89.99%{transform:translate(-80%);left:20%}90%,99.99%{transform:translate(-90%);left:10%}to{transform:translate(-100%);left:0%}}@keyframes _ngcontent-%COMP%_movement-steps5{0%,19.99%{transform:translate(0);left:100%}20%,39.99%{transform:translate(-20%);left:80%}40%,59.99%{transform:translate(-40%);left:60%}60%,79.99%{transform:translate(-60%);left:40%}80%,99.99%{transform:translate(-80%);left:20%}to{transform:translate(-100%);left:0%}}.ng-marquee.ng-marquee-movement-smooth[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-name:_ngcontent-%COMP%_movement-smooth}.ng-marquee.ng-marquee-movement-steps20[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-name:_ngcontent-%COMP%_movement-steps20}.ng-marquee.ng-marquee-movement-steps10[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-name:_ngcontent-%COMP%_movement-steps10}.ng-marquee.ng-marquee-movement-steps5[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-name:_ngcontent-%COMP%_movement-steps5}.ng-marquee.ng-marquee-direction-left[_ngcontent-%COMP%] > span[_ngcontent-%COMP%], .ng-marquee.ng-marquee-direction-normal[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-direction:normal}.ng-marquee.ng-marquee-direction-alternate[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-direction:alternate}.ng-marquee.ng-marquee-direction-right[_ngcontent-%COMP%] > span[_ngcontent-%COMP%], .ng-marquee.ng-marquee-direction-reverse[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{animation-direction:reverse}.ng-marquee[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{content:attr(data-marquee);white-space:nowrap;position:relative;transform:translate(-50%);display:inline-block;left:50%;animation:linear infinite;animation-duration:10s;animation-name:_ngcontent-%COMP%_movement-smooth;animation-direction:normal}"],
                changeDetection: 0
            }),
            d
        }
        )();
        const k = function(d) {
            return {
                open: d
            }
        };
        function oe(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "div", 8),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.closePanel())
                }),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("ngClass", e.VKq(1, k, s.openPanel))
            }
        }
        function Ae(d, y) {
            if (1 & d && e.GkF(0, 9),
            2 & d) {
                e.oxw();
                const s = e.MAs(9);
                e.Q6J("ngTemplateOutlet", s)
            }
        }
        function Ve(d, y) {
            if (1 & d && (e.TgZ(0, "div", 10),
            e.GkF(1, 9),
            e.qZA()),
            2 & d) {
                e.oxw();
                const s = e.MAs(9);
                e.xp6(1),
                e.Q6J("ngTemplateOutlet", s)
            }
        }
        function Mt(d, y) {
            if (1 & d && (e.TgZ(0, "h3"),
            e._uU(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw(2);
                e.xp6(1),
                e.Oqu(s.panelTitle)
            }
        }
        const Vn = function(d) {
            return {
                "page-subtitle__white": d
            }
        };
        function ro(d, y) {
            if (1 & d && (e.TgZ(0, "p", 14),
            e._uU(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw(2);
                e.Q6J("ngClass", e.VKq(2, Vn, s.maxHeight)),
                e.xp6(1),
                e.Oqu(s.panelSubtitle)
            }
        }
        const Ao = function(d, y) {
            return {
                "with-title-mobile": d,
                "without-title": y
            }
        };
        function Wn(d, y) {
            if (1 & d && (e.TgZ(0, "div", 11),
            e.YNc(1, Mt, 2, 1, "h3", 12),
            e.YNc(2, ro, 2, 4, "p", 13),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.Q6J("ngClass", e.WLB(3, Ao, !!s.panelTitle && !s.closeButton && s.relativeButton, !s.panelTitle)),
                e.xp6(1),
                e.Q6J("ngIf", !!s.panelTitle),
                e.xp6(1),
                e.Q6J("ngIf", !!s.panelSubtitle)
            }
        }
        const $t = function(d) {
            return {
                "z-index-highest": d
            }
        }
          , Yn = function() {
            return ["far", "arrow-left"]
        };
        function zn(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 17),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw(2);
                    return e.KtG(E.closePanel())
                }),
                e._UZ(1, "fa-icon", 18),
                e.ALo(2, "translate"),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw(2);
                e.Q6J("ngClass", e.VKq(5, $t, !s.enableScrollOnClose)),
                e.xp6(1),
                e.Q6J("icon", e.DdM(7, Yn))("ngbTooltip", e.lcZ(2, 3, "home.close"))
            }
        }
        const Gn = function() {
            return ["fal", "times"]
        };
        function io(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 19),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw(2);
                    return e.KtG(E.closePanel())
                }),
                e._UZ(1, "fa-icon", 20),
                e.ALo(2, "translate"),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw(2);
                e.Q6J("ngClass", e.VKq(6, $t, !s.enableScrollOnClose)),
                e.xp6(1),
                e.Q6J("icon", e.DdM(8, Gn))("ngbTooltip", e.lcZ(2, 4, "home.close"))("disableTooltip", s.shouldDisableCloseTooltip)
            }
        }
        function so(d, y) {
            if (1 & d && (e.YNc(0, zn, 3, 8, "button", 15),
            e.YNc(1, io, 3, 9, "button", 16)),
            2 & d) {
                const s = e.oxw();
                e.Q6J("ngIf", !s.closeButton),
                e.xp6(1),
                e.Q6J("ngIf", s.closeButton)
            }
        }
        const ko = function(d, y, s, h) {
            return {
                open: d,
                resizable: y,
                "full-width": s,
                "z-index-highest": h
            }
        }
          , co = function(d, y, s) {
            return {
                "without-title": d,
                "full-height": y,
                "max-height": s
            }
        }
          , Ko = ["*"];
        let Kn = (()=>{
            class d extends T.K9 {
                get viewContainerRef() {
                    return this._viewContainerRef
                }
                constructor(s, h, E) {
                    super(),
                    this._cdRef = s,
                    this._breakpointObserver = h,
                    this._viewContainerRef = E,
                    this.backdrop = !1,
                    this.closeButton = !0,
                    this.relativeButton = !1,
                    this.showHeader = !0,
                    this.closeHidden = !1,
                    this.isResizable = !1,
                    this.fullScreenEnabled = !1,
                    this.closeEnabled = !1,
                    this.enableScrollOnClose = !0,
                    this.maxHeight = !1,
                    this.blockScroll = !0,
                    this.panelClosed = new e.vpe,
                    this.openPanel = !1,
                    this.fullActive = !1,
                    this.shouldDisableCloseTooltip = !1
                }
                ngOnInit() {
                    "hidden" !== document.body.style.overflow && this.blockScroll && (document.body.style.overflow = "hidden"),
                    setTimeout(()=>{
                        this.openPanel = !0,
                        this._cdRef.detectChanges()
                    }
                    , 100),
                    this._breakpointObserver.observe(be).pipe((0,
                    T.sL)(this)).subscribe(s=>{
                        this.shouldDisableCloseTooltip = s.matches,
                        this._cdRef.detectChanges()
                    }
                    )
                }
                ngOnChanges(s) {
                    this.fullActive = this.fullScreenEnabled,
                    s.closeEnabled?.currentValue !== s.closeEnabled?.previousValue && s.closeEnabled?.currentValue && this.closePanel()
                }
                onDestroy() {
                    this._reEnableScrollOnClose()
                }
                closePanel() {
                    this.openPanel = !1,
                    this._reEnableScrollOnClose(),
                    this._cdRef.detectChanges(),
                    setTimeout(()=>{
                        this.panelClosed.emit(),
                        this._cdRef.detectChanges()
                    }
                    , 400)
                }
                _reEnableScrollOnClose() {
                    this.enableScrollOnClose && (document.body.style.overflow = "auto")
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO),e.Y36(ut.Yg),e.Y36(e.s_b))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-panel-component"]],
                inputs: {
                    panelTitle: "panelTitle",
                    panelSubtitle: "panelSubtitle",
                    backdrop: "backdrop",
                    closeButton: "closeButton",
                    relativeButton: "relativeButton",
                    showHeader: "showHeader",
                    closeHidden: "closeHidden",
                    isResizable: "isResizable",
                    fullScreenEnabled: "fullScreenEnabled",
                    closeEnabled: "closeEnabled",
                    enableScrollOnClose: "enableScrollOnClose",
                    maxHeight: "maxHeight",
                    blockScroll: "blockScroll"
                },
                outputs: {
                    panelClosed: "panelClosed"
                },
                standalone: !0,
                features: [e.qOj, e.TTD, e.jDz],
                ngContentSelectors: Ko,
                decls: 10,
                vars: 15,
                consts: [["class", "backdrop", 3, "ngClass", "click", 4, "ngIf"], [1, "panel-container", 3, "ngClass"], [3, "ngTemplateOutlet", 4, "ngIf"], ["class", "close-container", 4, "ngIf"], [1, "panel-container__body"], ["class", "panel-container__header", 3, "ngClass", 4, "ngIf"], [1, "panel-container__content", 3, "ngClass"], ["closeButtons", ""], [1, "backdrop", 3, "ngClass", "click"], [3, "ngTemplateOutlet"], [1, "close-container"], [1, "panel-container__header", 3, "ngClass"], [4, "ngIf"], ["class", "page-subtitle", 3, "ngClass", 4, "ngIf"], [1, "page-subtitle", 3, "ngClass"], ["type", "button", "class", "close left", "aria-label", "Close", 3, "ngClass", "click", 4, "ngIf"], ["type", "button", "class", "close", "aria-label", "Close", 3, "ngClass", "click", 4, "ngIf"], ["type", "button", "aria-label", "Close", 1, "close", "left", 3, "ngClass", "click"], ["placement", "left", 3, "icon", "ngbTooltip"], ["type", "button", "aria-label", "Close", 1, "close", 3, "ngClass", "click"], ["placement", "left", 3, "icon", "ngbTooltip", "disableTooltip"]],
                template: function(s, h) {
                    1 & s && (e.F$t(),
                    e.YNc(0, oe, 1, 3, "div", 0),
                    e.TgZ(1, "div", 1),
                    e.YNc(2, Ae, 1, 1, "ng-container", 2),
                    e.YNc(3, Ve, 2, 1, "div", 3),
                    e.TgZ(4, "div", 4),
                    e.YNc(5, Wn, 3, 6, "div", 5),
                    e.TgZ(6, "div", 6),
                    e.Hsn(7),
                    e.qZA()()(),
                    e.YNc(8, so, 2, 2, "ng-template", null, 7, e.W1O)),
                    2 & s && (e.Q6J("ngIf", !!h.backdrop && h.openPanel),
                    e.xp6(1),
                    e.Q6J("ngClass", e.l5B(6, ko, h.openPanel, h.isResizable, h.fullActive, !h.enableScrollOnClose)),
                    e.xp6(1),
                    e.Q6J("ngIf", h.showHeader),
                    e.xp6(1),
                    e.Q6J("ngIf", !h.showHeader && !h.closeHidden),
                    e.xp6(2),
                    e.Q6J("ngIf", h.showHeader),
                    e.xp6(1),
                    e.Q6J("ngClass", e.kEZ(11, co, !h.panelTitle, !h.showHeader, h.maxHeight)))
                },
                dependencies: [Q.O5, Q.mk, Q.tP, n.uH, n.BN, at._L, ie.aw, ie.X$],
                styles: [".backdrop[_ngcontent-%COMP%]{position:fixed;width:100%;inset:0;height:100%;opacity:.7;z-index:999993;background-color:#fff}body.dark-theme   [_nghost-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#0b1217}body.light   [_nghost-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#fff}body.light[_ngcontent-%COMP%]   .backdrop[_ngcontent-%COMP%]{background-color:#fff}.close[_ngcontent-%COMP%]{z-index:999993;position:absolute;top:1rem;right:.625rem;padding:0}.close.left[_ngcontent-%COMP%]{position:absolute;left:1.25rem;right:auto}.close-container[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{z-index:999994}.panel-container[_ngcontent-%COMP%]{position:fixed;inset:0;width:100%;max-height:100%;height:100%;overflow:hidden;z-index:999993;padding:3.125rem 0 0;background-color:#f4f5f6;transform:translate(100%);transition:transform .4s ease-in-out}body.dark-theme   [_nghost-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#f4f5f6}@media (max-width: 1023px){.panel-container[_ngcontent-%COMP%]{background-color:#fff}body.dark-theme   [_nghost-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#0b1217}body.dark-theme[_ngcontent-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#0b1217}body.light   [_nghost-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#fff}body.light[_ngcontent-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#fff}}.panel-container.open[_ngcontent-%COMP%]{transform:translate(0);transition:transform .4s ease-in-out}@media (min-width: 1024px){.panel-container[_ngcontent-%COMP%]{inset:0 0 0 auto;width:34.25rem;overflow:hidden;z-index:999994;background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme[_ngcontent-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .panel-container[_ngcontent-%COMP%]{background-color:#f4f5f6}.panel-container.resizable[_ngcontent-%COMP%]{width:40%}.panel-container.resizable.full-width[_ngcontent-%COMP%]{width:90%}}.panel-container__header[_ngcontent-%COMP%]{padding:0 1.25rem;line-height:2.25rem}.panel-container__header[_ngcontent-%COMP%]   .page-subtitle[_ngcontent-%COMP%]{line-height:initial;margin-bottom:0;color:#818ea3}body.dark-theme   [_nghost-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle[_ngcontent-%COMP%]{color:#818ea3}.panel-container__header[_ngcontent-%COMP%]   .page-subtitle__white[_ngcontent-%COMP%]{color:#142028}body.dark-theme   [_nghost-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle__white[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle__white[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle__white[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .panel-container__header[_ngcontent-%COMP%]   .page-subtitle__white[_ngcontent-%COMP%]{color:#142028}.panel-container__header.with-title-mobile[_ngcontent-%COMP%]{padding-top:1.875rem!important}.panel-container__header.without-title[_ngcontent-%COMP%]{height:5rem}@media (min-width: 1024px){.panel-container__header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:24px}}.panel-container__body[_ngcontent-%COMP%]{width:100%;height:100%;overflow-y:auto}.panel-container__content.without-title[_ngcontent-%COMP%]{height:calc(100% - 80px)}.panel-container__content.full-height[_ngcontent-%COMP%]{height:100%}.panel-container__content.max-height[_ngcontent-%COMP%]{height:calc(100% - 87px)}.z-index-highest[_ngcontent-%COMP%]{z-index:999995!important}.steps[_ngcontent-%COMP%]{border-radius:.625rem;background-color:#e2e7ec;padding:.25rem;display:flex;flex-wrap:nowrap}body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]{background-color:#23323c}body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]{background-color:#e2e7ec}body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]{background-color:#e2e7ec}.steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;height:1.875rem;background:none;color:#818ea3}body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}.steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{background-color:#f4f5f6;color:#142028;border-radius:.375rem}body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{background-color:#3a4956}body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{background-color:#3a4956}body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{background-color:#f4f5f6}body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{color:#fff}body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{color:#142028}body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light[_ngcontent-%COMP%]   .steps[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{color:#142028}[_nghost-%COMP%]     .panel-content{height:100%;padding:0 1.25rem}.button-below[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{z-index:999993!important}"],
                changeDetection: 0
            }),
            d
        }
        )()
          , lo = (()=>{
            class d {
                constructor() {
                    this._defaultStrokeProps = {
                        width: 1,
                        backColor: "#CACEDB"
                    },
                    this.height = 100,
                    this.progressChanges = [],
                    this.value = 0,
                    this.maxValue = 100,
                    this.strokeProps = {
                        ...this._defaultStrokeProps
                    }
                }
                get heightWidth() {
                    return this.height + 5
                }
                get circleRadio() {
                    return this.height / 2
                }
                get viewBox() {
                    return `0 0 ${this.heightWidth} ${this.heightWidth}`
                }
                get progressColor() {
                    return this.value > this.maxValue ? this.progressChanges[this.progressChanges.length - 1]?.color ?? "#818ea3" : this.progressChanges.find(s=>s.minValue <= this.value && s.maxValue >= this.value)?.color ?? "#818ea3"
                }
                get fullStrokeProps() {
                    return {
                        ...this._defaultStrokeProps,
                        ...this.strokeProps
                    }
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-progress-circle"]],
                inputs: {
                    height: "height",
                    progressChanges: "progressChanges",
                    value: "value",
                    maxValue: "maxValue",
                    strokeProps: "strokeProps"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 3,
                vars: 12,
                consts: [["cx", "50%", "cy", "50%", "fill", "none"]],
                template: function(s, h) {
                    1 & s && (e.O4$(),
                    e.TgZ(0, "svg"),
                    e._UZ(1, "circle", 0)(2, "circle", 0),
                    e.qZA()),
                    2 & s && (e.uIk("width", h.heightWidth)("height", h.heightWidth)("viewBox", h.viewBox),
                    e.xp6(1),
                    e.uIk("r", h.circleRadio)("stroke", h.fullStrokeProps.backColor)("stroke-width", h.fullStrokeProps.width),
                    e.xp6(1),
                    e.uIk("stroke-dasharray", h.maxValue)("stroke-dashoffset", h.value > h.maxValue ? 0 : h.maxValue - h.value)("r", h.circleRadio)("stroke", h.progressColor)("stroke-width", h.fullStrokeProps.width)("pathLength", h.maxValue))
                },
                styles: ["svg[_ngcontent-%COMP%]{transform:rotate(-90deg)}"],
                changeDetection: 0
            }),
            d
        }
        )();
        const Jn = ["tabList"];
        function uo(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 5),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.scrollLeft())
                }),
                e.qZA()
            }
        }
        function Xt(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "button", 6),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.scrollRight())
                }),
                e.qZA()
            }
        }
        function vt(d, y) {
            1 & d && (e.TgZ(0, "span", 12),
            e._uU(1),
            e.ALo(2, "translate"),
            e.qZA()),
            2 & d && (e.xp6(1),
            e.Oqu(e.lcZ(2, 1, "pools_creator.new")))
        }
        function ho(d, y) {
            if (1 & d && e._UZ(0, "fa-icon", 13),
            2 & d) {
                const s = e.oxw(2).$implicit;
                e.Q6J("icon", s.faIcon)
            }
        }
        function go(d, y) {
            if (1 & d && e._UZ(0, "app-icon", 14),
            2 & d) {
                const s = e.oxw(2).$implicit;
                e.Q6J("name", s.customIcon)("width", 13)
            }
        }
        const po = function(d, y) {
            return {
                active: d,
                disabled: y
            }
        };
        function To(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "li"),
                e.YNc(1, vt, 3, 3, "span", 8),
                e.TgZ(2, "button", 9),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw().$implicit
                      , le = e.oxw();
                    return e.KtG(le.changeTab(E))
                }),
                e.ALo(3, "translate"),
                e.YNc(4, ho, 1, 1, "fa-icon", 10),
                e.YNc(5, go, 1, 2, "app-icon", 11),
                e._uU(6),
                e.ALo(7, "translate"),
                e.qZA()()
            }
            if (2 & d) {
                const s = e.oxw().$implicit
                  , h = e.oxw();
                let E;
                e.xp6(1),
                e.Q6J("ngIf", s.newTag),
                e.xp6(1),
                e.Q6J("ngClass", e.WLB(12, po, !!h.tabSelected && s.id === h.tabSelected.id, s.isDisabled))("disableTooltip", !s.tooltip)("ngbTooltip", e.lcZ(3, 8, null !== (E = s.tooltip) && void 0 !== E ? E : "")),
                e.uIk("aria-selected", !!h.tabSelected && s.id === h.tabSelected.id),
                e.xp6(2),
                e.Q6J("ngIf", s.faIcon),
                e.xp6(1),
                e.Q6J("ngIf", s.customIcon),
                e.xp6(1),
                e.hij(" ", e.lcZ(7, 10, s.name), " ")
            }
        }
        function Eo(d, y) {
            if (1 & d && (e.ynx(0),
            e.YNc(1, To, 8, 15, "li", 7),
            e.BQk()),
            2 & d) {
                const s = y.$implicit;
                e.xp6(1),
                e.Q6J("ngIf", !s.isHidden)
            }
        }
        let mo = (()=>{
            class d {
                onResize() {
                    this.recalculateSlider()
                }
                set tabsOptions(s) {
                    this._tabsOptions = [...s],
                    this._setCustomTabSelected()
                }
                get tabsOptions() {
                    return this._tabsOptions
                }
                set defaultSelectedTab(s) {
                    this._tabsOptions && this._tabsOptions.length > 0 && this.tabSelected && s !== this.tabSelected.id && (this._defaultSelectedTab = s,
                    this._setCustomTabSelected())
                }
                get defaultSelectedTab() {
                    return this._defaultSelectedTab
                }
                constructor(s) {
                    this._cdRef = s,
                    this.tabList = null,
                    this.elementsListCurrentScroll = 0,
                    this.elementsListMaxScroll = 0,
                    this._tabsOptions = [],
                    this.tabSelected = null,
                    this._defaultSelectedTab = null,
                    this.tabIdSelected = new e.vpe
                }
                ngAfterViewInit() {
                    this.recalculateSlider()
                }
                _setCustomTabSelected() {
                    if (this.defaultSelectedTab) {
                        const s = this.tabsOptions.find(h=>h.id === this.defaultSelectedTab && !h?.isDisabled && !h?.isHidden);
                        this.tabSelected = s ?? this._tabsOptions[0],
                        this.changeTab(this.tabSelected, !0)
                    } else
                        this.tabSelected = this._tabsOptions.find(s=>s.selected) ?? this._tabsOptions[0];
                    this._cdRef.detectChanges()
                }
                changeTab(s, h=!1) {
                    s.isDisabled || this.tabSelected && s.id === this.tabSelected.id && !h || (this.tabSelected = s,
                    this.tabIdSelected.emit(s.id),
                    this._cdRef.detectChanges())
                }
                scrollLeft() {
                    this.tabList && (this.tabList?.nativeElement.scrollTo({
                        left: this.elementsListCurrentScroll - 150,
                        behavior: "smooth"
                    }),
                    this.elementsListCurrentScroll = this.elementsListCurrentScroll > 0 ? this.elementsListCurrentScroll - 150 : 0,
                    this._cdRef.detectChanges())
                }
                scrollRight() {
                    this.tabList && (this.tabList.nativeElement.scrollTo({
                        left: this.elementsListCurrentScroll + 150,
                        behavior: "smooth"
                    }),
                    this.elementsListCurrentScroll = this.elementsListCurrentScroll + 150 < this.elementsListMaxScroll ? this.elementsListCurrentScroll + 150 : this.elementsListMaxScroll,
                    this._cdRef.detectChanges())
                }
                recalculateSlider() {
                    if (this.tabList) {
                        const s = this.tabList.nativeElement;
                        this.elementsListCurrentScroll = s.scrollLeft,
                        this.elementsListMaxScroll = s.scrollWidth - s.clientWidth,
                        this._cdRef.detectChanges()
                    }
                }
                trackByTab(s, h) {
                    return h.id
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-tabs"]],
                viewQuery: function(s, h) {
                    if (1 & s && e.Gf(Jn, 7),
                    2 & s) {
                        let E;
                        e.iGM(E = e.CRH()) && (h.tabList = E.first)
                    }
                },
                hostBindings: function(s, h) {
                    1 & s && e.NdJ("resize", function() {
                        return h.onResize()
                    }, !1, e.Jf7)
                },
                inputs: {
                    tabsOptions: "tabsOptions",
                    defaultSelectedTab: "defaultSelectedTab"
                },
                outputs: {
                    tabIdSelected: "tabIdSelected"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 5,
                vars: 4,
                consts: [["role", "tablist", 3, "scroll"], ["tabList", ""], ["class", "arrow-scroll-left", 3, "click", 4, "ngIf"], ["class", "arrow-scroll-right", 3, "click", 4, "ngIf"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "arrow-scroll-left", 3, "click"], [1, "arrow-scroll-right", 3, "click"], [4, "ngIf"], ["class", "badge bg-info new-tag", 4, "ngIf"], ["placement", "auto", "role", "tab", 3, "ngClass", "disableTooltip", "ngbTooltip", "click"], [3, "icon", 4, "ngIf"], [3, "name", "width", 4, "ngIf"], [1, "badge", "bg-info", "new-tag"], [3, "icon"], [3, "name", "width"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "ul", 0, 1),
                    e.NdJ("scroll", function() {
                        return h.recalculateSlider()
                    }),
                    e.YNc(2, uo, 1, 0, "button", 2),
                    e.YNc(3, Xt, 1, 0, "button", 3),
                    e.YNc(4, Eo, 2, 1, "ng-container", 4),
                    e.qZA()),
                    2 & s && (e.xp6(2),
                    e.Q6J("ngIf", h.elementsListCurrentScroll > 0),
                    e.xp6(1),
                    e.Q6J("ngIf", h.elementsListCurrentScroll < h.elementsListMaxScroll),
                    e.xp6(1),
                    e.Q6J("ngForOf", h.tabsOptions)("ngForTrackBy", h.trackByTab))
                },
                dependencies: [Q.O5, Q.ax, Q.mk, at._L, n.uH, n.BN, ft.lQ, ie.aw, ie.X$],
                styles: ["[_nghost-%COMP%]{background-color:#e2e7ec;border-radius:.5rem;flex-wrap:nowrap;display:flex;align-items:center;overflow:auto;scroll-behavior:smooth;position:relative}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]{background-color:#23323c}body.dark-theme   [_nghost-%COMP%]{background-color:#23323c}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]{background-color:#e2e7ec}body.light   [_nghost-%COMP%]{background-color:#e2e7ec}[_nghost-%COMP%]   .arrow-scroll-left[_ngcontent-%COMP%]{position:absolute;left:0;width:2.5rem;background:linear-gradient(90deg,#142028 12.86%,rgba(20,32,40,0) 87.14%);height:100%;border:none}[_nghost-%COMP%]   .arrow-scroll-left[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#142028;font-size:13px}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   .arrow-scroll-left[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#fff}body.dark-theme   [_nghost-%COMP%]   .arrow-scroll-left[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   .arrow-scroll-left[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#142028}body.light   [_nghost-%COMP%]   .arrow-scroll-left[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#142028}[_nghost-%COMP%]   .arrow-scroll-right[_ngcontent-%COMP%]{position:absolute;right:0;border:none;width:2.5rem;background:linear-gradient(270deg,#142028 12.86%,rgba(20,32,40,0) 87.14%);height:100%}[_nghost-%COMP%]   .arrow-scroll-right[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#142028;font-size:13px}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   .arrow-scroll-right[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#fff}body.dark-theme   [_nghost-%COMP%]   .arrow-scroll-right[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   .arrow-scroll-right[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#142028}body.light   [_nghost-%COMP%]   .arrow-scroll-right[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#142028}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;margin:0;-webkit-margin-before:0;margin-block-start:0;-webkit-margin-after:0;margin-block-end:0;-webkit-padding-start:0;padding-inline-start:0;display:flex;align-items:center;flex-wrap:nowrap;overflow:auto;scroll-behavior:smooth;overflow-x:scroll;overflow-y:hidden;max-width:100%;scrollbar-width:none}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]::-webkit-scrollbar{display:none;height:0}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{position:relative}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .new-tag[_ngcontent-%COMP%]{padding:0 .25rem;font-size:.5rem;position:absolute;right:0;left:inherit!important;top:.25rem}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;padding:.56875rem .65rem;margin:.1875rem;background-color:transparent;border-radius:.8125rem;font-family:Poppins,Roboto,sans-serif;font-style:normal;-moz-osx-font-smoothing:grayscale;font-weight:400;line-height:16px;color:#818ea3;font-size:13px;white-space:nowrap}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#818ea3}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{margin-right:.25rem}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{border-radius:.5rem;background-color:#f4f5f6;color:#142028}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{color:#fff}body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{color:#142028}body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{color:#142028}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button.disabled[_ngcontent-%COMP%]{opacity:.5;cursor:default}"],
                changeDetection: 0
            }),
            d
        }
        )();
        var yt = m(97185);
        function Lo(d, y) {
            1 & d && e._UZ(0, "fa-icon", 10)
        }
        const qn = function() {
            return ["fal", "times"]
        };
        function Jo(d, y) {
            1 & d && e._UZ(0, "fa-icon", 11),
            2 & d && e.Q6J("icon", e.DdM(1, qn))
        }
        function fo(d, y) {
            if (1 & d && (e.TgZ(0, "div"),
            e._uU(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.Tol(s.options.titleClass),
                e.uIk("aria-label", s.title),
                e.xp6(1),
                e.hij(" ", s.title, " ")
            }
        }
        function _o(d, y) {
            if (1 & d && e._UZ(0, "div", 12),
            2 & d) {
                const s = e.oxw();
                e.Tol(s.options.messageClass),
                e.Q6J("innerHTML", s.message, e.oJD)
            }
        }
        function gt(d, y) {
            if (1 & d && (e.TgZ(0, "div", 13),
            e._uU(1),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.Tol(s.options.messageClass),
                e.uIk("aria-label", s.message),
                e.xp6(1),
                e.hij(" ", s.message, " ")
            }
        }
        function Qn(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "a", 14),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.remove())
                }),
                e._UZ(1, "fa-icon", 11),
                e.qZA()
            }
            2 & d && (e.xp6(1),
            e.Q6J("icon", e.DdM(1, qn)))
        }
        function Co(d, y) {
            if (1 & d && (e.TgZ(0, "div"),
            e._UZ(1, "div", 15),
            e.qZA()),
            2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Udp("width", s.width + "%")
            }
        }
        const Io = function(d, y) {
            return {
                success: d,
                error: y
            }
        };
        let bo = (()=>{
            class d extends yt.FN {
                constructor(s, h) {
                    super(s, h)
                }
                action(s) {
                    return s.stopPropagation(),
                    this.toastPackage.triggerAction(),
                    !1
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(yt._W),e.Y36(yt.PR))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-toast-alert"]],
                standalone: !0,
                features: [e.qOj, e.jDz],
                decls: 10,
                vars: 11,
                consts: [[1, "message-container__info", 3, "ngClass"], [1, "type-alert-icon"], ["icon", "check", 4, "ngIf"], [3, "icon", 4, "ngIf"], [1, "text-container"], [3, "class", 4, "ngIf"], ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"], ["role", "alert", 3, "class", 4, "ngIf"], ["class", "close-btn", 3, "click", 4, "ngIf"], [4, "ngIf"], ["icon", "check"], [3, "icon"], ["role", "alert", 3, "innerHTML"], ["role", "alert"], [1, "close-btn", 3, "click"], [1, "toast-progress"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "div", 0)(1, "div", 1),
                    e.YNc(2, Lo, 1, 0, "fa-icon", 2),
                    e.YNc(3, Jo, 1, 2, "fa-icon", 3),
                    e.qZA(),
                    e.TgZ(4, "div", 4),
                    e.YNc(5, fo, 2, 4, "div", 5),
                    e.YNc(6, _o, 1, 3, "div", 6),
                    e.YNc(7, gt, 2, 4, "div", 7),
                    e.qZA(),
                    e.YNc(8, Qn, 2, 2, "a", 8),
                    e.YNc(9, Co, 2, 2, "div", 9),
                    e.qZA()),
                    2 & s && (e.Q6J("ngClass", e.WLB(8, Io, "toast-success" === h.toastPackage.toastType, "toast-error" === h.toastPackage.toastType)),
                    e.xp6(2),
                    e.Q6J("ngIf", "toast-success" === h.toastPackage.toastType),
                    e.xp6(1),
                    e.Q6J("ngIf", "toast-error" === h.toastPackage.toastType),
                    e.xp6(2),
                    e.Q6J("ngIf", h.title),
                    e.xp6(1),
                    e.Q6J("ngIf", h.message && (null == h.options ? null : h.options.enableHtml)),
                    e.xp6(1),
                    e.Q6J("ngIf", h.message && !(null != h.options && h.options.enableHtml)),
                    e.xp6(1),
                    e.Q6J("ngIf", null == h.options ? null : h.options.closeButton),
                    e.xp6(1),
                    e.Q6J("ngIf", null == h.options ? null : h.options.progressBar))
                },
                dependencies: [Q.mk, Q.O5, n.uH, n.BN],
                styles: [".message-container__info[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.message-container__info[_ngcontent-%COMP%]   .type-alert-icon[_ngcontent-%COMP%]{margin-right:.5rem;font-size:20px}.message-container__info[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]{flex:1;min-width:18.4375rem}@media (max-width: 450px){.message-container__info[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]{min-width:16.25rem}}.message-container__info[_ngcontent-%COMP%]   .close-btn[_ngcontent-%COMP%]{color:#818ea3;font-size:16px}.message-container__info.success[_ngcontent-%COMP%]   .type-alert-icon[_ngcontent-%COMP%]{color:#17c671}.message-container__info.error[_ngcontent-%COMP%]   .type-alert-icon[_ngcontent-%COMP%]{color:#ea3943}"],
                changeDetection: 0
            }),
            d
        }
        )();
        var Do = m(11481);
        const So = ["videoContainer"];
        function wt(d, y) {
            1 & d && e._UZ(0, "fa-icon", 5)
        }
        function Mo(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "img", 6),
                e.NdJ("error", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.loadFallbackImage())
                }),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("src", s.image, e.LSH)
            }
        }
        function Uo(d, y) {
            if (1 & d && e._UZ(0, "iframe", 7),
            2 & d) {
                const s = e.oxw();
                e.Q6J("height", s.height)("src", s.url, e.uOi)
            }
        }
        let xn = (()=>{
            class d extends T.K9 {
                onResize() {
                    this._setVideoHeight()
                }
                constructor(s, h) {
                    super(),
                    this._sanitizer = s,
                    this._cdRef = h,
                    this.image = "",
                    this.link = "",
                    this.url = "",
                    this.loading = !1,
                    this.showPreviewImage = !0,
                    this._autoplayValue = ""
                }
                ngOnInit() {
                    this.loading = !0,
                    this._initYoutubeLoader(),
                    this._setVideoHeight()
                }
                onDestroy() {}
                _setVideoHeight() {
                    this.height || (this.height = this.videoContainer.nativeElement.clientWidth * (51 / 86) + ""),
                    this.loading && (this.loading = !1),
                    this._cdRef.detectChanges()
                }
                launchIframe() {
                    this.loading = !0,
                    this.showPreviewImage = !1,
                    this._autoplayValue = "?autoplay=1",
                    this.url = this._sanitizer.bypassSecurityTrustResourceUrl(this.link + this._autoplayValue),
                    this._cdRef.detectChanges(),
                    this._setVideoHeight()
                }
                loadFallbackImage() {
                    this.image = "assets/img/banner_academy_youtube.jpeg",
                    this._cdRef.detectChanges()
                }
                _initYoutubeLoader() {
                    this._autoplayValue = this.image || !this.showPreviewImage ? "?autoplay=0" : "?autoplay=1",
                    this.url = this._sanitizer.bypassSecurityTrustResourceUrl(this.link + this._autoplayValue),
                    this._cdRef.detectChanges()
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(Do.H7),e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-youtube-embedded"]],
                viewQuery: function(s, h) {
                    if (1 & s && e.Gf(So, 5),
                    2 & s) {
                        let E;
                        e.iGM(E = e.CRH()) && (h.videoContainer = E.first)
                    }
                },
                hostBindings: function(s, h) {
                    1 & s && e.NdJ("resize", function() {
                        return h.onResize()
                    }, !1, e.Jf7)
                },
                inputs: {
                    image: "image",
                    link: "link",
                    height: "height"
                },
                standalone: !0,
                features: [e.qOj, e.jDz],
                decls: 5,
                vars: 5,
                consts: [[3, "click"], ["videoContainer", ""], ["icon", "play", "class", "player", 4, "ngIf"], ["alt", "youtube video thumbnail", 3, "src", "error", 4, "ngIf"], ["width", "100%", "title", "DEXTools Academy", "frameborder", "0", "allow", "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture", "allowfullscreen", "", 3, "height", "src", 4, "ngIf"], ["icon", "play", 1, "player"], ["alt", "youtube video thumbnail", 3, "src", "error"], ["width", "100%", "title", "DEXTools Academy", "frameborder", "0", "allow", "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture", "allowfullscreen", "", 3, "height", "src"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "div", 0, 1),
                    e.NdJ("click", function() {
                        return h.launchIframe()
                    }),
                    e.YNc(2, wt, 1, 0, "fa-icon", 2),
                    e.YNc(3, Mo, 1, 1, "img", 3),
                    e.YNc(4, Uo, 1, 2, "iframe", 4),
                    e.qZA()),
                    2 & s && (e.Udp("height", h.height, "px"),
                    e.xp6(2),
                    e.Q6J("ngIf", h.showPreviewImage),
                    e.xp6(1),
                    e.Q6J("ngIf", h.showPreviewImage),
                    e.xp6(1),
                    e.Q6J("ngIf", !h.loading && !h.showPreviewImage))
                },
                dependencies: [Q.O5, n.uH, n.BN],
                styles: ["div[_ngcontent-%COMP%]{position:relative;width:100%;cursor:pointer}div[_ngcontent-%COMP%]   .youtube-thumbnail[_ngcontent-%COMP%]{height:100%;position:absolute;width:100%;z-index:2}div[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{border-radius:.9375rem}div[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%}div[_ngcontent-%COMP%]   .player[_ngcontent-%COMP%]{border-radius:3.75rem;background-color:#c00;color:#fff;width:3.75rem;height:3.75rem;font-size:20px;text-align:center;line-height:3.75rem;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);opacity:.7}div[_ngcontent-%COMP%]:hover   .player[_ngcontent-%COMP%]{opacity:1}"],
                changeDetection: 0
            }),
            d
        }
        )();
        function Ro(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "a", 2),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.showVideoPopup())
                }),
                e._UZ(1, "img", 3),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.xp6(1),
                e.Q6J("src", s.buttonImage, e.LSH)
            }
        }
        const vo = function() {
            return ["fal", "times"]
        };
        function No(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.ynx(0),
                e.TgZ(1, "div", 4)(2, "button", 5),
                e.NdJ("click", function() {
                    e.CHM(s);
                    const E = e.oxw();
                    return e.KtG(E.showVideoPopup())
                }),
                e._UZ(3, "fa-icon", 6),
                e.qZA(),
                e.TgZ(4, "h5"),
                e._uU(5),
                e.ALo(6, "translate"),
                e.qZA(),
                e.TgZ(7, "p"),
                e._uU(8),
                e.ALo(9, "translate"),
                e.qZA(),
                e._UZ(10, "app-youtube-embedded", 7),
                e.qZA(),
                e.BQk()
            }
            if (2 & d) {
                const s = e.oxw();
                e.xp6(3),
                e.Q6J("icon", e.DdM(9, vo)),
                e.xp6(2),
                e.Oqu(e.lcZ(6, 5, "video.tooltip_title")),
                e.xp6(3),
                e.Oqu(e.lcZ(9, 7, "video.tooltip_description")),
                e.xp6(2),
                e.Q6J("link", s.link)("image", s.videoPreviewImage)
            }
        }
        let M = (()=>{
            class d {
                constructor(s) {
                    this._cdRef = s,
                    this.link = "",
                    this.buttonImage = "",
                    this.videoPreviewImage = "",
                    this.showButton = !1,
                    this.showModal = !1,
                    this.modalClosed = new e.vpe
                }
                showVideoPopup() {
                    this.showModal = !this.showModal,
                    this.showButton || this.modalClosed.emit(this.showModal),
                    this._cdRef.detectChanges()
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-video-button"]],
                inputs: {
                    link: "link",
                    buttonImage: "buttonImage",
                    videoPreviewImage: "videoPreviewImage",
                    showButton: "showButton",
                    showModal: "showModal"
                },
                outputs: {
                    modalClosed: "modalClosed"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 2,
                vars: 2,
                consts: [["class", "video-button", "href", "javascript:", 3, "click", 4, "ngIf"], [4, "ngIf"], ["href", "javascript:", 1, "video-button", 3, "click"], ["alt", "Dext Academy", 3, "src"], [1, "video-container"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["ngbTooltip", "Close", "placement", "left", 3, "icon"], [3, "link", "image"]],
                template: function(s, h) {
                    1 & s && (e.YNc(0, Ro, 2, 1, "a", 0),
                    e.YNc(1, No, 11, 10, "ng-container", 1)),
                    2 & s && (e.Q6J("ngIf", h.showButton && !h.showModal),
                    e.xp6(1),
                    e.Q6J("ngIf", !!h.showModal))
                },
                dependencies: [Q.O5, n.uH, n.BN, at._L, xn, ie.aw, ie.X$],
                styles: [".video-button[_ngcontent-%COMP%]{position:fixed;bottom:.9375rem;left:1.25rem;cursor:pointer;z-index:99999;border-radius:3.75rem;box-shadow:0 .5rem 3.125rem -.4375rem #000;overflow:hidden;width:3.75rem;height:3.75rem}.video-button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:3.75rem;height:3.75rem}@media (max-width: 1023px){.video-button[_ngcontent-%COMP%], .video-button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:2.625rem;height:2.625rem}}@media (max-width: 599px){.video-button[_ngcontent-%COMP%]{bottom:.9375rem;left:.625rem}}.video-container[_ngcontent-%COMP%]{background-color:#fff!important;position:fixed;bottom:1.25rem;left:1.25rem;z-index:99999;width:22.5rem;padding:1.25rem;border-radius:.9375rem}body.dark-theme   [_nghost-%COMP%]   .video-container[_ngcontent-%COMP%]{background-color:#0b1217!important}body.dark-theme[_ngcontent-%COMP%]   .video-container[_ngcontent-%COMP%]{background-color:#0b1217!important}body.light   [_nghost-%COMP%]   .video-container[_ngcontent-%COMP%]{background-color:#fff!important}body.light[_ngcontent-%COMP%]   .video-container[_ngcontent-%COMP%]{background-color:#fff!important}.video-container[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{text-transform:uppercase;font-size:16px;line-height:1.5rem}.video-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:13px;line-height:1.21875rem;margin-bottom:.9375rem}.video-container[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{position:absolute;right:.5rem;top:.5rem}@media (max-width: 599px){.video-container[_ngcontent-%COMP%]{bottom:.625rem;left:.625rem}}@media (max-width: 380px){.video-container[_ngcontent-%COMP%]{width:calc(100% - 20px)}}body.dark-theme   [_nghost-%COMP%]     .video-container .close fa-icon{background-color:#142028}body.dark-theme   [_nghost-%COMP%]     .video-container .close:hover fa-icon{background-color:#23323c}"],
                changeDetection: 0
            }),
            d
        }
        )();
        const G = function() {
            return ["fal", "times"]
        }
          , l = function() {
            return ["fab", "telegram"]
        }
          , v = function() {
            return ["fab", "discord"]
        }
          , I = function() {
            return ["fab", "twitter"]
        }
          , K = function() {
            return ["fab", "medium"]
        }
          , Ne = function() {
            return ["fab", "instagram"]
        }
          , rt = function() {
            return ["fab", "tiktok"]
        };
        let pt = (()=>{
            class d {
                constructor(s) {
                    this.modal = s,
                    this.link = ""
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(at.Kz))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-video-yt-modal"]],
                inputs: {
                    link: "link"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 36,
                vars: 30,
                consts: [[1, "modal-header"], [1, "d-block", "title-modal"], [1, "d-block", "subtitle-modal"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["ngbTooltip", "Close", "placement", "left", 3, "icon"], [1, "modal-body", "text-center"], [1, "video-container__video"], ["image", "assets/img/video-home.jpg", 3, "link"], [1, "video-container__description"], [1, "title-description"], [1, "list-minutes", 3, "innerHTML"], [1, "modal-footer"], [1, "d-block"], [1, "nav", "social-links"], ["target", "_blank", "rel", "noopener", "href", "https://t.me/DEXToolsCommunity"], [1, "icon-table", "me-1", 3, "icon"], ["target", "_blank", "rel", "noopener", "href", "https://discord.com/invite/wVanCNraEh"], ["target", "_blank", "rel", "noopener", "href", "https://twitter.com/DEXToolsApp"], ["target", "_blank", "rel", "noopener", "href", "https://dextools.medium.com"], ["target", "_blank", "rel", "noopener", "href", "https://www.instagram.com/dextoolsofficial/"], ["target", "_blank", "rel", "noopener", "href", "https://www.tiktok.com/@dextools"], [1, "icon-table", 3, "icon"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "div", 0)(1, "div")(2, "h5", 1),
                    e._uU(3),
                    e.ALo(4, "translate"),
                    e.qZA(),
                    e.TgZ(5, "p", 2),
                    e._uU(6),
                    e.ALo(7, "translate"),
                    e.qZA()(),
                    e.TgZ(8, "button", 3),
                    e.NdJ("click", function() {
                        return h.modal.close("Close click")
                    }),
                    e._UZ(9, "fa-icon", 4),
                    e.qZA()(),
                    e.TgZ(10, "div", 5)(11, "div", 6),
                    e._UZ(12, "app-youtube-embedded", 7),
                    e.qZA(),
                    e.TgZ(13, "div", 8)(14, "div", 9),
                    e._uU(15),
                    e.ALo(16, "translate"),
                    e.qZA(),
                    e._UZ(17, "ul", 10),
                    e.ALo(18, "translate"),
                    e.qZA()(),
                    e.TgZ(19, "div", 11)(20, "p", 12),
                    e._uU(21),
                    e.ALo(22, "translate"),
                    e.qZA(),
                    e.TgZ(23, "div", 13)(24, "a", 14),
                    e._UZ(25, "fa-icon", 15),
                    e.qZA(),
                    e.TgZ(26, "a", 16),
                    e._UZ(27, "fa-icon", 15),
                    e.qZA(),
                    e.TgZ(28, "a", 17),
                    e._UZ(29, "fa-icon", 15),
                    e.qZA(),
                    e.TgZ(30, "a", 18),
                    e._UZ(31, "fa-icon", 15),
                    e.qZA(),
                    e.TgZ(32, "a", 19),
                    e._UZ(33, "fa-icon", 15),
                    e.qZA(),
                    e.TgZ(34, "a", 20),
                    e._UZ(35, "fa-icon", 21),
                    e.qZA()()()),
                    2 & s && (e.xp6(3),
                    e.Oqu(e.lcZ(4, 13, "video.modal_title")),
                    e.xp6(3),
                    e.Oqu(e.lcZ(7, 15, "video.modal_subtitle")),
                    e.xp6(3),
                    e.Q6J("icon", e.DdM(23, G)),
                    e.xp6(3),
                    e.Q6J("link", h.link),
                    e.xp6(3),
                    e.Oqu(e.lcZ(16, 17, "video.modal_description_title")),
                    e.xp6(2),
                    e.Q6J("innerHTML", e.lcZ(18, 19, "video.modal_description_content"), e.oJD),
                    e.xp6(4),
                    e.Oqu(e.lcZ(22, 21, "video.modal_footer")),
                    e.xp6(4),
                    e.Q6J("icon", e.DdM(24, l)),
                    e.xp6(2),
                    e.Q6J("icon", e.DdM(25, v)),
                    e.xp6(2),
                    e.Q6J("icon", e.DdM(26, I)),
                    e.xp6(2),
                    e.Q6J("icon", e.DdM(27, K)),
                    e.xp6(2),
                    e.Q6J("icon", e.DdM(28, Ne)),
                    e.xp6(2),
                    e.Q6J("icon", e.DdM(29, rt)))
                },
                dependencies: [n.uH, n.BN, at._L, xn, ie.aw, ie.X$],
                styles: ["@media (min-width: 1024px){.modal-dialog[_ngcontent-%COMP%]{max-width:30.625rem}.modal-body[_ngcontent-%COMP%]{padding-left:1.875rem;padding-right:1.875rem}}.modal-header[_ngcontent-%COMP%]{flex-flow:row;align-items:flex-start}.modal-body[_ngcontent-%COMP%]{padding-bottom:.3125rem;padding-top:.3125rem}.modal-footer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.modal-footer[_ngcontent-%COMP%]   .social-links[_ngcontent-%COMP%]{display:flex;align-items:center;text-align:center}.modal-footer[_ngcontent-%COMP%]   .social-links[_ngcontent-%COMP%]   .icon-table[_ngcontent-%COMP%]{color:#cacedb;font-size:1.125rem;padding:0 .4rem;vertical-align:text-top}.modal-footer[_ngcontent-%COMP%]   .social-links[_ngcontent-%COMP%]   .icon-table[_ngcontent-%COMP%]:hover{color:#cacedb}.title-modal[_ngcontent-%COMP%]{font-size:20px;line-height:1.875rem;text-transform:uppercase}.subtitle-modal[_ngcontent-%COMP%]{font-size:13px;margin:0}.title-description[_ngcontent-%COMP%]{font-size:16px;line-height:1.5rem;text-transform:uppercase;margin-top:.5rem;margin-bottom:.25rem;text-align:left;color:#142028}body.dark-theme   [_nghost-%COMP%]   .title-description[_ngcontent-%COMP%]{color:#fff}body.dark-theme[_ngcontent-%COMP%]   .title-description[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   .title-description[_ngcontent-%COMP%]{color:#142028}body.light[_ngcontent-%COMP%]   .title-description[_ngcontent-%COMP%]{color:#142028}  app-youtube-embedded iframe{border-radius:.9375rem}  .list-minutes{padding:0;text-align:left;font-size:13px;line-height:1.21875rem;list-style:none;color:#142028}body.dark-theme   [_nghost-%COMP%]     .list-minutes{color:#fff}body.dark-theme[_ngcontent-%COMP%]     .list-minutes{color:#fff}body.light   [_nghost-%COMP%]     .list-minutes{color:#142028}body.light[_ngcontent-%COMP%]     .list-minutes{color:#142028}  .list-minutes li{list-style-position:inside}body.dark-theme   [_nghost-%COMP%]     .social-links .icon-table{color:#fff}body.dark-theme   [_nghost-%COMP%]     .social-links .icon-table:hover{color:#fff}"],
                changeDetection: 0
            }),
            d
        }
        )();
        var yn = m(78372)
          , jn = m(4326)
          , Et = m(24006);
        function Po(d, y) {
            if (1 & d && (e.ynx(0),
            e.TgZ(1, "div", 6)(2, "span", 7),
            e._uU(3),
            e.ALo(4, "appSafe"),
            e.qZA(),
            e.GkF(5, 8),
            e.qZA(),
            e.BQk()),
            2 & d) {
                const s = e.oxw()
                  , h = e.MAs(15);
                e.xp6(3),
                e.Oqu(e.lcZ(4, 2, s.symbolLeft)),
                e.xp6(2),
                e.Q6J("ngTemplateOutlet", h)
            }
        }
        function Oo(d, y) {
            if (1 & d && (e.ynx(0),
            e.TgZ(1, "div", 9),
            e.GkF(2, 8),
            e.TgZ(3, "span", 10),
            e._uU(4),
            e.ALo(5, "appSafe"),
            e.qZA()(),
            e.BQk()),
            2 & d) {
                const s = e.oxw()
                  , h = e.MAs(15);
                e.xp6(2),
                e.Q6J("ngTemplateOutlet", h),
                e.xp6(2),
                e.Oqu(e.lcZ(5, 2, s.symbolRight))
            }
        }
        function qo(d, y) {
            if (1 & d && (e.ynx(0),
            e.TgZ(1, "div", 6)(2, "span", 7),
            e._uU(3),
            e.ALo(4, "appSafe"),
            e.qZA(),
            e.GkF(5, 8),
            e.qZA(),
            e.BQk()),
            2 & d) {
                const s = e.oxw()
                  , h = e.MAs(17);
                e.xp6(3),
                e.Oqu(e.lcZ(4, 2, s.symbolLeft)),
                e.xp6(2),
                e.Q6J("ngTemplateOutlet", h)
            }
        }
        function Qo(d, y) {
            if (1 & d && (e.ynx(0),
            e.TgZ(1, "div", 9),
            e.GkF(2, 8),
            e.TgZ(3, "span", 10),
            e._uU(4),
            e.ALo(5, "appSafe"),
            e.qZA()(),
            e.BQk()),
            2 & d) {
                const s = e.oxw()
                  , h = e.MAs(17);
                e.xp6(2),
                e.Q6J("ngTemplateOutlet", h),
                e.xp6(2),
                e.Oqu(e.lcZ(5, 2, s.symbolRight))
            }
        }
        function jo(d, y) {
            1 & d && (e.TgZ(0, "div")(1, "span", 11),
            e._uU(2),
            e.ALo(3, "translate"),
            e.qZA()()),
            2 & d && (e.xp6(2),
            e.Oqu(e.lcZ(3, 1, "amount_filter.min_max_warning")))
        }
        function Xo(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "input", 12),
                e.NdJ("ngModelChange", function(E) {
                    e.CHM(s);
                    const le = e.oxw();
                    return e.KtG(le.minValue = E)
                })("keyup", function(E) {
                    e.CHM(s);
                    const le = e.oxw();
                    return e.KtG(le.onInputChange$.next(E))
                }),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("ngModel", s.minValue)
            }
        }
        function ea(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.TgZ(0, "input", 13),
                e.NdJ("ngModelChange", function(E) {
                    e.CHM(s);
                    const le = e.oxw();
                    return e.KtG(le.maxValue = E)
                })("keyup", function(E) {
                    e.CHM(s);
                    const le = e.oxw();
                    return e.KtG(le.onInputChange$.next(E))
                }),
                e.qZA()
            }
            if (2 & d) {
                const s = e.oxw();
                e.Q6J("ngModel", s.maxValue)
            }
        }
        let ta = (()=>{
            class d extends T.K9 {
                constructor(s) {
                    super(),
                    this._cdRef = s,
                    this.isLoading = !1,
                    this.symbolLeft = null,
                    this.symbolRight = null,
                    this.defaultAmountFilter = null,
                    this.filterApplied = new e.vpe,
                    this.minValue = null,
                    this.maxValue = null,
                    this.onInputChange$ = new qt.x,
                    this.isMinMaxError = !1
                }
                ngAfterViewInit() {
                    this.defaultAmountFilter && (this.minValue = this.defaultAmountFilter.min,
                    this.maxValue = this.defaultAmountFilter.max,
                    this._cdRef.detectChanges()),
                    this.onInputChange$.pipe((0,
                    T.sL)(this), (0,
                    yn.b)(200), (0,
                    jn.g)(200)).subscribe(()=>{
                        this.isMinMaxError = !!(null !== this.maxValue && this.minValue && this.minValue > this.maxValue),
                        this._cdRef.detectChanges()
                    }
                    )
                }
                applyFilter() {
                    this.isMinMaxError || this.filterApplied.emit({
                        min: this.minValue,
                        max: this.maxValue
                    })
                }
                clearFilter() {
                    this.minValue = null,
                    this.maxValue = null,
                    this.applyFilter()
                }
                onDestroy() {}
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-amount-filter"]],
                inputs: {
                    isLoading: "isLoading",
                    symbolLeft: "symbolLeft",
                    symbolRight: "symbolRight",
                    defaultAmountFilter: "defaultAmountFilter"
                },
                outputs: {
                    filterApplied: "filterApplied"
                },
                standalone: !0,
                features: [e.qOj, e.jDz],
                decls: 18,
                vars: 12,
                consts: [[4, "ngIf"], [1, "buttons-container"], [1, "save", 3, "disabled", "click"], [1, "clear", 3, "click"], ["inputMin", ""], ["inputMax", ""], [1, "symbol-left-container"], [1, "symbol-left"], [3, "ngTemplateOutlet"], [1, "symbol-right-container"], [1, "symbol-right"], [1, "min-max-error"], ["placeholder", "Min", "type", "number", "appRestrictInput", "^[0-9.]*$", "maxlength", "14", 3, "ngModel", "ngModelChange", "keyup"], ["placeholder", "Max", "type", "number", "appRestrictInput", "^[0-9.]*$", "maxlength", "14", 3, "ngModel", "ngModelChange", "keyup"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "div"),
                    e.YNc(1, Po, 6, 4, "ng-container", 0),
                    e.YNc(2, Oo, 6, 4, "ng-container", 0),
                    e.qZA(),
                    e.TgZ(3, "div"),
                    e.YNc(4, qo, 6, 4, "ng-container", 0),
                    e.YNc(5, Qo, 6, 4, "ng-container", 0),
                    e.qZA(),
                    e.YNc(6, jo, 4, 3, "div", 0),
                    e.TgZ(7, "div", 1)(8, "button", 2),
                    e.NdJ("click", function() {
                        return h.applyFilter()
                    }),
                    e._uU(9),
                    e.ALo(10, "translate"),
                    e.qZA(),
                    e.TgZ(11, "button", 3),
                    e.NdJ("click", function() {
                        return h.clearFilter()
                    }),
                    e._uU(12),
                    e.ALo(13, "translate"),
                    e.qZA()(),
                    e.YNc(14, Xo, 1, 1, "ng-template", null, 4, e.W1O),
                    e.YNc(16, ea, 1, 1, "ng-template", null, 5, e.W1O)),
                    2 & s && (e.xp6(1),
                    e.Q6J("ngIf", h.symbolLeft),
                    e.xp6(1),
                    e.Q6J("ngIf", h.symbolRight),
                    e.xp6(2),
                    e.Q6J("ngIf", h.symbolLeft),
                    e.xp6(1),
                    e.Q6J("ngIf", h.symbolRight),
                    e.xp6(1),
                    e.Q6J("ngIf", h.isMinMaxError),
                    e.xp6(2),
                    e.Q6J("disabled", h.isMinMaxError || h.isLoading),
                    e.xp6(1),
                    e.Oqu(e.lcZ(10, 8, "amount_filter.apply")),
                    e.xp6(3),
                    e.Oqu(e.lcZ(13, 10, "amount_filter.clear")))
                },
                dependencies: [Q.O5, Q.tP, Et.u5, Et.Fj, Et.wV, Et.JJ, Et.nD, Et.On, Ke.yl, ie.aw, ie.X$, Ke.O7],
                styles: ["[_nghost-%COMP%]{padding:1.09375rem;display:flex;align-items:center;flex-direction:column;gap:.4375rem}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{display:flex}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:flex}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{height:2.625rem;min-width:2.625rem;width:max-content;color:#818ea3;background-color:#f4f5f6;font-size:13px;margin-right:.125rem;border-radius:.375rem 0 0 .375rem;display:flex;align-items:center;justify-content:center}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   .symbol-left[_ngcontent-%COMP%]{background-color:#f4f5f6}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-left-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-radius:0 .375rem .375rem 0}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{height:2.625rem;min-width:2.625rem;width:max-content;text-overflow:ellipsis;padding-right:.5rem;color:#818ea3;background-color:#f4f5f6;font-size:13px;border-radius:0 .375rem .375rem 0;display:flex;align-items:center;justify-content:center}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   .symbol-right[_ngcontent-%COMP%]{background-color:#f4f5f6}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div.symbol-right-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-radius:.375rem 0 0 .375rem}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:2.625rem;width:7.25rem;background-color:#f4f5f6;border-radius:0 .375rem .375rem 0;padding-left:.625rem;border:none}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#142028}body.dark-theme   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#142028}body.light   [_nghost-%COMP%]   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light   [_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#f4f5f6}[_nghost-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;outline:none}[_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%]{display:flex;align-items:center;margin-top:.625rem;gap:.4375rem;width:100%}[_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{border-radius:3.125rem;border:none;height:1.875rem;padding:.3125rem .625rem;display:flex;justify-content:center;align-items:center;width:50%;font-size:13px}[_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.save[_ngcontent-%COMP%]{background-color:#00b8d8;color:#fff}[_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{color:#142028;background-color:#f4f5f6}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{color:#fff}body.dark-theme   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{color:#142028}body.light   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{color:#142028}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{background-color:#3a4956}body.dark-theme   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{background-color:#3a4956}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{background-color:#f4f5f6}body.light   [_nghost-%COMP%]   .buttons-container[_ngcontent-%COMP%] > button.clear[_ngcontent-%COMP%]{background-color:#f4f5f6}.min-max-error[_ngcontent-%COMP%]{font-size:.625rem;color:#ea3943;width:9.875rem}input[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button{-webkit-appearance:none;appearance:none;margin:0}input[type=number][_ngcontent-%COMP%]{-webkit-appearance:textfield;appearance:textfield}"],
                changeDetection: 0
            }),
            d
        }
        )();
        function na(d, y) {
            1 & d && e._UZ(0, "fa-icon", 5)
        }
        function He(d, y) {
            if (1 & d) {
                const s = e.EpF();
                e.ynx(0),
                e.TgZ(1, "li")(2, "button", 1),
                e.NdJ("click", function() {
                    const le = e.CHM(s).$implicit
                      , We = e.oxw();
                    return e.KtG(We.changeItemSelected(le))
                }),
                e.TgZ(3, "span", 2),
                e.YNc(4, na, 1, 0, "fa-icon", 3),
                e.qZA(),
                e.TgZ(5, "span", 4),
                e._uU(6),
                e.qZA()()(),
                e.BQk()
            }
            if (2 & d) {
                const s = y.$implicit
                  , h = e.oxw();
                e.xp6(2),
                e.Q6J("disabled", h.isLoading),
                e.xp6(2),
                e.Q6J("ngIf", h.itemSelected && s.value === h.itemSelected.value),
                e.xp6(2),
                e.Oqu(s.name)
            }
        }
        let ht = (()=>{
            class d {
                constructor(s) {
                    this._cdRef = s,
                    this.isLoading = !1,
                    this.itemList = [],
                    this.defaultSelected = null,
                    this.itemListSelected = new e.vpe,
                    this.itemSelected = null
                }
                trackByList(s) {
                    return s
                }
                ngAfterViewInit() {
                    this.itemSelected = this.defaultSelected ? this.itemList.find(s=>s.value === this.defaultSelected?.value) ?? null : this.itemList[0],
                    this._cdRef.detectChanges()
                }
                changeItemSelected(s) {
                    this.itemSelected = s,
                    this.itemListSelected.emit(s)
                }
            }
            return d.\u0275fac = function(s) {
                return new (s || d)(e.Y36(e.sBO))
            }
            ,
            d.\u0275cmp = e.Xpm({
                type: d,
                selectors: [["app-select-list"]],
                inputs: {
                    isLoading: "isLoading",
                    itemList: "itemList",
                    defaultSelected: "defaultSelected"
                },
                outputs: {
                    itemListSelected: "itemListSelected"
                },
                standalone: !0,
                features: [e.jDz],
                decls: 2,
                vars: 2,
                consts: [[4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "disabled", "click"], [1, "check-container"], ["icon", "check", 4, "ngIf"], [1, "name"], ["icon", "check"]],
                template: function(s, h) {
                    1 & s && (e.TgZ(0, "ul"),
                    e.YNc(1, He, 7, 3, "ng-container", 0),
                    e.qZA()),
                    2 & s && (e.xp6(1),
                    e.Q6J("ngForOf", h.itemList)("ngForTrackBy", h.trackByList))
                },
                dependencies: [Q.ax, Q.O5, n.uH, n.BN],
                styles: ["[_nghost-%COMP%]{padding:.625rem}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;flex-direction:column;list-style:none outside none;margin:0;-webkit-margin-before:0;margin-block-start:0;-webkit-margin-after:0;margin-block-end:0;-webkit-padding-start:0;padding-inline-start:0;gap:.5rem}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;background:none;display:flex;gap:.5rem;height:1.0625rem;width:100%}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{color:#142028;font-size:13px}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{color:#fff}body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{color:#fff}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{color:#142028}body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{color:#142028}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .check-container[_ngcontent-%COMP%]{width:1.25rem}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#818ea3;font-size:13px;font-weight:700}body.dark-theme   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#818ea3}body.dark-theme   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#818ea3}body.light   [_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{color:#818ea3}"],
                changeDetection: 0
            }),
            d
        }
        )();
        var ct = m(95698);
        const xo = "Copied"
          , oa = 1300;
        function Fo(d, y) {
            T.yK.copyToClipboard(d),
            null != y && y.ngbTooltip !== xo && function aa(d) {
                const y = d.openDelay
                  , s = d.closeDelay
                  , h = d.animation;
                d.animation = !1,
                d.closeDelay = 0,
                d.openDelay = 0;
                const E = d.ngbTooltip;
                d.close(),
                d.ngbTooltip = xo,
                d.shown.pipe((0,
                ct.q)(1), (0,
                jn.g)(oa)).subscribe(()=>{
                    d.close()
                }
                ),
                d.open(),
                d.hidden.pipe((0,
                ct.q)(1)).subscribe(()=>{
                    d.ngbTooltip = E,
                    d.openDelay = y,
                    d.closeDelay = s,
                    d.animation = h
                }
                )
            }(y)
        }
    }
    ,
    52413: (qe,ke,m)=>{
        "use strict";
        m.d(ke, {
            be: ()=>ie,
            gS: ()=>me,
            yK: ()=>Le,
            lM: ()=>ze,
            ti: ()=>n,
            rP: ()=>De,
            d$: ()=>N,
            _Z: ()=>x,
            VK: ()=>Ce,
            B3: ()=>T,
            C6: ()=>p,
            HR: ()=>ot,
            Ym: ()=>Ze,
            K9: ()=>D,
            _R: ()=>de,
            LC: ()=>Ge,
            k3: ()=>Ue,
            V8: ()=>It,
            HP: ()=>e,
            sL: ()=>Z
        });
        const o = (...Me)=>Me[0]
          , e = (Me={})=>(_,S,P)=>{
            if ("function" != typeof P.value)
                throw new TypeError("Memoization can be applied only to methods");
            const B = Me.resolver ?? o
              , X = Me.cache ?? new Map;
            if (null != Me.clearSignal && null == X.clear)
                throw new Error("Cache instance must implement the clear() method");
            return P.value = function R(Me, _, S, P) {
                const B = function(...X) {
                    const ce = _.apply(this, X)
                      , be = B.cache;
                    if (be.has(ce))
                        return be.get(ce);
                    const Ee = Me.apply(this, X);
                    return B.cache = be.set(ce, Ee) ?? be,
                    Ee
                };
                return B.cache = S,
                null != P && (B.clearSignal = P,
                B.clearSignal.subscribe(()=>{
                    B.cache.clear()
                }
                )),
                B
            }(P.value, B, X, "string" == typeof Me.clearSignal ? _[Me.clearSignal] : Me.clearSignal),
            P
        }
        ;
        var T = (()=>{
            return (Me = T || (T = {})).FULL = "full",
            Me.EXPANDED = "expanded",
            T;
            var Me
        }
        )();
        const ie = 8
          , n = "en-US"
          , ne = new Intl.NumberFormat(n)
          , re = ["\u2080", "\u2081", "\u2082", "\u2083", "\u2084", "\u2085", "\u2086", "\u2087", "\u2088", "\u2089"]
          , Oe = [{
            number: 1e9,
            suffix: "B"
        }, {
            number: 1e6,
            suffix: "M"
        }, {
            number: 1e3,
            suffix: "K"
        }];
        class p {
            static _getNumberFormatter(_) {
                return p._commonNumberFormatters[_] ?? new Intl.NumberFormat(n,{
                    minimumFractionDigits: _ + 1
                })
            }
            static generateRandomInt(_) {
                const S = Math.max(0, _);
                return Math.trunc(Math.random() * (S + 1))
            }
            static toFixed(_) {
                if (Math.abs(_) < 1) {
                    const S = Number.parseInt(Math.abs(_).toString().split("e-")[1]);
                    if (S) {
                        const P = S - 1
                          , B = _ * Math.pow(10, P);
                        return `0.${"0".repeat(P)}${B.toString().slice(2)}`
                    }
                } else {
                    const S = Number.parseInt(Math.abs(_).toString().split("+")[1]);
                    if (S > 20) {
                        const P = S - 20;
                        return `${_ / Math.pow(10, P)}${"0".repeat(P)}`
                    }
                }
                return _.toString()
            }
            static getOptimalDecimals(_) {
                const S = ((Math.floor(_) || "") + "").length;
                let P = S ? ie - S : -Math.floor(Math.log10(_) + 1);
                return S || (P = P ? Math.max(P + 2 + 1, ie) : ie),
                Math.max(0, Math.min(P, 14))
            }
            static shortPrice(_, S=10) {
                const P = p.toReadableNumber(_, null, S);
                return P && P.includes("...") ? P.slice(0, S + 2) : P ? P.slice(0, S) : ""
            }
            static shortenPrice(_, S=4) {
                return null == _ ? "" : _ >= 1 ? p.toReadableNumber(_) : p.formatNumbersWithLargeDecimals(_, S)
            }
            static formatNumbersWithLargeDecimals(_, S, P) {
                if (0 === _)
                    return "0";
                const X = p.toReadableNumber(_, T.FULL)
                  , ce = X ? `${Number.parseInt(X.split(".")[1])}` : ""
                  , be = -Math.floor(Math.log(_) / Math.log(10) + 1)
                  , Ee = S || 2;
                return "0" === X ? "0" : be > Ee ? "0.0" + p.getUnicodeValue(`${be}`) + ce.slice(0, P ?? 4) : p.formatNumber(_, S && be <= Ee ? P ?? be + 4 : P ?? 4)
            }
            static formatNumber(_, S) {
                const B = (S ? p._getNumberFormatter(S) : ne).format(_);
                return 0 === S ? B.split(".")[0] : S ? B.slice(0, Math.max(0, B.length - 1)) : B
            }
            static getUnicodeValue(_) {
                return "0" === _ ? re[0] : [..._.toString().replace(/^0+/, "")].map(P=>re[+P]).join("")
            }
            static toReadableNumber(_, S=null, P=2, B=30) {
                if (null === _ || Number.isNaN(_) || "" === String(_).trim())
                    return "";
                const X = Math.floor(+_)
                  , ce = (X || "").toString().length;
                return S === T.FULL ? p._displayFull(+_, X, !!ce) : p._displayableNumber(+_, X, ce, S === T.EXPANDED, P, B)
            }
            static roundBigNumber(_="") {
                const S = "number" == typeof _ ? _ : Number(_.replace(/,/g, ""))
                  , P = Math.sign(S)
                  , B = Oe.find(X=>Math.abs(S) >= X.number);
                return B ? `${P < 0 ? "-" : ""}${(Math.abs(S) / B.number).toFixed(3).slice(0, -1)}${B.suffix}` : `${S}`
            }
            static roundPrice(_="", S=2) {
                const P = "number" == typeof _ ? _ : Number(_.replace(/,/g, ""));
                return p.transformNumber(P, S)
            }
            static _displayableNumber(_, S, P, B, X=2, ce=30, be=n) {
                if (P) {
                    if (S.toString().split("e")[1])
                        return _.toLocaleString(be);
                    {
                        const Ee = Math.max(0, 6 - P);
                        return (+_.toFixed(Ee)).toLocaleString(be, {
                            minimumFractionDigits: Ee < X ? Ee : X,
                            maximumFractionDigits: Ee
                        })
                    }
                }
                {
                    const Ee = 0 === _ ? 0 : P ? 6 - P : -Math.floor(Math.log(_) / Math.log(10) + 1)
                      , Be = Math.min(Math.max(Ee + X + 2, 6), 20)
                      , Fe = (+_.toFixed(Math.max(0, Math.min(Be, ce)))).toLocaleString(be, {
                        minimumFractionDigits: X,
                        maximumFractionDigits: Be
                    });
                    return Ee < 4 || B ? Fe : Fe.slice(0, 3) + "..." + Fe.slice(-Fe.length + Ee)
                }
            }
            static _displayFull(_, S, P, B=n) {
                return P && S.toString().split("e")[1] ? p.toFixed(_) : _.toLocaleString(B, {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 20
                })
            }
            static transformNumber(_, S, P) {
                let B;
                switch (!0) {
                case _ > 1e5:
                    B = p.formatNumber(Math.trunc(_));
                    break;
                case _ > 100 && _ < 1e5:
                    B = p.formatNumber(_, P ?? 2);
                    break;
                case _ > 1 && _ < 100:
                    B = p.formatNumber(_, P ?? 4);
                    break;
                case _ < 1:
                    B = p.formatNumbersWithLargeDecimals(_, S, P);
                    break;
                default:
                    B = p.formatNumber(Math.trunc(_))
                }
                return B
            }
        }
        p._commonNumberFormatters = {
            2: new Intl.NumberFormat(n,{
                minimumFractionDigits: 3
            }),
            4: new Intl.NumberFormat(n,{
                minimumFractionDigits: 5
            }),
            5: new Intl.NumberFormat(n,{
                minimumFractionDigits: 6
            }),
            6: new Intl.NumberFormat(n,{
                minimumFractionDigits: 7
            }),
            7: new Intl.NumberFormat(n,{
                minimumFractionDigits: 8
            }),
            8: new Intl.NumberFormat(n,{
                minimumFractionDigits: 9
            }),
            10: new Intl.NumberFormat(n,{
                minimumFractionDigits: 11
            })
        };
        class me {
            static getRandomItem(_) {
                return _ && _[p.generateRandomInt(_.length - 1)]
            }
            static unique(_, S, P) {
                return P.indexOf(_) === S
            }
            static binarySearch(_, S, P) {
                let B = 0
                  , X = _.length - 1
                  , ce = -1;
                if (0 === _.length)
                    return ce;
                if (_[0][P] === S || _[_.length - 1][P] === S)
                    return _[0][P] === S ? 0 : _.length - 1;
                for (; B <= X; ) {
                    if (ce = Math.floor((B + X) / 2),
                    _[ce][P] === S)
                        return ce;
                    if (B === X - 1 && _[X][P] > S)
                        return B;
                    _[ce][P] < S ? B = ce + 1 : X = ce - 1
                }
                return ce
            }
            static concatLargeArray(_, S, P) {
                if (0 === S.length)
                    return;
                let B = !1
                  , X = !0;
                _.length > 0 && _[0][P] > S[S.length - 1][P] ? (B = !0,
                X = !1) : _.length > 0 && _[_.length - 1][P] < S[0][P] && (B = !1,
                X = !1);
                let be = 0;
                const Ee = [];
                for (; be < S.length; ) {
                    const Be = S.slice(be, be + 3e4);
                    B || X ? Ee.push(Be) : _.push(...Be),
                    be += Be.length
                }
                if (B || X) {
                    Ee.reverse();
                    let Be = -1;
                    if (B || 0 === _.length)
                        for (const Fe of Ee)
                            _.unshift(...Fe);
                    else
                        for (const Fe of Ee)
                            Be = me.binarySearch(_, Fe[0][P], P),
                            Be = 0 === Be ? Be : Be + 1,
                            _.splice(Be, 0, ...Fe)
                }
            }
            static removeDuplicatesByKey(_, S, P) {
                return _ && 0 !== _.length ? _.filter(B=>!S.some(X=>B[P] === X[P])) : []
            }
            static maxNumber(_, S) {
                return Math.max(..._.map(P=>P[S]))
            }
            static minNumber(_, S) {
                return Math.min(..._.map(P=>P[S]))
            }
        }
        class Le {
            static copyToClipboard(_) {
                try {
                    navigator.clipboard ? navigator.clipboard.writeText(_).then() : Le.fallbackCopyToClipboard(_),
                    null != window.JSInterface && window.JSInterface.copyClipboard(_)
                } catch (S) {
                    return console.warn(`Error: failed to copy text to clipboard. ${S}`)
                }
            }
            static fallbackCopyToClipboard(_) {
                const S = document.createElement("textarea");
                document.body.append(S),
                S.value = _,
                S.select(),
                document.execCommand("copy"),
                S.remove()
            }
        }
        class ze {
            static deepMerge(..._) {
                let S = {};
                for (const P of _)
                    if (Array.isArray(P))
                        Array.isArray(S) || (S = []),
                        S = [...S, ...P];
                    else if (P instanceof Object)
                        for (let[B,X] of Object.entries(P))
                            X instanceof Object && B in S && (X = ze.deepMerge(S[B], X)),
                            S = {
                                ...S,
                                [B]: X
                            };
                return S
            }
            static keyToEnum(_, S) {
                const P = Object.keys(_).indexOf(S);
                return -1 === P ? void 0 : _[Object.keys(_)[P]]
            }
            static valueToEnum(_, S) {
                const P = Object.values(_).indexOf(S);
                return -1 === P ? void 0 : _[Object.keys(_)[P]]
            }
            static convertEnumToArray(_) {
                const S = [];
                for (const P in _)
                    S.push(_[P]);
                return S
            }
            static isMobileDevice() {
                return void 0 !== window.orientation || navigator.userAgent.includes("IEMobile")
            }
            static stripFalsyProperties(_) {
                for (const S of Object.keys(_))
                    !_[S] && delete _[S]
            }
            static hexToRGB(_, S) {
                _ = _.replace("#", "");
                const P = Number.parseInt(3 === _.length ? _.slice(0, 1).repeat(2) : _.slice(0, 2), 16)
                  , B = Number.parseInt(3 === _.length ? _.slice(1, 2).repeat(2) : _.slice(2, 4), 16)
                  , X = Number.parseInt(3 === _.length ? _.slice(2, 3).repeat(2) : _.slice(4, 6), 16);
                return S ? "rgba(" + P + ", " + B + ", " + X + ", " + S + ")" : "rgb(" + P + ", " + B + ", " + X + ")"
            }
            static calculateVariationPrice(_, S) {
                return 100 * S / _ - 100
            }
        }
        var nt = m(69751);
        class N {
            static isIntersectionObserverSupported(_) {
                return "IntersectionObserver"in _ && "IntersectionObserverEntry"in _ && ("intersectionRatio"in _.IntersectionObserverEntry.prototype || "THROTTLE_TIMEOUT"in _.IntersectionObserver.prototype)
            }
            static observeElementIntersection(_, S={}) {
                return new nt.y(P=>{
                    const B = new IntersectionObserver(X=>{
                        P.next(X)
                    }
                    ,S);
                    return B.observe(_),
                    ()=>{
                        B.unobserve(_),
                        P.complete()
                    }
                }
                )
            }
        }
        var F = m(99704)
          , L = m.n(F);
        const ee = "compressed: ";
        class x {
            static getString(_) {
                return localStorage.getItem(_)
            }
            static getStringCompressed(_) {
                const S = localStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S);
                return P && x._isValueCompressed(P) ? x._removeCompressedPrefix(P) : S
            }
            static setString(_, S) {
                return localStorage.setItem(_, S),
                S
            }
            static setStringCompressed(_, S) {
                return localStorage.setItem(_, L().compress(ee + S)),
                S
            }
            static get(_) {
                const S = localStorage.getItem(_);
                return null == S ? null : JSON.parse(S)
            }
            static getCompressed(_) {
                const S = localStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S);
                if (x._isValueCompressed(P)) {
                    if (null != P)
                        return JSON.parse(x._removeCompressedPrefix(P))
                } else if (null != P)
                    return JSON.parse(S);
                return null
            }
            static set(_, S) {
                return localStorage.setItem(_, JSON.stringify(S)),
                S
            }
            static setCompressed(_, S) {
                return localStorage.setItem(_, L().compress(ee + JSON.stringify(S))),
                S
            }
            static merge(_, S) {
                const P = localStorage.getItem(_)
                  , B = null == P ? null : L().decompress(P)
                  , X = x._isValueCompressed(B)
                  , ce = X ? x._removeCompressedPrefix(B) : P
                  , be = JSON.stringify({
                    ...ce && JSON.parse(ce),
                    ...S
                });
                X ? localStorage.setItem(_, L().compress(ee + be)) : localStorage.setItem(_, be)
            }
            static getDate(_) {
                const S = localStorage.getItem(_);
                return null == S ? null : new Date(+S)
            }
            static setDate(_, S=new Date) {
                return null == S ? x.delete(_) : localStorage.setItem(_, `${S.getTime()}`),
                S
            }
            static getDateCompressed(_) {
                const S = localStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S);
                return null == P ? null : x._isValueCompressed(P) ? new Date(+x._removeCompressedPrefix(P)) : new Date(+S)
            }
            static setDateCompressed(_, S=new Date) {
                return null == S ? x.delete(_) : localStorage.setItem(_, L().compress(ee + `${S.getTime()}`)),
                S
            }
            static delete(_) {
                localStorage.removeItem(_)
            }
            static getMap(_) {
                const S = localStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S)
                  , B = x._isValueCompressed(P) ? x._removeCompressedPrefix(P) : S;
                return B && new Map(Object.entries(JSON.parse(B))) || new Map
            }
            static addToMap(_, S, P, B=!1) {
                const X = new Map([[S, P]]);
                let ce = x.getMap(_);
                return ce = new Map([...ce, ...X]),
                x.setMap(_, ce, B),
                ce
            }
            static mergeToMap(_, S) {
                let P = x.getMap(_);
                return P = new Map([...P, ...S]),
                x.setMap(_, P),
                P
            }
            static removeFromMap(_, S) {
                const P = x.getMap(_);
                return P.delete(S),
                x.setMap(_, P),
                P
            }
            static setMap(_, S, P=!1) {
                if (S) {
                    const B = {};
                    for (const [X,ce] of S.entries())
                        B[X] = ce;
                    x._setItem(_, B, P)
                } else
                    x.delete(_);
                return S
            }
            static _setItem(_, S, P=!1) {
                const B = localStorage.getItem(_)
                  , X = null == B ? null : L().decompress(B);
                x._isValueCompressed(X) || P ? localStorage.setItem(_, L().compress(ee + JSON.stringify(S))) : localStorage.setItem(_, JSON.stringify(S))
            }
            static _isValueCompressed(_) {
                return null != _ && _.includes(ee, 0)
            }
            static _removeCompressedPrefix(_) {
                return null == _ ? null : _.replace(ee, "")
            }
        }
        const V = "compressed: ";
        class de {
            static getString(_) {
                return sessionStorage.getItem(_)
            }
            static getStringCompressed(_) {
                const S = sessionStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S);
                return P && de._isValueCompressed(P) ? de._removeCompressedPrefix(P) : S
            }
            static setString(_, S) {
                return sessionStorage.setItem(_, S),
                S
            }
            static setStringCompressed(_, S) {
                return sessionStorage.setItem(_, L().compress(V + S)),
                S
            }
            static get(_) {
                const S = sessionStorage.getItem(_);
                return null == S ? null : JSON.parse(S)
            }
            static getCompressed(_) {
                const S = sessionStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S);
                if (de._isValueCompressed(P)) {
                    if (null != P)
                        return JSON.parse(de._removeCompressedPrefix(P))
                } else if (null != P)
                    return JSON.parse(S);
                return null
            }
            static set(_, S) {
                return sessionStorage.setItem(_, JSON.stringify(S)),
                S
            }
            static setCompressed(_, S) {
                return sessionStorage.setItem(_, L().compress(V + JSON.stringify(S))),
                S
            }
            static merge(_, S) {
                const P = sessionStorage.getItem(_)
                  , B = null == P ? null : L().decompress(P)
                  , X = de._isValueCompressed(B)
                  , ce = X ? de._removeCompressedPrefix(B) : P
                  , be = JSON.stringify({
                    ...ce && JSON.parse(ce),
                    ...S
                });
                X ? sessionStorage.setItem(_, L().compress(V + be)) : sessionStorage.setItem(_, be)
            }
            static getDate(_) {
                const S = sessionStorage.getItem(_);
                return null == S ? null : new Date(+S)
            }
            static setDate(_, S=new Date) {
                return null == S ? de.delete(_) : sessionStorage.setItem(_, `${S.getTime()}`),
                S
            }
            static getDateCompressed(_) {
                const S = sessionStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S);
                return null == P ? null : de._isValueCompressed(P) ? new Date(+de._removeCompressedPrefix(P)) : new Date(+S)
            }
            static setDateCompressed(_, S=new Date) {
                return null == S ? de.delete(_) : sessionStorage.setItem(_, L().compress(V + `${S.getTime()}`)),
                S
            }
            static delete(_) {
                sessionStorage.removeItem(_)
            }
            static getMap(_) {
                const S = sessionStorage.getItem(_)
                  , P = null == S ? null : L().decompress(S)
                  , B = de._isValueCompressed(P) ? de._removeCompressedPrefix(P) : S;
                return B && new Map(Object.entries(JSON.parse(B))) || new Map
            }
            static addToMap(_, S, P, B=!1) {
                const X = new Map([[S, P]]);
                let ce = de.getMap(_);
                return ce = new Map([...ce, ...X]),
                de.setMap(_, ce, B),
                ce
            }
            static mergeToMap(_, S) {
                let P = de.getMap(_);
                return P = new Map([...P, ...S]),
                de.setMap(_, P),
                P
            }
            static removeFromMap(_, S) {
                const P = de.getMap(_);
                return P.delete(S),
                de.setMap(_, P),
                P
            }
            static setMap(_, S, P=!1) {
                if (S) {
                    const B = {};
                    for (const [X,ce] of S.entries())
                        B[X] = ce;
                    de._setItem(_, B, P)
                } else
                    de.delete(_);
                return S
            }
            static _setItem(_, S, P=!1) {
                const B = sessionStorage.getItem(_)
                  , X = null == B ? null : L().decompress(B);
                de._isValueCompressed(X) || P ? sessionStorage.setItem(_, L().compress(V + JSON.stringify(S))) : sessionStorage.setItem(_, JSON.stringify(S))
            }
            static _isValueCompressed(_) {
                return null != _ && _.includes(V, 0)
            }
            static _removeCompressedPrefix(_) {
                return null == _ ? null : _.replace(V, "")
            }
        }
        var fe = m(82722)
          , Pe = m(4707)
          , ge = m(95577)
          , Ie = m(48382)
          , st = m(39646)
          , j = m(4326)
          , pe = m(94650);
        const ue = new WeakMap;
        let D = (()=>{
            class Me {
                ngOnDestroy() {
                    (function ye(Me) {
                        if (null != Me) {
                            const _ = ue.get(Me);
                            null != _ && (_.next(),
                            _.complete()),
                            ue.delete(Me)
                        }
                    }
                    )(this),
                    this.onDestroy()
                }
            }
            return Me.\u0275fac = function(S) {
                return new (S || Me)
            }
            ,
            Me.\u0275prov = pe.Yz7({
                token: Me,
                factory: Me.\u0275fac,
                providedIn: null
            }),
            Me
        }
        )();
        function Z(Me, _) {
            return (0,
            fe.R)(function we(Me, _) {
                const S = ue.get(Me);
                if (null != S)
                    return S.asObservable();
                const P = new Pe.t(1);
                return ue.set(Me, P),
                P.asObservable().pipe((0,
                ge.z)(B=>(0,
                Ie.s)(()=>null != _, (0,
                st.of)(B).pipe((0,
                j.g)(_)), (0,
                st.of)(B))))
            }(Me, _))
        }
        class Ge {
            static safeText(_, S=30, P=[]) {
                const X = [{
                    char: "&",
                    entity: "&amp;"
                }, {
                    char: "<",
                    entity: "&lt;"
                }, {
                    char: ">",
                    entity: "&gt;"
                }, {
                    char: "'",
                    entity: "&quot;"
                }].filter(be=>!P.includes(be.char));
                let ce = `${_}`;
                for (const be of X) {
                    const Ee = new RegExp(be.char,"g");
                    ce = ce.replace(Ee, be.entity)
                }
                return ce.slice(0, S).trim()
            }
            static hasEmojis(_) {
                return this.REGEX_IS_EMOJI.test(_)
            }
            static revertHtmlEntities(_) {
                return _.replace(/(&quot;)|(&#039;)/g, "'").replace(/&amp;/g, "&")
            }
            static ellipsis(_, S, P="...") {
                return _.length > S ? `${_.slice(0, S)}${P.length > 0 ? P : "..."}` : _
            }
        }
        Ge.REGEX_IS_EMOJI = /\p{Extended_Pictographic}/u,
        Ge.REGEX_ONLY_REAL = /^(\d+|\d{1,3}(,\d{3})*)?(\.\d+)?$/,
        Ge.REGEX_SAFE_STRING = new RegExp("<\\/?[a-z][\\s\\S]*>","g"),
        Ge.REGEX_HEX_COLOR = /^#([\dA-Fa-f]{6}|[\dA-Fa-f]{3})$/;
        const Ce = 6e4
          , De = 60 * Ce
          , ot = 24 * De
          , Ze = 86400
          , $e = 30 * Ze
          , je = 12 * $e;
        class Ue {
            static roundToMinuteRange(_, S, P=!1) {
                return (P ? Math.ceil : Math.floor)(_ / Ce / +S) * Ce * +S
            }
            static getCurrentDateSeconds() {
                return Math.round(Date.now() / 1e3)
            }
            static getTimestampMinute(_, S=!1) {
                const P = new Date(+_)
                  , B = P.getMonth() + 1 + "/" + P.getDate() + "/" + P.getFullYear() + " " + ("0" + P.getHours()).slice(-2) + ":" + ("0" + P.getMinutes()).slice(-2);
                return S ? B : new Date(B).getTime()
            }
            static secondsToHms(_) {
                _ = Number(_);
                const S = Math.floor(_ / 3600)
                  , P = Math.floor(_ % 3600 / 60)
                  , B = Math.floor(_ % 3600 % 60);
                return (S > 0 ? S + " h " : "") + (P > 0 ? P + " m " : "") + (B > 0 ? B + " s" : "")
            }
            static secondsToDayHoursMinutesSeconds(_) {
                _ = Number(_);
                const S = Math.floor(_ / je)
                  , P = Math.floor(_ / $e)
                  , B = Math.floor(_ / Ze)
                  , X = Math.floor(_ / 3600)
                  , ce = Math.floor(_ % 3600 / 60)
                  , be = Math.floor(_ % 3600 % 60);
                return (S > 0 ? S + (1 === S ? " year " : " years ") : "") + (S < 1 && P > 0 ? P + (1 === P ? " month " : " months ") : "") + (P < 1 && B > 0 ? B + (1 === X ? " day " : " days ") : "") + (B < 1 && X > 0 ? X + " h " : "") + (X < 1 && ce > 0 ? ce + " m " : "") + (X < 1 && ce < 1 && be > 0 ? be + " s" : "")
            }
            static timeUnitAndInterval(_) {
                _ = Number(_);
                const S = Math.floor(_ / je)
                  , P = Math.floor(_ / $e)
                  , B = Math.floor(_ / Ze)
                  , X = Math.floor(_ / 3600)
                  , ce = Math.floor(_ % 3600 / 60);
                return (S > 0 ? {
                    timeUnit: S,
                    interval: "years"
                } : null) || (P < 1 && B > 0 ? {
                    timeUnit: B,
                    interval: "days"
                } : null) || (B < 1 && X > 0 ? {
                    timeUnit: X,
                    interval: "hours"
                } : null) || (X < 1 && ce > 0 ? {
                    timeUnit: ce,
                    interval: "minutes"
                } : null) || (S < 1 && P > 0 ? {
                    timeUnit: P,
                    interval: "months"
                } : null)
            }
            static getDaysFromDate(_, S) {
                return +_ + ot * S
            }
            static formatDate(_, S) {
                if (null == _ || !(_ instanceof Date) && "string" != typeof _ || "string" == typeof _ && 0 === _.length)
                    return "";
                const P = "string" == typeof _ ? new Date(Date.parse(_)) : _;
                if (Number.isNaN(P.getTime()))
                    return "invalid date string";
                switch (S) {
                case "YYYY":
                    return `${P.getFullYear()}`;
                case "MM":
                    return Ue._getFullMonthFromDate(P);
                case "YYYY-MM-DD HH:mm:ss":
                    {
                        let B = `${P.getFullYear()}-${Ue._getFullMonthFromDate(P)}-${Ue._addLeadingZeroToDatePart(P.getDate())}`;
                        return B += ` ${Ue._addLeadingZeroToDatePart(P.getHours())}:${Ue._addLeadingZeroToDatePart(P.getMinutes())}:${Ue._addLeadingZeroToDatePart(P.getSeconds())}`,
                        B
                    }
                case "YYYY-MM-DD":
                    return `${P.getFullYear()}-${Ue._getFullMonthFromDate(P)}-${Ue._addLeadingZeroToDatePart(P.getDate())}`;
                case "HH:mm:ss":
                    return `${Ue._addLeadingZeroToDatePart(P.getHours())}:${Ue._addLeadingZeroToDatePart(P.getMinutes())}:${Ue._addLeadingZeroToDatePart(P.getSeconds())}`;
                case "mm:ss":
                    return `${Ue._addLeadingZeroToDatePart(P.getMinutes())}:${Ue._addLeadingZeroToDatePart(P.getSeconds())}`;
                case "DD/MM/YYYY":
                    return `${Ue._addLeadingZeroToDatePart(P.getDate())}/${Ue._getFullMonthFromDate(P)}/${P.getFullYear()}`;
                case "DD/MM/YYYY HH:mm":
                    return `${Ue._addLeadingZeroToDatePart(P.getDate())}/${Ue._getFullMonthFromDate(P)}/${P.getFullYear()} ${Ue._addLeadingZeroToDatePart(P.getHours())}:${Ue._addLeadingZeroToDatePart(P.getMinutes())}`;
                case "MMMM DD HH:mm:ss":
                    {
                        const [B,X,ce] = P.toLocaleString("en-US", {
                            month: "short",
                            day: "numeric",
                            hour: "numeric",
                            minute: "numeric",
                            second: "numeric",
                            hourCycle: "h23"
                        }).replace(/,| at/, "").split(" ");
                        return `${B} ${X} ${ce}`
                    }
                default:
                    return "invalid format"
                }
            }
            static _addLeadingZeroToDatePart(_) {
                return `0 ${"string" == typeof _ ? _ : `${_}`}`.slice(-2)
            }
            static _getFullMonthFromDate(_) {
                return Ue._addLeadingZeroToDatePart(_.getMonth() + 1)
            }
        }
        class It {
            static normalizeUrl(_) {
                return _ && _.trim() ? _.startsWith("http://") || _.startsWith("https://") ? _ : `https://${_.replace(/^https?:/, "")}` : ""
            }
        }
    }
    ,
    42480: ()=>{}
}, qe=>{
    qe.O(0, [4736], ()=>qe(qe.s = 19765)),
    qe.O()
}
]);
